ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"queue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "FreeRTOS/Source/queue.c"
  20              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	prvGetDisinheritPriorityAfterTimeout:
  27              	.LVL0:
  28              	.LFB28:
   1:FreeRTOS/Source/queue.c **** /*
   2:FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.5.1
   3:FreeRTOS/Source/queue.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:FreeRTOS/Source/queue.c ****  *
   5:FreeRTOS/Source/queue.c ****  * SPDX-License-Identifier: MIT
   6:FreeRTOS/Source/queue.c ****  *
   7:FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
  10:FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  13:FreeRTOS/Source/queue.c ****  *
  14:FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  15:FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  16:FreeRTOS/Source/queue.c ****  *
  17:FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:FreeRTOS/Source/queue.c ****  *
  24:FreeRTOS/Source/queue.c ****  * https://www.FreeRTOS.org
  25:FreeRTOS/Source/queue.c ****  * https://github.com/FreeRTOS
  26:FreeRTOS/Source/queue.c ****  *
  27:FreeRTOS/Source/queue.c ****  */
  28:FreeRTOS/Source/queue.c **** 
  29:FreeRTOS/Source/queue.c **** #include <stdlib.h>
  30:FreeRTOS/Source/queue.c **** #include <string.h>
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 2


  31:FreeRTOS/Source/queue.c **** 
  32:FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:FreeRTOS/Source/queue.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  34:FreeRTOS/Source/queue.c ****  * task.h is included from an application file. */
  35:FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:FreeRTOS/Source/queue.c **** 
  37:FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  38:FreeRTOS/Source/queue.c **** #include "task.h"
  39:FreeRTOS/Source/queue.c **** #include "queue.h"
  40:FreeRTOS/Source/queue.c **** 
  41:FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  42:FreeRTOS/Source/queue.c ****     #include "croutine.h"
  43:FreeRTOS/Source/queue.c **** #endif
  44:FreeRTOS/Source/queue.c **** 
  45:FreeRTOS/Source/queue.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  46:FreeRTOS/Source/queue.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  47:FreeRTOS/Source/queue.c ****  * for the header files above, but not in this file, in order to generate the
  48:FreeRTOS/Source/queue.c ****  * correct privileged Vs unprivileged linkage and placement. */
  49:FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  50:FreeRTOS/Source/queue.c **** 
  51:FreeRTOS/Source/queue.c **** 
  52:FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  53:FreeRTOS/Source/queue.c **** #define queueUNLOCKED             ( ( int8_t ) -1 )
  54:FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED    ( ( int8_t ) 0 )
  55:FreeRTOS/Source/queue.c **** #define queueINT8_MAX             ( ( int8_t ) 127 )
  56:FreeRTOS/Source/queue.c **** 
  57:FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  58:FreeRTOS/Source/queue.c ****  * pcTail members are used as pointers into the queue storage area.  When the
  59:FreeRTOS/Source/queue.c ****  * Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  60:FreeRTOS/Source/queue.c ****  * not necessary, and the pcHead pointer is set to NULL to indicate that the
  61:FreeRTOS/Source/queue.c ****  * structure instead holds a pointer to the mutex holder (if any).  Map alternative
  62:FreeRTOS/Source/queue.c ****  * names to the pcHead and structure member to ensure the readability of the code
  63:FreeRTOS/Source/queue.c ****  * is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  64:FreeRTOS/Source/queue.c ****  * a union as their usage is mutually exclusive dependent on what the queue is
  65:FreeRTOS/Source/queue.c ****  * being used for. */
  66:FreeRTOS/Source/queue.c **** #define uxQueueType               pcHead
  67:FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX       NULL
  68:FreeRTOS/Source/queue.c **** 
  69:FreeRTOS/Source/queue.c **** typedef struct QueuePointers
  70:FreeRTOS/Source/queue.c **** {
  71:FreeRTOS/Source/queue.c ****     int8_t * pcTail;     /*< Points to the byte at the end of the queue storage area.  Once more by
  72:FreeRTOS/Source/queue.c ****     int8_t * pcReadFrom; /*< Points to the last place that a queued item was read from when the str
  73:FreeRTOS/Source/queue.c **** } QueuePointers_t;
  74:FreeRTOS/Source/queue.c **** 
  75:FreeRTOS/Source/queue.c **** typedef struct SemaphoreData
  76:FreeRTOS/Source/queue.c **** {
  77:FreeRTOS/Source/queue.c ****     TaskHandle_t xMutexHolder;        /*< The handle of the task that holds the mutex. */
  78:FreeRTOS/Source/queue.c ****     UBaseType_t uxRecursiveCallCount; /*< Maintains a count of the number of times a recursive mute
  79:FreeRTOS/Source/queue.c **** } SemaphoreData_t;
  80:FreeRTOS/Source/queue.c **** 
  81:FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  82:FreeRTOS/Source/queue.c ****  * zero. */
  83:FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH    ( ( UBaseType_t ) 0 )
  84:FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME          ( ( TickType_t ) 0U )
  85:FreeRTOS/Source/queue.c **** 
  86:FreeRTOS/Source/queue.c **** #if ( configUSE_PREEMPTION == 0 )
  87:FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 3


  88:FreeRTOS/Source/queue.c **** /* If the cooperative scheduler is being used then a yield should not be
  89:FreeRTOS/Source/queue.c ****  * performed just because a higher priority task has been woken. */
  90:FreeRTOS/Source/queue.c ****     #define queueYIELD_IF_USING_PREEMPTION()
  91:FreeRTOS/Source/queue.c **** #else
  92:FreeRTOS/Source/queue.c ****     #define queueYIELD_IF_USING_PREEMPTION()    portYIELD_WITHIN_API()
  93:FreeRTOS/Source/queue.c **** #endif
  94:FreeRTOS/Source/queue.c **** 
  95:FreeRTOS/Source/queue.c **** /*
  96:FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  97:FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  98:FreeRTOS/Source/queue.c ****  * rationale: https://www.FreeRTOS.org/Embedded-RTOS-Queues.html
  99:FreeRTOS/Source/queue.c ****  */
 100:FreeRTOS/Source/queue.c **** typedef struct QueueDefinition /* The old naming convention is used to prevent breaking kernel awar
 101:FreeRTOS/Source/queue.c **** {
 102:FreeRTOS/Source/queue.c ****     int8_t * pcHead;           /*< Points to the beginning of the queue storage area. */
 103:FreeRTOS/Source/queue.c ****     int8_t * pcWriteTo;        /*< Points to the free next place in the storage area. */
 104:FreeRTOS/Source/queue.c **** 
 105:FreeRTOS/Source/queue.c ****     union
 106:FreeRTOS/Source/queue.c ****     {
 107:FreeRTOS/Source/queue.c ****         QueuePointers_t xQueue;     /*< Data required exclusively when this structure is used as a 
 108:FreeRTOS/Source/queue.c ****         SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a 
 109:FreeRTOS/Source/queue.c ****     } u;
 110:FreeRTOS/Source/queue.c **** 
 111:FreeRTOS/Source/queue.c ****     List_t xTasksWaitingToSend;             /*< List of tasks that are blocked waiting to post onto
 112:FreeRTOS/Source/queue.c ****     List_t xTasksWaitingToReceive;          /*< List of tasks that are blocked waiting to read from
 113:FreeRTOS/Source/queue.c **** 
 114:FreeRTOS/Source/queue.c ****     volatile UBaseType_t uxMessagesWaiting; /*< The number of items currently in the queue. */
 115:FreeRTOS/Source/queue.c ****     UBaseType_t uxLength;                   /*< The length of the queue defined as the number of it
 116:FreeRTOS/Source/queue.c ****     UBaseType_t uxItemSize;                 /*< The size of each items that the queue will hold. */
 117:FreeRTOS/Source/queue.c **** 
 118:FreeRTOS/Source/queue.c ****     volatile int8_t cRxLock;                /*< Stores the number of items received from the queue 
 119:FreeRTOS/Source/queue.c ****     volatile int8_t cTxLock;                /*< Stores the number of items transmitted to the queue
 120:FreeRTOS/Source/queue.c **** 
 121:FreeRTOS/Source/queue.c ****     #if ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 122:FreeRTOS/Source/queue.c ****         uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the memory used by the queue was static
 123:FreeRTOS/Source/queue.c ****     #endif
 124:FreeRTOS/Source/queue.c **** 
 125:FreeRTOS/Source/queue.c ****     #if ( configUSE_QUEUE_SETS == 1 )
 126:FreeRTOS/Source/queue.c ****         struct QueueDefinition * pxQueueSetContainer;
 127:FreeRTOS/Source/queue.c ****     #endif
 128:FreeRTOS/Source/queue.c **** 
 129:FreeRTOS/Source/queue.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 130:FreeRTOS/Source/queue.c ****         UBaseType_t uxQueueNumber;
 131:FreeRTOS/Source/queue.c ****         uint8_t ucQueueType;
 132:FreeRTOS/Source/queue.c ****     #endif
 133:FreeRTOS/Source/queue.c **** } xQUEUE;
 134:FreeRTOS/Source/queue.c **** 
 135:FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 136:FreeRTOS/Source/queue.c ****  * name below to enable the use of older kernel aware debuggers. */
 137:FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 138:FreeRTOS/Source/queue.c **** 
 139:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 140:FreeRTOS/Source/queue.c **** 
 141:FreeRTOS/Source/queue.c **** /*
 142:FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 143:FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 144:FreeRTOS/Source/queue.c ****  */
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 4


 145:FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 146:FreeRTOS/Source/queue.c **** 
 147:FreeRTOS/Source/queue.c **** /* The type stored within the queue registry array.  This allows a name
 148:FreeRTOS/Source/queue.c ****  * to be assigned to each queue making kernel aware debugging a little
 149:FreeRTOS/Source/queue.c ****  * more user friendly. */
 150:FreeRTOS/Source/queue.c ****     typedef struct QUEUE_REGISTRY_ITEM
 151:FreeRTOS/Source/queue.c ****     {
 152:FreeRTOS/Source/queue.c ****         const char * pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and s
 153:FreeRTOS/Source/queue.c ****         QueueHandle_t xHandle;
 154:FreeRTOS/Source/queue.c ****     } xQueueRegistryItem;
 155:FreeRTOS/Source/queue.c **** 
 156:FreeRTOS/Source/queue.c **** /* The old xQueueRegistryItem name is maintained above then typedefed to the
 157:FreeRTOS/Source/queue.c ****  * new xQueueRegistryItem name below to enable the use of older kernel aware
 158:FreeRTOS/Source/queue.c ****  * debuggers. */
 159:FreeRTOS/Source/queue.c ****     typedef xQueueRegistryItem QueueRegistryItem_t;
 160:FreeRTOS/Source/queue.c **** 
 161:FreeRTOS/Source/queue.c **** /* The queue registry is simply an array of QueueRegistryItem_t structures.
 162:FreeRTOS/Source/queue.c ****  * The pcQueueName member of a structure being NULL is indicative of the
 163:FreeRTOS/Source/queue.c ****  * array position being vacant. */
 164:FreeRTOS/Source/queue.c ****     PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 165:FreeRTOS/Source/queue.c **** 
 166:FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 167:FreeRTOS/Source/queue.c **** 
 168:FreeRTOS/Source/queue.c **** /*
 169:FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 170:FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 171:FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 172:FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 173:FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 174:FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 175:FreeRTOS/Source/queue.c ****  */
 176:FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 177:FreeRTOS/Source/queue.c **** 
 178:FreeRTOS/Source/queue.c **** /*
 179:FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 180:FreeRTOS/Source/queue.c ****  *
 181:FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 182:FreeRTOS/Source/queue.c ****  */
 183:FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue ) PRIVILEGED_FUNCTION;
 184:FreeRTOS/Source/queue.c **** 
 185:FreeRTOS/Source/queue.c **** /*
 186:FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 187:FreeRTOS/Source/queue.c ****  *
 188:FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 189:FreeRTOS/Source/queue.c ****  */
 190:FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t * pxQueue ) PRIVILEGED_FUNCTION;
 191:FreeRTOS/Source/queue.c **** 
 192:FreeRTOS/Source/queue.c **** /*
 193:FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 194:FreeRTOS/Source/queue.c ****  * back of the queue.
 195:FreeRTOS/Source/queue.c ****  */
 196:FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue,
 197:FreeRTOS/Source/queue.c ****                                       const void * pvItemToQueue,
 198:FreeRTOS/Source/queue.c ****                                       const BaseType_t xPosition ) PRIVILEGED_FUNCTION;
 199:FreeRTOS/Source/queue.c **** 
 200:FreeRTOS/Source/queue.c **** /*
 201:FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 5


 202:FreeRTOS/Source/queue.c ****  */
 203:FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue,
 204:FreeRTOS/Source/queue.c ****                                   void * const pvBuffer ) PRIVILEGED_FUNCTION;
 205:FreeRTOS/Source/queue.c **** 
 206:FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 207:FreeRTOS/Source/queue.c **** 
 208:FreeRTOS/Source/queue.c **** /*
 209:FreeRTOS/Source/queue.c ****  * Checks to see if a queue is a member of a queue set, and if so, notifies
 210:FreeRTOS/Source/queue.c ****  * the queue set that the queue contains data.
 211:FreeRTOS/Source/queue.c ****  */
 212:FreeRTOS/Source/queue.c ****     static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue ) PRIVILEGED_FUNCTI
 213:FreeRTOS/Source/queue.c **** #endif
 214:FreeRTOS/Source/queue.c **** 
 215:FreeRTOS/Source/queue.c **** /*
 216:FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 217:FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 218:FreeRTOS/Source/queue.c ****  */
 219:FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength,
 220:FreeRTOS/Source/queue.c ****                                    const UBaseType_t uxItemSize,
 221:FreeRTOS/Source/queue.c ****                                    uint8_t * pucQueueStorage,
 222:FreeRTOS/Source/queue.c ****                                    const uint8_t ucQueueType,
 223:FreeRTOS/Source/queue.c ****                                    Queue_t * pxNewQueue ) PRIVILEGED_FUNCTION;
 224:FreeRTOS/Source/queue.c **** 
 225:FreeRTOS/Source/queue.c **** /*
 226:FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 227:FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 228:FreeRTOS/Source/queue.c ****  * as a mutex.
 229:FreeRTOS/Source/queue.c ****  */
 230:FreeRTOS/Source/queue.c **** #if ( configUSE_MUTEXES == 1 )
 231:FreeRTOS/Source/queue.c ****     static void prvInitialiseMutex( Queue_t * pxNewQueue ) PRIVILEGED_FUNCTION;
 232:FreeRTOS/Source/queue.c **** #endif
 233:FreeRTOS/Source/queue.c **** 
 234:FreeRTOS/Source/queue.c **** #if ( configUSE_MUTEXES == 1 )
 235:FreeRTOS/Source/queue.c **** 
 236:FreeRTOS/Source/queue.c **** /*
 237:FreeRTOS/Source/queue.c ****  * If a task waiting for a mutex causes the mutex holder to inherit a
 238:FreeRTOS/Source/queue.c ****  * priority, but the waiting task times out, then the holder should
 239:FreeRTOS/Source/queue.c ****  * disinherit the priority - but only down to the highest priority of any
 240:FreeRTOS/Source/queue.c ****  * other tasks that are waiting for the same mutex.  This function returns
 241:FreeRTOS/Source/queue.c ****  * that priority.
 242:FreeRTOS/Source/queue.c ****  */
 243:FreeRTOS/Source/queue.c ****     static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVIL
 244:FreeRTOS/Source/queue.c **** #endif
 245:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 246:FreeRTOS/Source/queue.c **** 
 247:FreeRTOS/Source/queue.c **** /*
 248:FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 249:FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 250:FreeRTOS/Source/queue.c ****  */
 251:FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )                            \
 252:FreeRTOS/Source/queue.c ****     taskENTER_CRITICAL();                                  \
 253:FreeRTOS/Source/queue.c ****     {                                                      \
 254:FreeRTOS/Source/queue.c ****         if( ( pxQueue )->cRxLock == queueUNLOCKED )        \
 255:FreeRTOS/Source/queue.c ****         {                                                  \
 256:FreeRTOS/Source/queue.c ****             ( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED; \
 257:FreeRTOS/Source/queue.c ****         }                                                  \
 258:FreeRTOS/Source/queue.c ****         if( ( pxQueue )->cTxLock == queueUNLOCKED )        \
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 6


 259:FreeRTOS/Source/queue.c ****         {                                                  \
 260:FreeRTOS/Source/queue.c ****             ( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED; \
 261:FreeRTOS/Source/queue.c ****         }                                                  \
 262:FreeRTOS/Source/queue.c ****     }                                                      \
 263:FreeRTOS/Source/queue.c ****     taskEXIT_CRITICAL()
 264:FreeRTOS/Source/queue.c **** 
 265:FreeRTOS/Source/queue.c **** /*
 266:FreeRTOS/Source/queue.c ****  * Macro to increment cTxLock member of the queue data structure. It is
 267:FreeRTOS/Source/queue.c ****  * capped at the number of tasks in the system as we cannot unblock more
 268:FreeRTOS/Source/queue.c ****  * tasks than the number of tasks in the system.
 269:FreeRTOS/Source/queue.c ****  */
 270:FreeRTOS/Source/queue.c **** #define prvIncrementQueueTxLock( pxQueue, cTxLock )                           \
 271:FreeRTOS/Source/queue.c ****     {                                                                         \
 272:FreeRTOS/Source/queue.c ****         const UBaseType_t uxNumberOfTasks = uxTaskGetNumberOfTasks();         \
 273:FreeRTOS/Source/queue.c ****         if( ( UBaseType_t ) ( cTxLock ) < uxNumberOfTasks )                   \
 274:FreeRTOS/Source/queue.c ****         {                                                                     \
 275:FreeRTOS/Source/queue.c ****             configASSERT( ( cTxLock ) != queueINT8_MAX );                     \
 276:FreeRTOS/Source/queue.c ****             ( pxQueue )->cTxLock = ( int8_t ) ( ( cTxLock ) + ( int8_t ) 1 ); \
 277:FreeRTOS/Source/queue.c ****         }                                                                     \
 278:FreeRTOS/Source/queue.c ****     }
 279:FreeRTOS/Source/queue.c **** 
 280:FreeRTOS/Source/queue.c **** /*
 281:FreeRTOS/Source/queue.c ****  * Macro to increment cRxLock member of the queue data structure. It is
 282:FreeRTOS/Source/queue.c ****  * capped at the number of tasks in the system as we cannot unblock more
 283:FreeRTOS/Source/queue.c ****  * tasks than the number of tasks in the system.
 284:FreeRTOS/Source/queue.c ****  */
 285:FreeRTOS/Source/queue.c **** #define prvIncrementQueueRxLock( pxQueue, cRxLock )                           \
 286:FreeRTOS/Source/queue.c ****     {                                                                         \
 287:FreeRTOS/Source/queue.c ****         const UBaseType_t uxNumberOfTasks = uxTaskGetNumberOfTasks();         \
 288:FreeRTOS/Source/queue.c ****         if( ( UBaseType_t ) ( cRxLock ) < uxNumberOfTasks )                   \
 289:FreeRTOS/Source/queue.c ****         {                                                                     \
 290:FreeRTOS/Source/queue.c ****             configASSERT( ( cRxLock ) != queueINT8_MAX );                     \
 291:FreeRTOS/Source/queue.c ****             ( pxQueue )->cRxLock = ( int8_t ) ( ( cRxLock ) + ( int8_t ) 1 ); \
 292:FreeRTOS/Source/queue.c ****         }                                                                     \
 293:FreeRTOS/Source/queue.c ****     }
 294:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 295:FreeRTOS/Source/queue.c **** 
 296:FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue,
 297:FreeRTOS/Source/queue.c ****                                BaseType_t xNewQueue )
 298:FreeRTOS/Source/queue.c **** {
 299:FreeRTOS/Source/queue.c ****     BaseType_t xReturn = pdPASS;
 300:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 301:FreeRTOS/Source/queue.c **** 
 302:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue );
 303:FreeRTOS/Source/queue.c **** 
 304:FreeRTOS/Source/queue.c ****     if( ( pxQueue != NULL ) &&
 305:FreeRTOS/Source/queue.c ****         ( pxQueue->uxLength >= 1U ) &&
 306:FreeRTOS/Source/queue.c ****         /* Check for multiplication overflow. */
 307:FreeRTOS/Source/queue.c ****         ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
 308:FreeRTOS/Source/queue.c ****     {
 309:FreeRTOS/Source/queue.c ****         taskENTER_CRITICAL();
 310:FreeRTOS/Source/queue.c ****         {
 311:FreeRTOS/Source/queue.c ****             pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize 
 312:FreeRTOS/Source/queue.c ****             pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 313:FreeRTOS/Source/queue.c ****             pxQueue->pcWriteTo = pxQueue->pcHead;
 314:FreeRTOS/Source/queue.c ****             pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue
 315:FreeRTOS/Source/queue.c ****             pxQueue->cRxLock = queueUNLOCKED;
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 7


 316:FreeRTOS/Source/queue.c ****             pxQueue->cTxLock = queueUNLOCKED;
 317:FreeRTOS/Source/queue.c **** 
 318:FreeRTOS/Source/queue.c ****             if( xNewQueue == pdFALSE )
 319:FreeRTOS/Source/queue.c ****             {
 320:FreeRTOS/Source/queue.c ****                 /* If there are tasks blocked waiting to read from the queue, then
 321:FreeRTOS/Source/queue.c ****                  * the tasks will remain blocked as after this function exits the queue
 322:FreeRTOS/Source/queue.c ****                  * will still be empty.  If there are tasks blocked waiting to write to
 323:FreeRTOS/Source/queue.c ****                  * the queue, then one should be unblocked as after this function exits
 324:FreeRTOS/Source/queue.c ****                  * it will be possible to write to it. */
 325:FreeRTOS/Source/queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 326:FreeRTOS/Source/queue.c ****                 {
 327:FreeRTOS/Source/queue.c ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 328:FreeRTOS/Source/queue.c ****                     {
 329:FreeRTOS/Source/queue.c ****                         queueYIELD_IF_USING_PREEMPTION();
 330:FreeRTOS/Source/queue.c ****                     }
 331:FreeRTOS/Source/queue.c ****                     else
 332:FreeRTOS/Source/queue.c ****                     {
 333:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
 334:FreeRTOS/Source/queue.c ****                     }
 335:FreeRTOS/Source/queue.c ****                 }
 336:FreeRTOS/Source/queue.c ****                 else
 337:FreeRTOS/Source/queue.c ****                 {
 338:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
 339:FreeRTOS/Source/queue.c ****                 }
 340:FreeRTOS/Source/queue.c ****             }
 341:FreeRTOS/Source/queue.c ****             else
 342:FreeRTOS/Source/queue.c ****             {
 343:FreeRTOS/Source/queue.c ****                 /* Ensure the event queues start in the correct state. */
 344:FreeRTOS/Source/queue.c ****                 vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 345:FreeRTOS/Source/queue.c ****                 vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 346:FreeRTOS/Source/queue.c ****             }
 347:FreeRTOS/Source/queue.c ****         }
 348:FreeRTOS/Source/queue.c ****         taskEXIT_CRITICAL();
 349:FreeRTOS/Source/queue.c ****     }
 350:FreeRTOS/Source/queue.c ****     else
 351:FreeRTOS/Source/queue.c ****     {
 352:FreeRTOS/Source/queue.c ****         xReturn = pdFAIL;
 353:FreeRTOS/Source/queue.c ****     }
 354:FreeRTOS/Source/queue.c **** 
 355:FreeRTOS/Source/queue.c ****     configASSERT( xReturn != pdFAIL );
 356:FreeRTOS/Source/queue.c **** 
 357:FreeRTOS/Source/queue.c ****     /* A value is returned for calling semantic consistency with previous
 358:FreeRTOS/Source/queue.c ****      * versions. */
 359:FreeRTOS/Source/queue.c ****     return xReturn;
 360:FreeRTOS/Source/queue.c **** }
 361:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 362:FreeRTOS/Source/queue.c **** 
 363:FreeRTOS/Source/queue.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 364:FreeRTOS/Source/queue.c **** 
 365:FreeRTOS/Source/queue.c ****     QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength,
 366:FreeRTOS/Source/queue.c ****                                              const UBaseType_t uxItemSize,
 367:FreeRTOS/Source/queue.c ****                                              uint8_t * pucQueueStorage,
 368:FreeRTOS/Source/queue.c ****                                              StaticQueue_t * pxStaticQueue,
 369:FreeRTOS/Source/queue.c ****                                              const uint8_t ucQueueType )
 370:FreeRTOS/Source/queue.c ****     {
 371:FreeRTOS/Source/queue.c ****         Queue_t * pxNewQueue = NULL;
 372:FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 8


 373:FreeRTOS/Source/queue.c ****         /* The StaticQueue_t structure and the queue storage area must be
 374:FreeRTOS/Source/queue.c ****          * supplied. */
 375:FreeRTOS/Source/queue.c ****         configASSERT( pxStaticQueue );
 376:FreeRTOS/Source/queue.c **** 
 377:FreeRTOS/Source/queue.c ****         if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 378:FreeRTOS/Source/queue.c ****             ( pxStaticQueue != NULL ) &&
 379:FreeRTOS/Source/queue.c **** 
 380:FreeRTOS/Source/queue.c ****             /* A queue storage area should be provided if the item size is not 0, and
 381:FreeRTOS/Source/queue.c ****              * should not be provided if the item size is 0. */
 382:FreeRTOS/Source/queue.c ****             ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) ) &&
 383:FreeRTOS/Source/queue.c ****             ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) ) )
 384:FreeRTOS/Source/queue.c ****         {
 385:FreeRTOS/Source/queue.c ****             #if ( configASSERT_DEFINED == 1 )
 386:FreeRTOS/Source/queue.c ****             {
 387:FreeRTOS/Source/queue.c ****                 /* Sanity check that the size of the structure used to declare a
 388:FreeRTOS/Source/queue.c ****                  * variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 389:FreeRTOS/Source/queue.c ****                  * the real queue and semaphore structures. */
 390:FreeRTOS/Source/queue.c ****                 volatile size_t xSize = sizeof( StaticQueue_t );
 391:FreeRTOS/Source/queue.c **** 
 392:FreeRTOS/Source/queue.c ****                 /* This assertion cannot be branch covered in unit tests */
 393:FreeRTOS/Source/queue.c ****                 configASSERT( xSize == sizeof( Queue_t ) ); /* LCOV_EXCL_BR_LINE */
 394:FreeRTOS/Source/queue.c ****                 ( void ) xSize;                             /* Keeps lint quiet when configASSERT()
 395:FreeRTOS/Source/queue.c ****             }
 396:FreeRTOS/Source/queue.c ****             #endif /* configASSERT_DEFINED */
 397:FreeRTOS/Source/queue.c **** 
 398:FreeRTOS/Source/queue.c ****             /* The address of a statically allocated queue was passed in, use it.
 399:FreeRTOS/Source/queue.c ****              * The address of a statically allocated storage area was also passed in
 400:FreeRTOS/Source/queue.c ****              * but is already set. */
 401:FreeRTOS/Source/queue.c ****             pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the
 402:FreeRTOS/Source/queue.c **** 
 403:FreeRTOS/Source/queue.c ****             #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 404:FreeRTOS/Source/queue.c ****             {
 405:FreeRTOS/Source/queue.c ****                 /* Queues can be allocated wither statically or dynamically, so
 406:FreeRTOS/Source/queue.c ****                  * note this queue was allocated statically in case the queue is
 407:FreeRTOS/Source/queue.c ****                  * later deleted. */
 408:FreeRTOS/Source/queue.c ****                 pxNewQueue->ucStaticallyAllocated = pdTRUE;
 409:FreeRTOS/Source/queue.c ****             }
 410:FreeRTOS/Source/queue.c ****             #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 411:FreeRTOS/Source/queue.c **** 
 412:FreeRTOS/Source/queue.c ****             prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQu
 413:FreeRTOS/Source/queue.c ****         }
 414:FreeRTOS/Source/queue.c ****         else
 415:FreeRTOS/Source/queue.c ****         {
 416:FreeRTOS/Source/queue.c ****             configASSERT( pxNewQueue );
 417:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
 418:FreeRTOS/Source/queue.c ****         }
 419:FreeRTOS/Source/queue.c **** 
 420:FreeRTOS/Source/queue.c ****         return pxNewQueue;
 421:FreeRTOS/Source/queue.c ****     }
 422:FreeRTOS/Source/queue.c **** 
 423:FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 424:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 425:FreeRTOS/Source/queue.c **** 
 426:FreeRTOS/Source/queue.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 427:FreeRTOS/Source/queue.c **** 
 428:FreeRTOS/Source/queue.c ****     QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength,
 429:FreeRTOS/Source/queue.c ****                                        const UBaseType_t uxItemSize,
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 9


 430:FreeRTOS/Source/queue.c ****                                        const uint8_t ucQueueType )
 431:FreeRTOS/Source/queue.c ****     {
 432:FreeRTOS/Source/queue.c ****         Queue_t * pxNewQueue = NULL;
 433:FreeRTOS/Source/queue.c ****         size_t xQueueSizeInBytes;
 434:FreeRTOS/Source/queue.c ****         uint8_t * pucQueueStorage;
 435:FreeRTOS/Source/queue.c **** 
 436:FreeRTOS/Source/queue.c ****         if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 437:FreeRTOS/Source/queue.c ****             /* Check for multiplication overflow. */
 438:FreeRTOS/Source/queue.c ****             ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
 439:FreeRTOS/Source/queue.c ****             /* Check for addition overflow. */
 440:FreeRTOS/Source/queue.c ****             ( ( SIZE_MAX - sizeof( Queue_t ) ) >= ( uxQueueLength * uxItemSize ) ) )
 441:FreeRTOS/Source/queue.c ****         {
 442:FreeRTOS/Source/queue.c ****             /* Allocate enough space to hold the maximum number of items that
 443:FreeRTOS/Source/queue.c ****              * can be in the queue at any time.  It is valid for uxItemSize to be
 444:FreeRTOS/Source/queue.c ****              * zero in the case the queue is used as a semaphore. */
 445:FreeRTOS/Source/queue.c ****             xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA excep
 446:FreeRTOS/Source/queue.c **** 
 447:FreeRTOS/Source/queue.c ****             /* Allocate the queue and storage area.  Justification for MISRA
 448:FreeRTOS/Source/queue.c ****              * deviation as follows:  pvPortMalloc() always ensures returned memory
 449:FreeRTOS/Source/queue.c ****              * blocks are aligned per the requirements of the MCU stack.  In this case
 450:FreeRTOS/Source/queue.c ****              * pvPortMalloc() must return a pointer that is guaranteed to meet the
 451:FreeRTOS/Source/queue.c ****              * alignment requirements of the Queue_t structure - which in this case
 452:FreeRTOS/Source/queue.c ****              * is an int8_t *.  Therefore, whenever the stack alignment requirements
 453:FreeRTOS/Source/queue.c ****              * are greater than or equal to the pointer to char requirements the cast
 454:FreeRTOS/Source/queue.c ****              * is safe.  In other cases alignment requirements are not strict (one or
 455:FreeRTOS/Source/queue.c ****              * two bytes). */
 456:FreeRTOS/Source/queue.c ****             pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lin
 457:FreeRTOS/Source/queue.c **** 
 458:FreeRTOS/Source/queue.c ****             if( pxNewQueue != NULL )
 459:FreeRTOS/Source/queue.c ****             {
 460:FreeRTOS/Source/queue.c ****                 /* Jump past the queue structure to find the location of the queue
 461:FreeRTOS/Source/queue.c ****                  * storage area. */
 462:FreeRTOS/Source/queue.c ****                 pucQueueStorage = ( uint8_t * ) pxNewQueue;
 463:FreeRTOS/Source/queue.c ****                 pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on c
 464:FreeRTOS/Source/queue.c **** 
 465:FreeRTOS/Source/queue.c ****                 #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 466:FreeRTOS/Source/queue.c ****                 {
 467:FreeRTOS/Source/queue.c ****                     /* Queues can be created either statically or dynamically, so
 468:FreeRTOS/Source/queue.c ****                      * note this task was created dynamically in case it is later
 469:FreeRTOS/Source/queue.c ****                      * deleted. */
 470:FreeRTOS/Source/queue.c ****                     pxNewQueue->ucStaticallyAllocated = pdFALSE;
 471:FreeRTOS/Source/queue.c ****                 }
 472:FreeRTOS/Source/queue.c ****                 #endif /* configSUPPORT_STATIC_ALLOCATION */
 473:FreeRTOS/Source/queue.c **** 
 474:FreeRTOS/Source/queue.c ****                 prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxN
 475:FreeRTOS/Source/queue.c ****             }
 476:FreeRTOS/Source/queue.c ****             else
 477:FreeRTOS/Source/queue.c ****             {
 478:FreeRTOS/Source/queue.c ****                 traceQUEUE_CREATE_FAILED( ucQueueType );
 479:FreeRTOS/Source/queue.c ****                 mtCOVERAGE_TEST_MARKER();
 480:FreeRTOS/Source/queue.c ****             }
 481:FreeRTOS/Source/queue.c ****         }
 482:FreeRTOS/Source/queue.c ****         else
 483:FreeRTOS/Source/queue.c ****         {
 484:FreeRTOS/Source/queue.c ****             configASSERT( pxNewQueue );
 485:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
 486:FreeRTOS/Source/queue.c ****         }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 10


 487:FreeRTOS/Source/queue.c **** 
 488:FreeRTOS/Source/queue.c ****         return pxNewQueue;
 489:FreeRTOS/Source/queue.c ****     }
 490:FreeRTOS/Source/queue.c **** 
 491:FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 492:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 493:FreeRTOS/Source/queue.c **** 
 494:FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength,
 495:FreeRTOS/Source/queue.c ****                                    const UBaseType_t uxItemSize,
 496:FreeRTOS/Source/queue.c ****                                    uint8_t * pucQueueStorage,
 497:FreeRTOS/Source/queue.c ****                                    const uint8_t ucQueueType,
 498:FreeRTOS/Source/queue.c ****                                    Queue_t * pxNewQueue )
 499:FreeRTOS/Source/queue.c **** {
 500:FreeRTOS/Source/queue.c ****     /* Remove compiler warnings about unused parameters should
 501:FreeRTOS/Source/queue.c ****      * configUSE_TRACE_FACILITY not be set to 1. */
 502:FreeRTOS/Source/queue.c ****     ( void ) ucQueueType;
 503:FreeRTOS/Source/queue.c **** 
 504:FreeRTOS/Source/queue.c ****     if( uxItemSize == ( UBaseType_t ) 0 )
 505:FreeRTOS/Source/queue.c ****     {
 506:FreeRTOS/Source/queue.c ****         /* No RAM was allocated for the queue storage area, but PC head cannot
 507:FreeRTOS/Source/queue.c ****          * be set to NULL because NULL is used as a key to say the queue is used as
 508:FreeRTOS/Source/queue.c ****          * a mutex.  Therefore just set pcHead to point to the queue as a benign
 509:FreeRTOS/Source/queue.c ****          * value that is known to be within the memory map. */
 510:FreeRTOS/Source/queue.c ****         pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 511:FreeRTOS/Source/queue.c ****     }
 512:FreeRTOS/Source/queue.c ****     else
 513:FreeRTOS/Source/queue.c ****     {
 514:FreeRTOS/Source/queue.c ****         /* Set the head to the start of the queue storage area. */
 515:FreeRTOS/Source/queue.c ****         pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 516:FreeRTOS/Source/queue.c ****     }
 517:FreeRTOS/Source/queue.c **** 
 518:FreeRTOS/Source/queue.c ****     /* Initialise the queue members as described where the queue type is
 519:FreeRTOS/Source/queue.c ****      * defined. */
 520:FreeRTOS/Source/queue.c ****     pxNewQueue->uxLength = uxQueueLength;
 521:FreeRTOS/Source/queue.c ****     pxNewQueue->uxItemSize = uxItemSize;
 522:FreeRTOS/Source/queue.c ****     ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 523:FreeRTOS/Source/queue.c **** 
 524:FreeRTOS/Source/queue.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 525:FreeRTOS/Source/queue.c ****     {
 526:FreeRTOS/Source/queue.c ****         pxNewQueue->ucQueueType = ucQueueType;
 527:FreeRTOS/Source/queue.c ****     }
 528:FreeRTOS/Source/queue.c ****     #endif /* configUSE_TRACE_FACILITY */
 529:FreeRTOS/Source/queue.c **** 
 530:FreeRTOS/Source/queue.c ****     #if ( configUSE_QUEUE_SETS == 1 )
 531:FreeRTOS/Source/queue.c ****     {
 532:FreeRTOS/Source/queue.c ****         pxNewQueue->pxQueueSetContainer = NULL;
 533:FreeRTOS/Source/queue.c ****     }
 534:FreeRTOS/Source/queue.c ****     #endif /* configUSE_QUEUE_SETS */
 535:FreeRTOS/Source/queue.c **** 
 536:FreeRTOS/Source/queue.c ****     traceQUEUE_CREATE( pxNewQueue );
 537:FreeRTOS/Source/queue.c **** }
 538:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 539:FreeRTOS/Source/queue.c **** 
 540:FreeRTOS/Source/queue.c **** #if ( configUSE_MUTEXES == 1 )
 541:FreeRTOS/Source/queue.c **** 
 542:FreeRTOS/Source/queue.c ****     static void prvInitialiseMutex( Queue_t * pxNewQueue )
 543:FreeRTOS/Source/queue.c ****     {
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 11


 544:FreeRTOS/Source/queue.c ****         if( pxNewQueue != NULL )
 545:FreeRTOS/Source/queue.c ****         {
 546:FreeRTOS/Source/queue.c ****             /* The queue create function will set all the queue structure members
 547:FreeRTOS/Source/queue.c ****             * correctly for a generic queue, but this function is creating a
 548:FreeRTOS/Source/queue.c ****             * mutex.  Overwrite those members that need to be set differently -
 549:FreeRTOS/Source/queue.c ****             * in particular the information required for priority inheritance. */
 550:FreeRTOS/Source/queue.c ****             pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 551:FreeRTOS/Source/queue.c ****             pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 552:FreeRTOS/Source/queue.c **** 
 553:FreeRTOS/Source/queue.c ****             /* In case this is a recursive mutex. */
 554:FreeRTOS/Source/queue.c ****             pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 555:FreeRTOS/Source/queue.c **** 
 556:FreeRTOS/Source/queue.c ****             traceCREATE_MUTEX( pxNewQueue );
 557:FreeRTOS/Source/queue.c **** 
 558:FreeRTOS/Source/queue.c ****             /* Start with the semaphore in the expected state. */
 559:FreeRTOS/Source/queue.c ****             ( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 560:FreeRTOS/Source/queue.c ****         }
 561:FreeRTOS/Source/queue.c ****         else
 562:FreeRTOS/Source/queue.c ****         {
 563:FreeRTOS/Source/queue.c ****             traceCREATE_MUTEX_FAILED();
 564:FreeRTOS/Source/queue.c ****         }
 565:FreeRTOS/Source/queue.c ****     }
 566:FreeRTOS/Source/queue.c **** 
 567:FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 568:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 569:FreeRTOS/Source/queue.c **** 
 570:FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 571:FreeRTOS/Source/queue.c **** 
 572:FreeRTOS/Source/queue.c ****     QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 573:FreeRTOS/Source/queue.c ****     {
 574:FreeRTOS/Source/queue.c ****         QueueHandle_t xNewQueue;
 575:FreeRTOS/Source/queue.c ****         const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 576:FreeRTOS/Source/queue.c **** 
 577:FreeRTOS/Source/queue.c ****         xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 578:FreeRTOS/Source/queue.c ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 579:FreeRTOS/Source/queue.c **** 
 580:FreeRTOS/Source/queue.c ****         return xNewQueue;
 581:FreeRTOS/Source/queue.c ****     }
 582:FreeRTOS/Source/queue.c **** 
 583:FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 584:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 585:FreeRTOS/Source/queue.c **** 
 586:FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 587:FreeRTOS/Source/queue.c **** 
 588:FreeRTOS/Source/queue.c ****     QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType,
 589:FreeRTOS/Source/queue.c ****                                            StaticQueue_t * pxStaticQueue )
 590:FreeRTOS/Source/queue.c ****     {
 591:FreeRTOS/Source/queue.c ****         QueueHandle_t xNewQueue;
 592:FreeRTOS/Source/queue.c ****         const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 593:FreeRTOS/Source/queue.c **** 
 594:FreeRTOS/Source/queue.c ****         /* Prevent compiler warnings about unused parameters if
 595:FreeRTOS/Source/queue.c ****          * configUSE_TRACE_FACILITY does not equal 1. */
 596:FreeRTOS/Source/queue.c ****         ( void ) ucQueueType;
 597:FreeRTOS/Source/queue.c **** 
 598:FreeRTOS/Source/queue.c ****         xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQ
 599:FreeRTOS/Source/queue.c ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 600:FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 12


 601:FreeRTOS/Source/queue.c ****         return xNewQueue;
 602:FreeRTOS/Source/queue.c ****     }
 603:FreeRTOS/Source/queue.c **** 
 604:FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 605:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 606:FreeRTOS/Source/queue.c **** 
 607:FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 608:FreeRTOS/Source/queue.c **** 
 609:FreeRTOS/Source/queue.c ****     TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 610:FreeRTOS/Source/queue.c ****     {
 611:FreeRTOS/Source/queue.c ****         TaskHandle_t pxReturn;
 612:FreeRTOS/Source/queue.c ****         Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 613:FreeRTOS/Source/queue.c **** 
 614:FreeRTOS/Source/queue.c ****         configASSERT( xSemaphore );
 615:FreeRTOS/Source/queue.c **** 
 616:FreeRTOS/Source/queue.c ****         /* This function is called by xSemaphoreGetMutexHolder(), and should not
 617:FreeRTOS/Source/queue.c ****          * be called directly.  Note:  This is a good way of determining if the
 618:FreeRTOS/Source/queue.c ****          * calling task is the mutex holder, but not a good way of determining the
 619:FreeRTOS/Source/queue.c ****          * identity of the mutex holder, as the holder may change between the
 620:FreeRTOS/Source/queue.c ****          * following critical section exiting and the function returning. */
 621:FreeRTOS/Source/queue.c ****         taskENTER_CRITICAL();
 622:FreeRTOS/Source/queue.c ****         {
 623:FreeRTOS/Source/queue.c ****             if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 624:FreeRTOS/Source/queue.c ****             {
 625:FreeRTOS/Source/queue.c ****                 pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
 626:FreeRTOS/Source/queue.c ****             }
 627:FreeRTOS/Source/queue.c ****             else
 628:FreeRTOS/Source/queue.c ****             {
 629:FreeRTOS/Source/queue.c ****                 pxReturn = NULL;
 630:FreeRTOS/Source/queue.c ****             }
 631:FreeRTOS/Source/queue.c ****         }
 632:FreeRTOS/Source/queue.c ****         taskEXIT_CRITICAL();
 633:FreeRTOS/Source/queue.c **** 
 634:FreeRTOS/Source/queue.c ****         return pxReturn;
 635:FreeRTOS/Source/queue.c ****     } /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 636:FreeRTOS/Source/queue.c **** 
 637:FreeRTOS/Source/queue.c **** #endif /* if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) ) */
 638:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 639:FreeRTOS/Source/queue.c **** 
 640:FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 641:FreeRTOS/Source/queue.c **** 
 642:FreeRTOS/Source/queue.c ****     TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 643:FreeRTOS/Source/queue.c ****     {
 644:FreeRTOS/Source/queue.c ****         TaskHandle_t pxReturn;
 645:FreeRTOS/Source/queue.c **** 
 646:FreeRTOS/Source/queue.c ****         configASSERT( xSemaphore );
 647:FreeRTOS/Source/queue.c **** 
 648:FreeRTOS/Source/queue.c ****         /* Mutexes cannot be used in interrupt service routines, so the mutex
 649:FreeRTOS/Source/queue.c ****          * holder should not change in an ISR, and therefore a critical section is
 650:FreeRTOS/Source/queue.c ****          * not required here. */
 651:FreeRTOS/Source/queue.c ****         if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 652:FreeRTOS/Source/queue.c ****         {
 653:FreeRTOS/Source/queue.c ****             pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 654:FreeRTOS/Source/queue.c ****         }
 655:FreeRTOS/Source/queue.c ****         else
 656:FreeRTOS/Source/queue.c ****         {
 657:FreeRTOS/Source/queue.c ****             pxReturn = NULL;
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 13


 658:FreeRTOS/Source/queue.c ****         }
 659:FreeRTOS/Source/queue.c **** 
 660:FreeRTOS/Source/queue.c ****         return pxReturn;
 661:FreeRTOS/Source/queue.c ****     } /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 662:FreeRTOS/Source/queue.c **** 
 663:FreeRTOS/Source/queue.c **** #endif /* if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) ) */
 664:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 665:FreeRTOS/Source/queue.c **** 
 666:FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 667:FreeRTOS/Source/queue.c **** 
 668:FreeRTOS/Source/queue.c ****     BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 669:FreeRTOS/Source/queue.c ****     {
 670:FreeRTOS/Source/queue.c ****         BaseType_t xReturn;
 671:FreeRTOS/Source/queue.c ****         Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 672:FreeRTOS/Source/queue.c **** 
 673:FreeRTOS/Source/queue.c ****         configASSERT( pxMutex );
 674:FreeRTOS/Source/queue.c **** 
 675:FreeRTOS/Source/queue.c ****         /* If this is the task that holds the mutex then xMutexHolder will not
 676:FreeRTOS/Source/queue.c ****          * change outside of this task.  If this task does not hold the mutex then
 677:FreeRTOS/Source/queue.c ****          * pxMutexHolder can never coincidentally equal the tasks handle, and as
 678:FreeRTOS/Source/queue.c ****          * this is the only condition we are interested in it does not matter if
 679:FreeRTOS/Source/queue.c ****          * pxMutexHolder is accessed simultaneously by another task.  Therefore no
 680:FreeRTOS/Source/queue.c ****          * mutual exclusion is required to test the pxMutexHolder variable. */
 681:FreeRTOS/Source/queue.c ****         if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 682:FreeRTOS/Source/queue.c ****         {
 683:FreeRTOS/Source/queue.c ****             traceGIVE_MUTEX_RECURSIVE( pxMutex );
 684:FreeRTOS/Source/queue.c **** 
 685:FreeRTOS/Source/queue.c ****             /* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 686:FreeRTOS/Source/queue.c ****              * the task handle, therefore no underflow check is required.  Also,
 687:FreeRTOS/Source/queue.c ****              * uxRecursiveCallCount is only modified by the mutex holder, and as
 688:FreeRTOS/Source/queue.c ****              * there can only be one, no mutual exclusion is required to modify the
 689:FreeRTOS/Source/queue.c ****              * uxRecursiveCallCount member. */
 690:FreeRTOS/Source/queue.c ****             ( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 691:FreeRTOS/Source/queue.c **** 
 692:FreeRTOS/Source/queue.c ****             /* Has the recursive call count unwound to 0? */
 693:FreeRTOS/Source/queue.c ****             if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 694:FreeRTOS/Source/queue.c ****             {
 695:FreeRTOS/Source/queue.c ****                 /* Return the mutex.  This will automatically unblock any other
 696:FreeRTOS/Source/queue.c ****                  * task that might be waiting to access the mutex. */
 697:FreeRTOS/Source/queue.c ****                 ( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO
 698:FreeRTOS/Source/queue.c ****             }
 699:FreeRTOS/Source/queue.c ****             else
 700:FreeRTOS/Source/queue.c ****             {
 701:FreeRTOS/Source/queue.c ****                 mtCOVERAGE_TEST_MARKER();
 702:FreeRTOS/Source/queue.c ****             }
 703:FreeRTOS/Source/queue.c **** 
 704:FreeRTOS/Source/queue.c ****             xReturn = pdPASS;
 705:FreeRTOS/Source/queue.c ****         }
 706:FreeRTOS/Source/queue.c ****         else
 707:FreeRTOS/Source/queue.c ****         {
 708:FreeRTOS/Source/queue.c ****             /* The mutex cannot be given because the calling task is not the
 709:FreeRTOS/Source/queue.c ****              * holder. */
 710:FreeRTOS/Source/queue.c ****             xReturn = pdFAIL;
 711:FreeRTOS/Source/queue.c **** 
 712:FreeRTOS/Source/queue.c ****             traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 713:FreeRTOS/Source/queue.c ****         }
 714:FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 14


 715:FreeRTOS/Source/queue.c ****         return xReturn;
 716:FreeRTOS/Source/queue.c ****     }
 717:FreeRTOS/Source/queue.c **** 
 718:FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 719:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 720:FreeRTOS/Source/queue.c **** 
 721:FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 722:FreeRTOS/Source/queue.c **** 
 723:FreeRTOS/Source/queue.c ****     BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex,
 724:FreeRTOS/Source/queue.c ****                                          TickType_t xTicksToWait )
 725:FreeRTOS/Source/queue.c ****     {
 726:FreeRTOS/Source/queue.c ****         BaseType_t xReturn;
 727:FreeRTOS/Source/queue.c ****         Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 728:FreeRTOS/Source/queue.c **** 
 729:FreeRTOS/Source/queue.c ****         configASSERT( pxMutex );
 730:FreeRTOS/Source/queue.c **** 
 731:FreeRTOS/Source/queue.c ****         /* Comments regarding mutual exclusion as per those within
 732:FreeRTOS/Source/queue.c ****          * xQueueGiveMutexRecursive(). */
 733:FreeRTOS/Source/queue.c **** 
 734:FreeRTOS/Source/queue.c ****         traceTAKE_MUTEX_RECURSIVE( pxMutex );
 735:FreeRTOS/Source/queue.c **** 
 736:FreeRTOS/Source/queue.c ****         if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 737:FreeRTOS/Source/queue.c ****         {
 738:FreeRTOS/Source/queue.c ****             ( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 739:FreeRTOS/Source/queue.c ****             xReturn = pdPASS;
 740:FreeRTOS/Source/queue.c ****         }
 741:FreeRTOS/Source/queue.c ****         else
 742:FreeRTOS/Source/queue.c ****         {
 743:FreeRTOS/Source/queue.c ****             xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 744:FreeRTOS/Source/queue.c **** 
 745:FreeRTOS/Source/queue.c ****             /* pdPASS will only be returned if the mutex was successfully
 746:FreeRTOS/Source/queue.c ****              * obtained.  The calling task may have entered the Blocked state
 747:FreeRTOS/Source/queue.c ****              * before reaching here. */
 748:FreeRTOS/Source/queue.c ****             if( xReturn != pdFAIL )
 749:FreeRTOS/Source/queue.c ****             {
 750:FreeRTOS/Source/queue.c ****                 ( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 751:FreeRTOS/Source/queue.c ****             }
 752:FreeRTOS/Source/queue.c ****             else
 753:FreeRTOS/Source/queue.c ****             {
 754:FreeRTOS/Source/queue.c ****                 traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 755:FreeRTOS/Source/queue.c ****             }
 756:FreeRTOS/Source/queue.c ****         }
 757:FreeRTOS/Source/queue.c **** 
 758:FreeRTOS/Source/queue.c ****         return xReturn;
 759:FreeRTOS/Source/queue.c ****     }
 760:FreeRTOS/Source/queue.c **** 
 761:FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 762:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 763:FreeRTOS/Source/queue.c **** 
 764:FreeRTOS/Source/queue.c **** #if ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 765:FreeRTOS/Source/queue.c **** 
 766:FreeRTOS/Source/queue.c ****     QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount,
 767:FreeRTOS/Source/queue.c ****                                                        const UBaseType_t uxInitialCount,
 768:FreeRTOS/Source/queue.c ****                                                        StaticQueue_t * pxStaticQueue )
 769:FreeRTOS/Source/queue.c ****     {
 770:FreeRTOS/Source/queue.c ****         QueueHandle_t xHandle = NULL;
 771:FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 15


 772:FreeRTOS/Source/queue.c ****         if( ( uxMaxCount != 0 ) &&
 773:FreeRTOS/Source/queue.c ****             ( uxInitialCount <= uxMaxCount ) )
 774:FreeRTOS/Source/queue.c ****         {
 775:FreeRTOS/Source/queue.c ****             xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL
 776:FreeRTOS/Source/queue.c **** 
 777:FreeRTOS/Source/queue.c ****             if( xHandle != NULL )
 778:FreeRTOS/Source/queue.c ****             {
 779:FreeRTOS/Source/queue.c ****                 ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 780:FreeRTOS/Source/queue.c **** 
 781:FreeRTOS/Source/queue.c ****                 traceCREATE_COUNTING_SEMAPHORE();
 782:FreeRTOS/Source/queue.c ****             }
 783:FreeRTOS/Source/queue.c ****             else
 784:FreeRTOS/Source/queue.c ****             {
 785:FreeRTOS/Source/queue.c ****                 traceCREATE_COUNTING_SEMAPHORE_FAILED();
 786:FreeRTOS/Source/queue.c ****             }
 787:FreeRTOS/Source/queue.c ****         }
 788:FreeRTOS/Source/queue.c ****         else
 789:FreeRTOS/Source/queue.c ****         {
 790:FreeRTOS/Source/queue.c ****             configASSERT( xHandle );
 791:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
 792:FreeRTOS/Source/queue.c ****         }
 793:FreeRTOS/Source/queue.c **** 
 794:FreeRTOS/Source/queue.c ****         return xHandle;
 795:FreeRTOS/Source/queue.c ****     }
 796:FreeRTOS/Source/queue.c **** 
 797:FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 798:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 799:FreeRTOS/Source/queue.c **** 
 800:FreeRTOS/Source/queue.c **** #if ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 801:FreeRTOS/Source/queue.c **** 
 802:FreeRTOS/Source/queue.c ****     QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount,
 803:FreeRTOS/Source/queue.c ****                                                  const UBaseType_t uxInitialCount )
 804:FreeRTOS/Source/queue.c ****     {
 805:FreeRTOS/Source/queue.c ****         QueueHandle_t xHandle = NULL;
 806:FreeRTOS/Source/queue.c **** 
 807:FreeRTOS/Source/queue.c ****         if( ( uxMaxCount != 0 ) &&
 808:FreeRTOS/Source/queue.c ****             ( uxInitialCount <= uxMaxCount ) )
 809:FreeRTOS/Source/queue.c ****         {
 810:FreeRTOS/Source/queue.c ****             xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE
 811:FreeRTOS/Source/queue.c **** 
 812:FreeRTOS/Source/queue.c ****             if( xHandle != NULL )
 813:FreeRTOS/Source/queue.c ****             {
 814:FreeRTOS/Source/queue.c ****                 ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 815:FreeRTOS/Source/queue.c **** 
 816:FreeRTOS/Source/queue.c ****                 traceCREATE_COUNTING_SEMAPHORE();
 817:FreeRTOS/Source/queue.c ****             }
 818:FreeRTOS/Source/queue.c ****             else
 819:FreeRTOS/Source/queue.c ****             {
 820:FreeRTOS/Source/queue.c ****                 traceCREATE_COUNTING_SEMAPHORE_FAILED();
 821:FreeRTOS/Source/queue.c ****             }
 822:FreeRTOS/Source/queue.c ****         }
 823:FreeRTOS/Source/queue.c ****         else
 824:FreeRTOS/Source/queue.c ****         {
 825:FreeRTOS/Source/queue.c ****             configASSERT( xHandle );
 826:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
 827:FreeRTOS/Source/queue.c ****         }
 828:FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 16


 829:FreeRTOS/Source/queue.c ****         return xHandle;
 830:FreeRTOS/Source/queue.c ****     }
 831:FreeRTOS/Source/queue.c **** 
 832:FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 833:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 834:FreeRTOS/Source/queue.c **** 
 835:FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue,
 836:FreeRTOS/Source/queue.c ****                               const void * const pvItemToQueue,
 837:FreeRTOS/Source/queue.c ****                               TickType_t xTicksToWait,
 838:FreeRTOS/Source/queue.c ****                               const BaseType_t xCopyPosition )
 839:FreeRTOS/Source/queue.c **** {
 840:FreeRTOS/Source/queue.c ****     BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 841:FreeRTOS/Source/queue.c ****     TimeOut_t xTimeOut;
 842:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 843:FreeRTOS/Source/queue.c **** 
 844:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue );
 845:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 846:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 847:FreeRTOS/Source/queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 848:FreeRTOS/Source/queue.c ****     {
 849:FreeRTOS/Source/queue.c ****         configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait 
 850:FreeRTOS/Source/queue.c ****     }
 851:FreeRTOS/Source/queue.c ****     #endif
 852:FreeRTOS/Source/queue.c **** 
 853:FreeRTOS/Source/queue.c ****     /*lint -save -e904 This function relaxes the coding standard somewhat to
 854:FreeRTOS/Source/queue.c ****      * allow return statements within the function itself.  This is done in the
 855:FreeRTOS/Source/queue.c ****      * interest of execution time efficiency. */
 856:FreeRTOS/Source/queue.c ****     for( ; ; )
 857:FreeRTOS/Source/queue.c ****     {
 858:FreeRTOS/Source/queue.c ****         taskENTER_CRITICAL();
 859:FreeRTOS/Source/queue.c ****         {
 860:FreeRTOS/Source/queue.c ****             /* Is there room on the queue now?  The running task must be the
 861:FreeRTOS/Source/queue.c ****              * highest priority task wanting to access the queue.  If the head item
 862:FreeRTOS/Source/queue.c ****              * in the queue is to be overwritten then it does not matter if the
 863:FreeRTOS/Source/queue.c ****              * queue is full. */
 864:FreeRTOS/Source/queue.c ****             if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERW
 865:FreeRTOS/Source/queue.c ****             {
 866:FreeRTOS/Source/queue.c ****                 traceQUEUE_SEND( pxQueue );
 867:FreeRTOS/Source/queue.c **** 
 868:FreeRTOS/Source/queue.c ****                 #if ( configUSE_QUEUE_SETS == 1 )
 869:FreeRTOS/Source/queue.c ****                 {
 870:FreeRTOS/Source/queue.c ****                     const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 871:FreeRTOS/Source/queue.c **** 
 872:FreeRTOS/Source/queue.c ****                     xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 873:FreeRTOS/Source/queue.c **** 
 874:FreeRTOS/Source/queue.c ****                     if( pxQueue->pxQueueSetContainer != NULL )
 875:FreeRTOS/Source/queue.c ****                     {
 876:FreeRTOS/Source/queue.c ****                         if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != (
 877:FreeRTOS/Source/queue.c ****                         {
 878:FreeRTOS/Source/queue.c ****                             /* Do not notify the queue set as an existing item
 879:FreeRTOS/Source/queue.c ****                              * was overwritten in the queue so the number of items
 880:FreeRTOS/Source/queue.c ****                              * in the queue has not changed. */
 881:FreeRTOS/Source/queue.c ****                             mtCOVERAGE_TEST_MARKER();
 882:FreeRTOS/Source/queue.c ****                         }
 883:FreeRTOS/Source/queue.c ****                         else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
 884:FreeRTOS/Source/queue.c ****                         {
 885:FreeRTOS/Source/queue.c ****                             /* The queue is a member of a queue set, and posting
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 17


 886:FreeRTOS/Source/queue.c ****                              * to the queue set caused a higher priority task to
 887:FreeRTOS/Source/queue.c ****                              * unblock. A context switch is required. */
 888:FreeRTOS/Source/queue.c ****                             queueYIELD_IF_USING_PREEMPTION();
 889:FreeRTOS/Source/queue.c ****                         }
 890:FreeRTOS/Source/queue.c ****                         else
 891:FreeRTOS/Source/queue.c ****                         {
 892:FreeRTOS/Source/queue.c ****                             mtCOVERAGE_TEST_MARKER();
 893:FreeRTOS/Source/queue.c ****                         }
 894:FreeRTOS/Source/queue.c ****                     }
 895:FreeRTOS/Source/queue.c ****                     else
 896:FreeRTOS/Source/queue.c ****                     {
 897:FreeRTOS/Source/queue.c ****                         /* If there was a task waiting for data to arrive on the
 898:FreeRTOS/Source/queue.c ****                          * queue then unblock it now. */
 899:FreeRTOS/Source/queue.c ****                         if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 900:FreeRTOS/Source/queue.c ****                         {
 901:FreeRTOS/Source/queue.c ****                             if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) !=
 902:FreeRTOS/Source/queue.c ****                             {
 903:FreeRTOS/Source/queue.c ****                                 /* The unblocked task has a priority higher than
 904:FreeRTOS/Source/queue.c ****                                  * our own so yield immediately.  Yes it is ok to
 905:FreeRTOS/Source/queue.c ****                                  * do this from within the critical section - the
 906:FreeRTOS/Source/queue.c ****                                  * kernel takes care of that. */
 907:FreeRTOS/Source/queue.c ****                                 queueYIELD_IF_USING_PREEMPTION();
 908:FreeRTOS/Source/queue.c ****                             }
 909:FreeRTOS/Source/queue.c ****                             else
 910:FreeRTOS/Source/queue.c ****                             {
 911:FreeRTOS/Source/queue.c ****                                 mtCOVERAGE_TEST_MARKER();
 912:FreeRTOS/Source/queue.c ****                             }
 913:FreeRTOS/Source/queue.c ****                         }
 914:FreeRTOS/Source/queue.c ****                         else if( xYieldRequired != pdFALSE )
 915:FreeRTOS/Source/queue.c ****                         {
 916:FreeRTOS/Source/queue.c ****                             /* This path is a special case that will only get
 917:FreeRTOS/Source/queue.c ****                              * executed if the task was holding multiple mutexes
 918:FreeRTOS/Source/queue.c ****                              * and the mutexes were given back in an order that is
 919:FreeRTOS/Source/queue.c ****                              * different to that in which they were taken. */
 920:FreeRTOS/Source/queue.c ****                             queueYIELD_IF_USING_PREEMPTION();
 921:FreeRTOS/Source/queue.c ****                         }
 922:FreeRTOS/Source/queue.c ****                         else
 923:FreeRTOS/Source/queue.c ****                         {
 924:FreeRTOS/Source/queue.c ****                             mtCOVERAGE_TEST_MARKER();
 925:FreeRTOS/Source/queue.c ****                         }
 926:FreeRTOS/Source/queue.c ****                     }
 927:FreeRTOS/Source/queue.c ****                 }
 928:FreeRTOS/Source/queue.c ****                 #else /* configUSE_QUEUE_SETS */
 929:FreeRTOS/Source/queue.c ****                 {
 930:FreeRTOS/Source/queue.c ****                     xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 931:FreeRTOS/Source/queue.c **** 
 932:FreeRTOS/Source/queue.c ****                     /* If there was a task waiting for data to arrive on the
 933:FreeRTOS/Source/queue.c ****                      * queue then unblock it now. */
 934:FreeRTOS/Source/queue.c ****                     if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 935:FreeRTOS/Source/queue.c ****                     {
 936:FreeRTOS/Source/queue.c ****                         if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdF
 937:FreeRTOS/Source/queue.c ****                         {
 938:FreeRTOS/Source/queue.c ****                             /* The unblocked task has a priority higher than
 939:FreeRTOS/Source/queue.c ****                              * our own so yield immediately.  Yes it is ok to do
 940:FreeRTOS/Source/queue.c ****                              * this from within the critical section - the kernel
 941:FreeRTOS/Source/queue.c ****                              * takes care of that. */
 942:FreeRTOS/Source/queue.c ****                             queueYIELD_IF_USING_PREEMPTION();
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 18


 943:FreeRTOS/Source/queue.c ****                         }
 944:FreeRTOS/Source/queue.c ****                         else
 945:FreeRTOS/Source/queue.c ****                         {
 946:FreeRTOS/Source/queue.c ****                             mtCOVERAGE_TEST_MARKER();
 947:FreeRTOS/Source/queue.c ****                         }
 948:FreeRTOS/Source/queue.c ****                     }
 949:FreeRTOS/Source/queue.c ****                     else if( xYieldRequired != pdFALSE )
 950:FreeRTOS/Source/queue.c ****                     {
 951:FreeRTOS/Source/queue.c ****                         /* This path is a special case that will only get
 952:FreeRTOS/Source/queue.c ****                          * executed if the task was holding multiple mutexes and
 953:FreeRTOS/Source/queue.c ****                          * the mutexes were given back in an order that is
 954:FreeRTOS/Source/queue.c ****                          * different to that in which they were taken. */
 955:FreeRTOS/Source/queue.c ****                         queueYIELD_IF_USING_PREEMPTION();
 956:FreeRTOS/Source/queue.c ****                     }
 957:FreeRTOS/Source/queue.c ****                     else
 958:FreeRTOS/Source/queue.c ****                     {
 959:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
 960:FreeRTOS/Source/queue.c ****                     }
 961:FreeRTOS/Source/queue.c ****                 }
 962:FreeRTOS/Source/queue.c ****                 #endif /* configUSE_QUEUE_SETS */
 963:FreeRTOS/Source/queue.c **** 
 964:FreeRTOS/Source/queue.c ****                 taskEXIT_CRITICAL();
 965:FreeRTOS/Source/queue.c ****                 return pdPASS;
 966:FreeRTOS/Source/queue.c ****             }
 967:FreeRTOS/Source/queue.c ****             else
 968:FreeRTOS/Source/queue.c ****             {
 969:FreeRTOS/Source/queue.c ****                 if( xTicksToWait == ( TickType_t ) 0 )
 970:FreeRTOS/Source/queue.c ****                 {
 971:FreeRTOS/Source/queue.c ****                     /* The queue was full and no block time is specified (or
 972:FreeRTOS/Source/queue.c ****                      * the block time has expired) so leave now. */
 973:FreeRTOS/Source/queue.c ****                     taskEXIT_CRITICAL();
 974:FreeRTOS/Source/queue.c **** 
 975:FreeRTOS/Source/queue.c ****                     /* Return to the original privilege level before exiting
 976:FreeRTOS/Source/queue.c ****                      * the function. */
 977:FreeRTOS/Source/queue.c ****                     traceQUEUE_SEND_FAILED( pxQueue );
 978:FreeRTOS/Source/queue.c ****                     return errQUEUE_FULL;
 979:FreeRTOS/Source/queue.c ****                 }
 980:FreeRTOS/Source/queue.c ****                 else if( xEntryTimeSet == pdFALSE )
 981:FreeRTOS/Source/queue.c ****                 {
 982:FreeRTOS/Source/queue.c ****                     /* The queue was full and a block time was specified so
 983:FreeRTOS/Source/queue.c ****                      * configure the timeout structure. */
 984:FreeRTOS/Source/queue.c ****                     vTaskInternalSetTimeOutState( &xTimeOut );
 985:FreeRTOS/Source/queue.c ****                     xEntryTimeSet = pdTRUE;
 986:FreeRTOS/Source/queue.c ****                 }
 987:FreeRTOS/Source/queue.c ****                 else
 988:FreeRTOS/Source/queue.c ****                 {
 989:FreeRTOS/Source/queue.c ****                     /* Entry time was already set. */
 990:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
 991:FreeRTOS/Source/queue.c ****                 }
 992:FreeRTOS/Source/queue.c ****             }
 993:FreeRTOS/Source/queue.c ****         }
 994:FreeRTOS/Source/queue.c ****         taskEXIT_CRITICAL();
 995:FreeRTOS/Source/queue.c **** 
 996:FreeRTOS/Source/queue.c ****         /* Interrupts and other tasks can send to and receive from the queue
 997:FreeRTOS/Source/queue.c ****          * now the critical section has been exited. */
 998:FreeRTOS/Source/queue.c **** 
 999:FreeRTOS/Source/queue.c ****         vTaskSuspendAll();
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 19


1000:FreeRTOS/Source/queue.c ****         prvLockQueue( pxQueue );
1001:FreeRTOS/Source/queue.c **** 
1002:FreeRTOS/Source/queue.c ****         /* Update the timeout state to see if it has expired yet. */
1003:FreeRTOS/Source/queue.c ****         if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1004:FreeRTOS/Source/queue.c ****         {
1005:FreeRTOS/Source/queue.c ****             if( prvIsQueueFull( pxQueue ) != pdFALSE )
1006:FreeRTOS/Source/queue.c ****             {
1007:FreeRTOS/Source/queue.c ****                 traceBLOCKING_ON_QUEUE_SEND( pxQueue );
1008:FreeRTOS/Source/queue.c ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
1009:FreeRTOS/Source/queue.c **** 
1010:FreeRTOS/Source/queue.c ****                 /* Unlocking the queue means queue events can effect the
1011:FreeRTOS/Source/queue.c ****                  * event list. It is possible that interrupts occurring now
1012:FreeRTOS/Source/queue.c ****                  * remove this task from the event list again - but as the
1013:FreeRTOS/Source/queue.c ****                  * scheduler is suspended the task will go onto the pending
1014:FreeRTOS/Source/queue.c ****                  * ready list instead of the actual ready list. */
1015:FreeRTOS/Source/queue.c ****                 prvUnlockQueue( pxQueue );
1016:FreeRTOS/Source/queue.c **** 
1017:FreeRTOS/Source/queue.c ****                 /* Resuming the scheduler will move tasks from the pending
1018:FreeRTOS/Source/queue.c ****                  * ready list into the ready list - so it is feasible that this
1019:FreeRTOS/Source/queue.c ****                  * task is already in the ready list before it yields - in which
1020:FreeRTOS/Source/queue.c ****                  * case the yield will not cause a context switch unless there
1021:FreeRTOS/Source/queue.c ****                  * is also a higher priority task in the pending ready list. */
1022:FreeRTOS/Source/queue.c ****                 if( xTaskResumeAll() == pdFALSE )
1023:FreeRTOS/Source/queue.c ****                 {
1024:FreeRTOS/Source/queue.c ****                     portYIELD_WITHIN_API();
1025:FreeRTOS/Source/queue.c ****                 }
1026:FreeRTOS/Source/queue.c ****             }
1027:FreeRTOS/Source/queue.c ****             else
1028:FreeRTOS/Source/queue.c ****             {
1029:FreeRTOS/Source/queue.c ****                 /* Try again. */
1030:FreeRTOS/Source/queue.c ****                 prvUnlockQueue( pxQueue );
1031:FreeRTOS/Source/queue.c ****                 ( void ) xTaskResumeAll();
1032:FreeRTOS/Source/queue.c ****             }
1033:FreeRTOS/Source/queue.c ****         }
1034:FreeRTOS/Source/queue.c ****         else
1035:FreeRTOS/Source/queue.c ****         {
1036:FreeRTOS/Source/queue.c ****             /* The timeout has expired. */
1037:FreeRTOS/Source/queue.c ****             prvUnlockQueue( pxQueue );
1038:FreeRTOS/Source/queue.c ****             ( void ) xTaskResumeAll();
1039:FreeRTOS/Source/queue.c **** 
1040:FreeRTOS/Source/queue.c ****             traceQUEUE_SEND_FAILED( pxQueue );
1041:FreeRTOS/Source/queue.c ****             return errQUEUE_FULL;
1042:FreeRTOS/Source/queue.c ****         }
1043:FreeRTOS/Source/queue.c ****     } /*lint -restore */
1044:FreeRTOS/Source/queue.c **** }
1045:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1046:FreeRTOS/Source/queue.c **** 
1047:FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue,
1048:FreeRTOS/Source/queue.c ****                                      const void * const pvItemToQueue,
1049:FreeRTOS/Source/queue.c ****                                      BaseType_t * const pxHigherPriorityTaskWoken,
1050:FreeRTOS/Source/queue.c ****                                      const BaseType_t xCopyPosition )
1051:FreeRTOS/Source/queue.c **** {
1052:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
1053:FreeRTOS/Source/queue.c ****     UBaseType_t uxSavedInterruptStatus;
1054:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
1055:FreeRTOS/Source/queue.c **** 
1056:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue );
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 20


1057:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
1058:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
1059:FreeRTOS/Source/queue.c **** 
1060:FreeRTOS/Source/queue.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
1061:FreeRTOS/Source/queue.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
1062:FreeRTOS/Source/queue.c ****      * above the maximum system call priority are kept permanently enabled, even
1063:FreeRTOS/Source/queue.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
1064:FreeRTOS/Source/queue.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1065:FreeRTOS/Source/queue.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1066:FreeRTOS/Source/queue.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
1067:FreeRTOS/Source/queue.c ****      * assigned a priority above the configured maximum system call priority.
1068:FreeRTOS/Source/queue.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
1069:FreeRTOS/Source/queue.c ****      * that have been assigned a priority at or (logically) below the maximum
1070:FreeRTOS/Source/queue.c ****      * system call interrupt priority.  FreeRTOS maintains a separate interrupt
1071:FreeRTOS/Source/queue.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
1072:FreeRTOS/Source/queue.c ****      * More information (albeit Cortex-M specific) is provided on the following
1073:FreeRTOS/Source/queue.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1074:FreeRTOS/Source/queue.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1075:FreeRTOS/Source/queue.c **** 
1076:FreeRTOS/Source/queue.c ****     /* Similar to xQueueGenericSend, except without blocking if there is no room
1077:FreeRTOS/Source/queue.c ****      * in the queue.  Also don't directly wake a task that was blocked on a queue
1078:FreeRTOS/Source/queue.c ****      * read, instead return a flag to say whether a context switch is required or
1079:FreeRTOS/Source/queue.c ****      * not (i.e. has a task with a higher priority than us been woken by this
1080:FreeRTOS/Source/queue.c ****      * post). */
1081:FreeRTOS/Source/queue.c ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1082:FreeRTOS/Source/queue.c ****     {
1083:FreeRTOS/Source/queue.c ****         if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE
1084:FreeRTOS/Source/queue.c ****         {
1085:FreeRTOS/Source/queue.c ****             const int8_t cTxLock = pxQueue->cTxLock;
1086:FreeRTOS/Source/queue.c ****             const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
1087:FreeRTOS/Source/queue.c **** 
1088:FreeRTOS/Source/queue.c ****             traceQUEUE_SEND_FROM_ISR( pxQueue );
1089:FreeRTOS/Source/queue.c **** 
1090:FreeRTOS/Source/queue.c ****             /* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
1091:FreeRTOS/Source/queue.c ****              *  semaphore or mutex.  That means prvCopyDataToQueue() cannot result
1092:FreeRTOS/Source/queue.c ****              *  in a task disinheriting a priority and prvCopyDataToQueue() can be
1093:FreeRTOS/Source/queue.c ****              *  called here even though the disinherit function does not check if
1094:FreeRTOS/Source/queue.c ****              *  the scheduler is suspended before accessing the ready lists. */
1095:FreeRTOS/Source/queue.c ****             ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
1096:FreeRTOS/Source/queue.c **** 
1097:FreeRTOS/Source/queue.c ****             /* The event list is not altered if the queue is locked.  This will
1098:FreeRTOS/Source/queue.c ****              * be done when the queue is unlocked later. */
1099:FreeRTOS/Source/queue.c ****             if( cTxLock == queueUNLOCKED )
1100:FreeRTOS/Source/queue.c ****             {
1101:FreeRTOS/Source/queue.c ****                 #if ( configUSE_QUEUE_SETS == 1 )
1102:FreeRTOS/Source/queue.c ****                 {
1103:FreeRTOS/Source/queue.c ****                     if( pxQueue->pxQueueSetContainer != NULL )
1104:FreeRTOS/Source/queue.c ****                     {
1105:FreeRTOS/Source/queue.c ****                         if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != (
1106:FreeRTOS/Source/queue.c ****                         {
1107:FreeRTOS/Source/queue.c ****                             /* Do not notify the queue set as an existing item
1108:FreeRTOS/Source/queue.c ****                              * was overwritten in the queue so the number of items
1109:FreeRTOS/Source/queue.c ****                              * in the queue has not changed. */
1110:FreeRTOS/Source/queue.c ****                             mtCOVERAGE_TEST_MARKER();
1111:FreeRTOS/Source/queue.c ****                         }
1112:FreeRTOS/Source/queue.c ****                         else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1113:FreeRTOS/Source/queue.c ****                         {
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 21


1114:FreeRTOS/Source/queue.c ****                             /* The queue is a member of a queue set, and posting
1115:FreeRTOS/Source/queue.c ****                              * to the queue set caused a higher priority task to
1116:FreeRTOS/Source/queue.c ****                              * unblock.  A context switch is required. */
1117:FreeRTOS/Source/queue.c ****                             if( pxHigherPriorityTaskWoken != NULL )
1118:FreeRTOS/Source/queue.c ****                             {
1119:FreeRTOS/Source/queue.c ****                                 *pxHigherPriorityTaskWoken = pdTRUE;
1120:FreeRTOS/Source/queue.c ****                             }
1121:FreeRTOS/Source/queue.c ****                             else
1122:FreeRTOS/Source/queue.c ****                             {
1123:FreeRTOS/Source/queue.c ****                                 mtCOVERAGE_TEST_MARKER();
1124:FreeRTOS/Source/queue.c ****                             }
1125:FreeRTOS/Source/queue.c ****                         }
1126:FreeRTOS/Source/queue.c ****                         else
1127:FreeRTOS/Source/queue.c ****                         {
1128:FreeRTOS/Source/queue.c ****                             mtCOVERAGE_TEST_MARKER();
1129:FreeRTOS/Source/queue.c ****                         }
1130:FreeRTOS/Source/queue.c ****                     }
1131:FreeRTOS/Source/queue.c ****                     else
1132:FreeRTOS/Source/queue.c ****                     {
1133:FreeRTOS/Source/queue.c ****                         if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1134:FreeRTOS/Source/queue.c ****                         {
1135:FreeRTOS/Source/queue.c ****                             if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) !=
1136:FreeRTOS/Source/queue.c ****                             {
1137:FreeRTOS/Source/queue.c ****                                 /* The task waiting has a higher priority so
1138:FreeRTOS/Source/queue.c ****                                  *  record that a context switch is required. */
1139:FreeRTOS/Source/queue.c ****                                 if( pxHigherPriorityTaskWoken != NULL )
1140:FreeRTOS/Source/queue.c ****                                 {
1141:FreeRTOS/Source/queue.c ****                                     *pxHigherPriorityTaskWoken = pdTRUE;
1142:FreeRTOS/Source/queue.c ****                                 }
1143:FreeRTOS/Source/queue.c ****                                 else
1144:FreeRTOS/Source/queue.c ****                                 {
1145:FreeRTOS/Source/queue.c ****                                     mtCOVERAGE_TEST_MARKER();
1146:FreeRTOS/Source/queue.c ****                                 }
1147:FreeRTOS/Source/queue.c ****                             }
1148:FreeRTOS/Source/queue.c ****                             else
1149:FreeRTOS/Source/queue.c ****                             {
1150:FreeRTOS/Source/queue.c ****                                 mtCOVERAGE_TEST_MARKER();
1151:FreeRTOS/Source/queue.c ****                             }
1152:FreeRTOS/Source/queue.c ****                         }
1153:FreeRTOS/Source/queue.c ****                         else
1154:FreeRTOS/Source/queue.c ****                         {
1155:FreeRTOS/Source/queue.c ****                             mtCOVERAGE_TEST_MARKER();
1156:FreeRTOS/Source/queue.c ****                         }
1157:FreeRTOS/Source/queue.c ****                     }
1158:FreeRTOS/Source/queue.c ****                 }
1159:FreeRTOS/Source/queue.c ****                 #else /* configUSE_QUEUE_SETS */
1160:FreeRTOS/Source/queue.c ****                 {
1161:FreeRTOS/Source/queue.c ****                     if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1162:FreeRTOS/Source/queue.c ****                     {
1163:FreeRTOS/Source/queue.c ****                         if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdF
1164:FreeRTOS/Source/queue.c ****                         {
1165:FreeRTOS/Source/queue.c ****                             /* The task waiting has a higher priority so record that a
1166:FreeRTOS/Source/queue.c ****                              * context switch is required. */
1167:FreeRTOS/Source/queue.c ****                             if( pxHigherPriorityTaskWoken != NULL )
1168:FreeRTOS/Source/queue.c ****                             {
1169:FreeRTOS/Source/queue.c ****                                 *pxHigherPriorityTaskWoken = pdTRUE;
1170:FreeRTOS/Source/queue.c ****                             }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 22


1171:FreeRTOS/Source/queue.c ****                             else
1172:FreeRTOS/Source/queue.c ****                             {
1173:FreeRTOS/Source/queue.c ****                                 mtCOVERAGE_TEST_MARKER();
1174:FreeRTOS/Source/queue.c ****                             }
1175:FreeRTOS/Source/queue.c ****                         }
1176:FreeRTOS/Source/queue.c ****                         else
1177:FreeRTOS/Source/queue.c ****                         {
1178:FreeRTOS/Source/queue.c ****                             mtCOVERAGE_TEST_MARKER();
1179:FreeRTOS/Source/queue.c ****                         }
1180:FreeRTOS/Source/queue.c ****                     }
1181:FreeRTOS/Source/queue.c ****                     else
1182:FreeRTOS/Source/queue.c ****                     {
1183:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
1184:FreeRTOS/Source/queue.c ****                     }
1185:FreeRTOS/Source/queue.c **** 
1186:FreeRTOS/Source/queue.c ****                     /* Not used in this path. */
1187:FreeRTOS/Source/queue.c ****                     ( void ) uxPreviousMessagesWaiting;
1188:FreeRTOS/Source/queue.c ****                 }
1189:FreeRTOS/Source/queue.c ****                 #endif /* configUSE_QUEUE_SETS */
1190:FreeRTOS/Source/queue.c ****             }
1191:FreeRTOS/Source/queue.c ****             else
1192:FreeRTOS/Source/queue.c ****             {
1193:FreeRTOS/Source/queue.c ****                 /* Increment the lock count so the task that unlocks the queue
1194:FreeRTOS/Source/queue.c ****                  * knows that data was posted while it was locked. */
1195:FreeRTOS/Source/queue.c ****                 prvIncrementQueueTxLock( pxQueue, cTxLock );
1196:FreeRTOS/Source/queue.c ****             }
1197:FreeRTOS/Source/queue.c **** 
1198:FreeRTOS/Source/queue.c ****             xReturn = pdPASS;
1199:FreeRTOS/Source/queue.c ****         }
1200:FreeRTOS/Source/queue.c ****         else
1201:FreeRTOS/Source/queue.c ****         {
1202:FreeRTOS/Source/queue.c ****             traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1203:FreeRTOS/Source/queue.c ****             xReturn = errQUEUE_FULL;
1204:FreeRTOS/Source/queue.c ****         }
1205:FreeRTOS/Source/queue.c ****     }
1206:FreeRTOS/Source/queue.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1207:FreeRTOS/Source/queue.c **** 
1208:FreeRTOS/Source/queue.c ****     return xReturn;
1209:FreeRTOS/Source/queue.c **** }
1210:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1211:FreeRTOS/Source/queue.c **** 
1212:FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue,
1213:FreeRTOS/Source/queue.c ****                               BaseType_t * const pxHigherPriorityTaskWoken )
1214:FreeRTOS/Source/queue.c **** {
1215:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
1216:FreeRTOS/Source/queue.c ****     UBaseType_t uxSavedInterruptStatus;
1217:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
1218:FreeRTOS/Source/queue.c **** 
1219:FreeRTOS/Source/queue.c ****     /* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1220:FreeRTOS/Source/queue.c ****      * item size is 0.  Don't directly wake a task that was blocked on a queue
1221:FreeRTOS/Source/queue.c ****      * read, instead return a flag to say whether a context switch is required or
1222:FreeRTOS/Source/queue.c ****      * not (i.e. has a task with a higher priority than us been woken by this
1223:FreeRTOS/Source/queue.c ****      * post). */
1224:FreeRTOS/Source/queue.c **** 
1225:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue );
1226:FreeRTOS/Source/queue.c **** 
1227:FreeRTOS/Source/queue.c ****     /* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 23


1228:FreeRTOS/Source/queue.c ****      * if the item size is not 0. */
1229:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue->uxItemSize == 0 );
1230:FreeRTOS/Source/queue.c **** 
1231:FreeRTOS/Source/queue.c ****     /* Normally a mutex would not be given from an interrupt, especially if
1232:FreeRTOS/Source/queue.c ****      * there is a mutex holder, as priority inheritance makes no sense for an
1233:FreeRTOS/Source/queue.c ****      * interrupts, only tasks. */
1234:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMu
1235:FreeRTOS/Source/queue.c **** 
1236:FreeRTOS/Source/queue.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
1237:FreeRTOS/Source/queue.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
1238:FreeRTOS/Source/queue.c ****      * above the maximum system call priority are kept permanently enabled, even
1239:FreeRTOS/Source/queue.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
1240:FreeRTOS/Source/queue.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1241:FreeRTOS/Source/queue.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1242:FreeRTOS/Source/queue.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
1243:FreeRTOS/Source/queue.c ****      * assigned a priority above the configured maximum system call priority.
1244:FreeRTOS/Source/queue.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
1245:FreeRTOS/Source/queue.c ****      * that have been assigned a priority at or (logically) below the maximum
1246:FreeRTOS/Source/queue.c ****      * system call interrupt priority.  FreeRTOS maintains a separate interrupt
1247:FreeRTOS/Source/queue.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
1248:FreeRTOS/Source/queue.c ****      * More information (albeit Cortex-M specific) is provided on the following
1249:FreeRTOS/Source/queue.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1250:FreeRTOS/Source/queue.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1251:FreeRTOS/Source/queue.c **** 
1252:FreeRTOS/Source/queue.c ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1253:FreeRTOS/Source/queue.c ****     {
1254:FreeRTOS/Source/queue.c ****         const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1255:FreeRTOS/Source/queue.c **** 
1256:FreeRTOS/Source/queue.c ****         /* When the queue is used to implement a semaphore no data is ever
1257:FreeRTOS/Source/queue.c ****          * moved through the queue but it is still valid to see if the queue 'has
1258:FreeRTOS/Source/queue.c ****          * space'. */
1259:FreeRTOS/Source/queue.c ****         if( uxMessagesWaiting < pxQueue->uxLength )
1260:FreeRTOS/Source/queue.c ****         {
1261:FreeRTOS/Source/queue.c ****             const int8_t cTxLock = pxQueue->cTxLock;
1262:FreeRTOS/Source/queue.c **** 
1263:FreeRTOS/Source/queue.c ****             traceQUEUE_SEND_FROM_ISR( pxQueue );
1264:FreeRTOS/Source/queue.c **** 
1265:FreeRTOS/Source/queue.c ****             /* A task can only have an inherited priority if it is a mutex
1266:FreeRTOS/Source/queue.c ****              * holder - and if there is a mutex holder then the mutex cannot be
1267:FreeRTOS/Source/queue.c ****              * given from an ISR.  As this is the ISR version of the function it
1268:FreeRTOS/Source/queue.c ****              * can be assumed there is no mutex holder and no need to determine if
1269:FreeRTOS/Source/queue.c ****              * priority disinheritance is needed.  Simply increase the count of
1270:FreeRTOS/Source/queue.c ****              * messages (semaphores) available. */
1271:FreeRTOS/Source/queue.c ****             pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1272:FreeRTOS/Source/queue.c **** 
1273:FreeRTOS/Source/queue.c ****             /* The event list is not altered if the queue is locked.  This will
1274:FreeRTOS/Source/queue.c ****              * be done when the queue is unlocked later. */
1275:FreeRTOS/Source/queue.c ****             if( cTxLock == queueUNLOCKED )
1276:FreeRTOS/Source/queue.c ****             {
1277:FreeRTOS/Source/queue.c ****                 #if ( configUSE_QUEUE_SETS == 1 )
1278:FreeRTOS/Source/queue.c ****                 {
1279:FreeRTOS/Source/queue.c ****                     if( pxQueue->pxQueueSetContainer != NULL )
1280:FreeRTOS/Source/queue.c ****                     {
1281:FreeRTOS/Source/queue.c ****                         if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1282:FreeRTOS/Source/queue.c ****                         {
1283:FreeRTOS/Source/queue.c ****                             /* The semaphore is a member of a queue set, and
1284:FreeRTOS/Source/queue.c ****                              * posting to the queue set caused a higher priority
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 24


1285:FreeRTOS/Source/queue.c ****                              * task to unblock.  A context switch is required. */
1286:FreeRTOS/Source/queue.c ****                             if( pxHigherPriorityTaskWoken != NULL )
1287:FreeRTOS/Source/queue.c ****                             {
1288:FreeRTOS/Source/queue.c ****                                 *pxHigherPriorityTaskWoken = pdTRUE;
1289:FreeRTOS/Source/queue.c ****                             }
1290:FreeRTOS/Source/queue.c ****                             else
1291:FreeRTOS/Source/queue.c ****                             {
1292:FreeRTOS/Source/queue.c ****                                 mtCOVERAGE_TEST_MARKER();
1293:FreeRTOS/Source/queue.c ****                             }
1294:FreeRTOS/Source/queue.c ****                         }
1295:FreeRTOS/Source/queue.c ****                         else
1296:FreeRTOS/Source/queue.c ****                         {
1297:FreeRTOS/Source/queue.c ****                             mtCOVERAGE_TEST_MARKER();
1298:FreeRTOS/Source/queue.c ****                         }
1299:FreeRTOS/Source/queue.c ****                     }
1300:FreeRTOS/Source/queue.c ****                     else
1301:FreeRTOS/Source/queue.c ****                     {
1302:FreeRTOS/Source/queue.c ****                         if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1303:FreeRTOS/Source/queue.c ****                         {
1304:FreeRTOS/Source/queue.c ****                             if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) !=
1305:FreeRTOS/Source/queue.c ****                             {
1306:FreeRTOS/Source/queue.c ****                                 /* The task waiting has a higher priority so
1307:FreeRTOS/Source/queue.c ****                                  *  record that a context switch is required. */
1308:FreeRTOS/Source/queue.c ****                                 if( pxHigherPriorityTaskWoken != NULL )
1309:FreeRTOS/Source/queue.c ****                                 {
1310:FreeRTOS/Source/queue.c ****                                     *pxHigherPriorityTaskWoken = pdTRUE;
1311:FreeRTOS/Source/queue.c ****                                 }
1312:FreeRTOS/Source/queue.c ****                                 else
1313:FreeRTOS/Source/queue.c ****                                 {
1314:FreeRTOS/Source/queue.c ****                                     mtCOVERAGE_TEST_MARKER();
1315:FreeRTOS/Source/queue.c ****                                 }
1316:FreeRTOS/Source/queue.c ****                             }
1317:FreeRTOS/Source/queue.c ****                             else
1318:FreeRTOS/Source/queue.c ****                             {
1319:FreeRTOS/Source/queue.c ****                                 mtCOVERAGE_TEST_MARKER();
1320:FreeRTOS/Source/queue.c ****                             }
1321:FreeRTOS/Source/queue.c ****                         }
1322:FreeRTOS/Source/queue.c ****                         else
1323:FreeRTOS/Source/queue.c ****                         {
1324:FreeRTOS/Source/queue.c ****                             mtCOVERAGE_TEST_MARKER();
1325:FreeRTOS/Source/queue.c ****                         }
1326:FreeRTOS/Source/queue.c ****                     }
1327:FreeRTOS/Source/queue.c ****                 }
1328:FreeRTOS/Source/queue.c ****                 #else /* configUSE_QUEUE_SETS */
1329:FreeRTOS/Source/queue.c ****                 {
1330:FreeRTOS/Source/queue.c ****                     if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1331:FreeRTOS/Source/queue.c ****                     {
1332:FreeRTOS/Source/queue.c ****                         if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdF
1333:FreeRTOS/Source/queue.c ****                         {
1334:FreeRTOS/Source/queue.c ****                             /* The task waiting has a higher priority so record that a
1335:FreeRTOS/Source/queue.c ****                              * context switch is required. */
1336:FreeRTOS/Source/queue.c ****                             if( pxHigherPriorityTaskWoken != NULL )
1337:FreeRTOS/Source/queue.c ****                             {
1338:FreeRTOS/Source/queue.c ****                                 *pxHigherPriorityTaskWoken = pdTRUE;
1339:FreeRTOS/Source/queue.c ****                             }
1340:FreeRTOS/Source/queue.c ****                             else
1341:FreeRTOS/Source/queue.c ****                             {
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 25


1342:FreeRTOS/Source/queue.c ****                                 mtCOVERAGE_TEST_MARKER();
1343:FreeRTOS/Source/queue.c ****                             }
1344:FreeRTOS/Source/queue.c ****                         }
1345:FreeRTOS/Source/queue.c ****                         else
1346:FreeRTOS/Source/queue.c ****                         {
1347:FreeRTOS/Source/queue.c ****                             mtCOVERAGE_TEST_MARKER();
1348:FreeRTOS/Source/queue.c ****                         }
1349:FreeRTOS/Source/queue.c ****                     }
1350:FreeRTOS/Source/queue.c ****                     else
1351:FreeRTOS/Source/queue.c ****                     {
1352:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
1353:FreeRTOS/Source/queue.c ****                     }
1354:FreeRTOS/Source/queue.c ****                 }
1355:FreeRTOS/Source/queue.c ****                 #endif /* configUSE_QUEUE_SETS */
1356:FreeRTOS/Source/queue.c ****             }
1357:FreeRTOS/Source/queue.c ****             else
1358:FreeRTOS/Source/queue.c ****             {
1359:FreeRTOS/Source/queue.c ****                 /* Increment the lock count so the task that unlocks the queue
1360:FreeRTOS/Source/queue.c ****                  * knows that data was posted while it was locked. */
1361:FreeRTOS/Source/queue.c ****                 prvIncrementQueueTxLock( pxQueue, cTxLock );
1362:FreeRTOS/Source/queue.c ****             }
1363:FreeRTOS/Source/queue.c **** 
1364:FreeRTOS/Source/queue.c ****             xReturn = pdPASS;
1365:FreeRTOS/Source/queue.c ****         }
1366:FreeRTOS/Source/queue.c ****         else
1367:FreeRTOS/Source/queue.c ****         {
1368:FreeRTOS/Source/queue.c ****             traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1369:FreeRTOS/Source/queue.c ****             xReturn = errQUEUE_FULL;
1370:FreeRTOS/Source/queue.c ****         }
1371:FreeRTOS/Source/queue.c ****     }
1372:FreeRTOS/Source/queue.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1373:FreeRTOS/Source/queue.c **** 
1374:FreeRTOS/Source/queue.c ****     return xReturn;
1375:FreeRTOS/Source/queue.c **** }
1376:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1377:FreeRTOS/Source/queue.c **** 
1378:FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue,
1379:FreeRTOS/Source/queue.c ****                           void * const pvBuffer,
1380:FreeRTOS/Source/queue.c ****                           TickType_t xTicksToWait )
1381:FreeRTOS/Source/queue.c **** {
1382:FreeRTOS/Source/queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
1383:FreeRTOS/Source/queue.c ****     TimeOut_t xTimeOut;
1384:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
1385:FreeRTOS/Source/queue.c **** 
1386:FreeRTOS/Source/queue.c ****     /* Check the pointer is not NULL. */
1387:FreeRTOS/Source/queue.c ****     configASSERT( ( pxQueue ) );
1388:FreeRTOS/Source/queue.c **** 
1389:FreeRTOS/Source/queue.c ****     /* The buffer into which data is received can only be NULL if the data size
1390:FreeRTOS/Source/queue.c ****      * is zero (so no data is copied into the buffer). */
1391:FreeRTOS/Source/queue.c ****     configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) 
1392:FreeRTOS/Source/queue.c **** 
1393:FreeRTOS/Source/queue.c ****     /* Cannot block if the scheduler is suspended. */
1394:FreeRTOS/Source/queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1395:FreeRTOS/Source/queue.c ****     {
1396:FreeRTOS/Source/queue.c ****         configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait 
1397:FreeRTOS/Source/queue.c ****     }
1398:FreeRTOS/Source/queue.c ****     #endif
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 26


1399:FreeRTOS/Source/queue.c **** 
1400:FreeRTOS/Source/queue.c ****     /*lint -save -e904  This function relaxes the coding standard somewhat to
1401:FreeRTOS/Source/queue.c ****      * allow return statements within the function itself.  This is done in the
1402:FreeRTOS/Source/queue.c ****      * interest of execution time efficiency. */
1403:FreeRTOS/Source/queue.c ****     for( ; ; )
1404:FreeRTOS/Source/queue.c ****     {
1405:FreeRTOS/Source/queue.c ****         taskENTER_CRITICAL();
1406:FreeRTOS/Source/queue.c ****         {
1407:FreeRTOS/Source/queue.c ****             const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1408:FreeRTOS/Source/queue.c **** 
1409:FreeRTOS/Source/queue.c ****             /* Is there data in the queue now?  To be running the calling task
1410:FreeRTOS/Source/queue.c ****              * must be the highest priority task wanting to access the queue. */
1411:FreeRTOS/Source/queue.c ****             if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1412:FreeRTOS/Source/queue.c ****             {
1413:FreeRTOS/Source/queue.c ****                 /* Data available, remove one item. */
1414:FreeRTOS/Source/queue.c ****                 prvCopyDataFromQueue( pxQueue, pvBuffer );
1415:FreeRTOS/Source/queue.c ****                 traceQUEUE_RECEIVE( pxQueue );
1416:FreeRTOS/Source/queue.c ****                 pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1417:FreeRTOS/Source/queue.c **** 
1418:FreeRTOS/Source/queue.c ****                 /* There is now space in the queue, were any tasks waiting to
1419:FreeRTOS/Source/queue.c ****                  * post to the queue?  If so, unblock the highest priority waiting
1420:FreeRTOS/Source/queue.c ****                  * task. */
1421:FreeRTOS/Source/queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1422:FreeRTOS/Source/queue.c ****                 {
1423:FreeRTOS/Source/queue.c ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1424:FreeRTOS/Source/queue.c ****                     {
1425:FreeRTOS/Source/queue.c ****                         queueYIELD_IF_USING_PREEMPTION();
1426:FreeRTOS/Source/queue.c ****                     }
1427:FreeRTOS/Source/queue.c ****                     else
1428:FreeRTOS/Source/queue.c ****                     {
1429:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
1430:FreeRTOS/Source/queue.c ****                     }
1431:FreeRTOS/Source/queue.c ****                 }
1432:FreeRTOS/Source/queue.c ****                 else
1433:FreeRTOS/Source/queue.c ****                 {
1434:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
1435:FreeRTOS/Source/queue.c ****                 }
1436:FreeRTOS/Source/queue.c **** 
1437:FreeRTOS/Source/queue.c ****                 taskEXIT_CRITICAL();
1438:FreeRTOS/Source/queue.c ****                 return pdPASS;
1439:FreeRTOS/Source/queue.c ****             }
1440:FreeRTOS/Source/queue.c ****             else
1441:FreeRTOS/Source/queue.c ****             {
1442:FreeRTOS/Source/queue.c ****                 if( xTicksToWait == ( TickType_t ) 0 )
1443:FreeRTOS/Source/queue.c ****                 {
1444:FreeRTOS/Source/queue.c ****                     /* The queue was empty and no block time is specified (or
1445:FreeRTOS/Source/queue.c ****                      * the block time has expired) so leave now. */
1446:FreeRTOS/Source/queue.c ****                     taskEXIT_CRITICAL();
1447:FreeRTOS/Source/queue.c ****                     traceQUEUE_RECEIVE_FAILED( pxQueue );
1448:FreeRTOS/Source/queue.c ****                     return errQUEUE_EMPTY;
1449:FreeRTOS/Source/queue.c ****                 }
1450:FreeRTOS/Source/queue.c ****                 else if( xEntryTimeSet == pdFALSE )
1451:FreeRTOS/Source/queue.c ****                 {
1452:FreeRTOS/Source/queue.c ****                     /* The queue was empty and a block time was specified so
1453:FreeRTOS/Source/queue.c ****                      * configure the timeout structure. */
1454:FreeRTOS/Source/queue.c ****                     vTaskInternalSetTimeOutState( &xTimeOut );
1455:FreeRTOS/Source/queue.c ****                     xEntryTimeSet = pdTRUE;
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 27


1456:FreeRTOS/Source/queue.c ****                 }
1457:FreeRTOS/Source/queue.c ****                 else
1458:FreeRTOS/Source/queue.c ****                 {
1459:FreeRTOS/Source/queue.c ****                     /* Entry time was already set. */
1460:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
1461:FreeRTOS/Source/queue.c ****                 }
1462:FreeRTOS/Source/queue.c ****             }
1463:FreeRTOS/Source/queue.c ****         }
1464:FreeRTOS/Source/queue.c ****         taskEXIT_CRITICAL();
1465:FreeRTOS/Source/queue.c **** 
1466:FreeRTOS/Source/queue.c ****         /* Interrupts and other tasks can send to and receive from the queue
1467:FreeRTOS/Source/queue.c ****          * now the critical section has been exited. */
1468:FreeRTOS/Source/queue.c **** 
1469:FreeRTOS/Source/queue.c ****         vTaskSuspendAll();
1470:FreeRTOS/Source/queue.c ****         prvLockQueue( pxQueue );
1471:FreeRTOS/Source/queue.c **** 
1472:FreeRTOS/Source/queue.c ****         /* Update the timeout state to see if it has expired yet. */
1473:FreeRTOS/Source/queue.c ****         if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1474:FreeRTOS/Source/queue.c ****         {
1475:FreeRTOS/Source/queue.c ****             /* The timeout has not expired.  If the queue is still empty place
1476:FreeRTOS/Source/queue.c ****              * the task on the list of tasks waiting to receive from the queue. */
1477:FreeRTOS/Source/queue.c ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1478:FreeRTOS/Source/queue.c ****             {
1479:FreeRTOS/Source/queue.c ****                 traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1480:FreeRTOS/Source/queue.c ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1481:FreeRTOS/Source/queue.c ****                 prvUnlockQueue( pxQueue );
1482:FreeRTOS/Source/queue.c **** 
1483:FreeRTOS/Source/queue.c ****                 if( xTaskResumeAll() == pdFALSE )
1484:FreeRTOS/Source/queue.c ****                 {
1485:FreeRTOS/Source/queue.c ****                     portYIELD_WITHIN_API();
1486:FreeRTOS/Source/queue.c ****                 }
1487:FreeRTOS/Source/queue.c ****                 else
1488:FreeRTOS/Source/queue.c ****                 {
1489:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
1490:FreeRTOS/Source/queue.c ****                 }
1491:FreeRTOS/Source/queue.c ****             }
1492:FreeRTOS/Source/queue.c ****             else
1493:FreeRTOS/Source/queue.c ****             {
1494:FreeRTOS/Source/queue.c ****                 /* The queue contains data again.  Loop back to try and read the
1495:FreeRTOS/Source/queue.c ****                  * data. */
1496:FreeRTOS/Source/queue.c ****                 prvUnlockQueue( pxQueue );
1497:FreeRTOS/Source/queue.c ****                 ( void ) xTaskResumeAll();
1498:FreeRTOS/Source/queue.c ****             }
1499:FreeRTOS/Source/queue.c ****         }
1500:FreeRTOS/Source/queue.c ****         else
1501:FreeRTOS/Source/queue.c ****         {
1502:FreeRTOS/Source/queue.c ****             /* Timed out.  If there is no data in the queue exit, otherwise loop
1503:FreeRTOS/Source/queue.c ****              * back and attempt to read the data. */
1504:FreeRTOS/Source/queue.c ****             prvUnlockQueue( pxQueue );
1505:FreeRTOS/Source/queue.c ****             ( void ) xTaskResumeAll();
1506:FreeRTOS/Source/queue.c **** 
1507:FreeRTOS/Source/queue.c ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1508:FreeRTOS/Source/queue.c ****             {
1509:FreeRTOS/Source/queue.c ****                 traceQUEUE_RECEIVE_FAILED( pxQueue );
1510:FreeRTOS/Source/queue.c ****                 return errQUEUE_EMPTY;
1511:FreeRTOS/Source/queue.c ****             }
1512:FreeRTOS/Source/queue.c ****             else
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 28


1513:FreeRTOS/Source/queue.c ****             {
1514:FreeRTOS/Source/queue.c ****                 mtCOVERAGE_TEST_MARKER();
1515:FreeRTOS/Source/queue.c ****             }
1516:FreeRTOS/Source/queue.c ****         }
1517:FreeRTOS/Source/queue.c ****     } /*lint -restore */
1518:FreeRTOS/Source/queue.c **** }
1519:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1520:FreeRTOS/Source/queue.c **** 
1521:FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue,
1522:FreeRTOS/Source/queue.c ****                                 TickType_t xTicksToWait )
1523:FreeRTOS/Source/queue.c **** {
1524:FreeRTOS/Source/queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
1525:FreeRTOS/Source/queue.c ****     TimeOut_t xTimeOut;
1526:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
1527:FreeRTOS/Source/queue.c **** 
1528:FreeRTOS/Source/queue.c ****     #if ( configUSE_MUTEXES == 1 )
1529:FreeRTOS/Source/queue.c ****         BaseType_t xInheritanceOccurred = pdFALSE;
1530:FreeRTOS/Source/queue.c ****     #endif
1531:FreeRTOS/Source/queue.c **** 
1532:FreeRTOS/Source/queue.c ****     /* Check the queue pointer is not NULL. */
1533:FreeRTOS/Source/queue.c ****     configASSERT( ( pxQueue ) );
1534:FreeRTOS/Source/queue.c **** 
1535:FreeRTOS/Source/queue.c ****     /* Check this really is a semaphore, in which case the item size will be
1536:FreeRTOS/Source/queue.c ****      * 0. */
1537:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue->uxItemSize == 0 );
1538:FreeRTOS/Source/queue.c **** 
1539:FreeRTOS/Source/queue.c ****     /* Cannot block if the scheduler is suspended. */
1540:FreeRTOS/Source/queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1541:FreeRTOS/Source/queue.c ****     {
1542:FreeRTOS/Source/queue.c ****         configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait 
1543:FreeRTOS/Source/queue.c ****     }
1544:FreeRTOS/Source/queue.c ****     #endif
1545:FreeRTOS/Source/queue.c **** 
1546:FreeRTOS/Source/queue.c ****     /*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1547:FreeRTOS/Source/queue.c ****      * statements within the function itself.  This is done in the interest
1548:FreeRTOS/Source/queue.c ****      * of execution time efficiency. */
1549:FreeRTOS/Source/queue.c ****     for( ; ; )
1550:FreeRTOS/Source/queue.c ****     {
1551:FreeRTOS/Source/queue.c ****         taskENTER_CRITICAL();
1552:FreeRTOS/Source/queue.c ****         {
1553:FreeRTOS/Source/queue.c ****             /* Semaphores are queues with an item size of 0, and where the
1554:FreeRTOS/Source/queue.c ****              * number of messages in the queue is the semaphore's count value. */
1555:FreeRTOS/Source/queue.c ****             const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1556:FreeRTOS/Source/queue.c **** 
1557:FreeRTOS/Source/queue.c ****             /* Is there data in the queue now?  To be running the calling task
1558:FreeRTOS/Source/queue.c ****              * must be the highest priority task wanting to access the queue. */
1559:FreeRTOS/Source/queue.c ****             if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1560:FreeRTOS/Source/queue.c ****             {
1561:FreeRTOS/Source/queue.c ****                 traceQUEUE_RECEIVE( pxQueue );
1562:FreeRTOS/Source/queue.c **** 
1563:FreeRTOS/Source/queue.c ****                 /* Semaphores are queues with a data size of zero and where the
1564:FreeRTOS/Source/queue.c ****                  * messages waiting is the semaphore's count.  Reduce the count. */
1565:FreeRTOS/Source/queue.c ****                 pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1566:FreeRTOS/Source/queue.c **** 
1567:FreeRTOS/Source/queue.c ****                 #if ( configUSE_MUTEXES == 1 )
1568:FreeRTOS/Source/queue.c ****                 {
1569:FreeRTOS/Source/queue.c ****                     if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 29


1570:FreeRTOS/Source/queue.c ****                     {
1571:FreeRTOS/Source/queue.c ****                         /* Record the information required to implement
1572:FreeRTOS/Source/queue.c ****                          * priority inheritance should it become necessary. */
1573:FreeRTOS/Source/queue.c ****                         pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
1574:FreeRTOS/Source/queue.c ****                     }
1575:FreeRTOS/Source/queue.c ****                     else
1576:FreeRTOS/Source/queue.c ****                     {
1577:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
1578:FreeRTOS/Source/queue.c ****                     }
1579:FreeRTOS/Source/queue.c ****                 }
1580:FreeRTOS/Source/queue.c ****                 #endif /* configUSE_MUTEXES */
1581:FreeRTOS/Source/queue.c **** 
1582:FreeRTOS/Source/queue.c ****                 /* Check to see if other tasks are blocked waiting to give the
1583:FreeRTOS/Source/queue.c ****                  * semaphore, and if so, unblock the highest priority such task. */
1584:FreeRTOS/Source/queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1585:FreeRTOS/Source/queue.c ****                 {
1586:FreeRTOS/Source/queue.c ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1587:FreeRTOS/Source/queue.c ****                     {
1588:FreeRTOS/Source/queue.c ****                         queueYIELD_IF_USING_PREEMPTION();
1589:FreeRTOS/Source/queue.c ****                     }
1590:FreeRTOS/Source/queue.c ****                     else
1591:FreeRTOS/Source/queue.c ****                     {
1592:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
1593:FreeRTOS/Source/queue.c ****                     }
1594:FreeRTOS/Source/queue.c ****                 }
1595:FreeRTOS/Source/queue.c ****                 else
1596:FreeRTOS/Source/queue.c ****                 {
1597:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
1598:FreeRTOS/Source/queue.c ****                 }
1599:FreeRTOS/Source/queue.c **** 
1600:FreeRTOS/Source/queue.c ****                 taskEXIT_CRITICAL();
1601:FreeRTOS/Source/queue.c ****                 return pdPASS;
1602:FreeRTOS/Source/queue.c ****             }
1603:FreeRTOS/Source/queue.c ****             else
1604:FreeRTOS/Source/queue.c ****             {
1605:FreeRTOS/Source/queue.c ****                 if( xTicksToWait == ( TickType_t ) 0 )
1606:FreeRTOS/Source/queue.c ****                 {
1607:FreeRTOS/Source/queue.c ****                     /* The semaphore count was 0 and no block time is specified
1608:FreeRTOS/Source/queue.c ****                      * (or the block time has expired) so exit now. */
1609:FreeRTOS/Source/queue.c ****                     taskEXIT_CRITICAL();
1610:FreeRTOS/Source/queue.c ****                     traceQUEUE_RECEIVE_FAILED( pxQueue );
1611:FreeRTOS/Source/queue.c ****                     return errQUEUE_EMPTY;
1612:FreeRTOS/Source/queue.c ****                 }
1613:FreeRTOS/Source/queue.c ****                 else if( xEntryTimeSet == pdFALSE )
1614:FreeRTOS/Source/queue.c ****                 {
1615:FreeRTOS/Source/queue.c ****                     /* The semaphore count was 0 and a block time was specified
1616:FreeRTOS/Source/queue.c ****                      * so configure the timeout structure ready to block. */
1617:FreeRTOS/Source/queue.c ****                     vTaskInternalSetTimeOutState( &xTimeOut );
1618:FreeRTOS/Source/queue.c ****                     xEntryTimeSet = pdTRUE;
1619:FreeRTOS/Source/queue.c ****                 }
1620:FreeRTOS/Source/queue.c ****                 else
1621:FreeRTOS/Source/queue.c ****                 {
1622:FreeRTOS/Source/queue.c ****                     /* Entry time was already set. */
1623:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
1624:FreeRTOS/Source/queue.c ****                 }
1625:FreeRTOS/Source/queue.c ****             }
1626:FreeRTOS/Source/queue.c ****         }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 30


1627:FreeRTOS/Source/queue.c ****         taskEXIT_CRITICAL();
1628:FreeRTOS/Source/queue.c **** 
1629:FreeRTOS/Source/queue.c ****         /* Interrupts and other tasks can give to and take from the semaphore
1630:FreeRTOS/Source/queue.c ****          * now the critical section has been exited. */
1631:FreeRTOS/Source/queue.c **** 
1632:FreeRTOS/Source/queue.c ****         vTaskSuspendAll();
1633:FreeRTOS/Source/queue.c ****         prvLockQueue( pxQueue );
1634:FreeRTOS/Source/queue.c **** 
1635:FreeRTOS/Source/queue.c ****         /* Update the timeout state to see if it has expired yet. */
1636:FreeRTOS/Source/queue.c ****         if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1637:FreeRTOS/Source/queue.c ****         {
1638:FreeRTOS/Source/queue.c ****             /* A block time is specified and not expired.  If the semaphore
1639:FreeRTOS/Source/queue.c ****              * count is 0 then enter the Blocked state to wait for a semaphore to
1640:FreeRTOS/Source/queue.c ****              * become available.  As semaphores are implemented with queues the
1641:FreeRTOS/Source/queue.c ****              * queue being empty is equivalent to the semaphore count being 0. */
1642:FreeRTOS/Source/queue.c ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1643:FreeRTOS/Source/queue.c ****             {
1644:FreeRTOS/Source/queue.c ****                 traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1645:FreeRTOS/Source/queue.c **** 
1646:FreeRTOS/Source/queue.c ****                 #if ( configUSE_MUTEXES == 1 )
1647:FreeRTOS/Source/queue.c ****                 {
1648:FreeRTOS/Source/queue.c ****                     if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1649:FreeRTOS/Source/queue.c ****                     {
1650:FreeRTOS/Source/queue.c ****                         taskENTER_CRITICAL();
1651:FreeRTOS/Source/queue.c ****                         {
1652:FreeRTOS/Source/queue.c ****                             xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMut
1653:FreeRTOS/Source/queue.c ****                         }
1654:FreeRTOS/Source/queue.c ****                         taskEXIT_CRITICAL();
1655:FreeRTOS/Source/queue.c ****                     }
1656:FreeRTOS/Source/queue.c ****                     else
1657:FreeRTOS/Source/queue.c ****                     {
1658:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
1659:FreeRTOS/Source/queue.c ****                     }
1660:FreeRTOS/Source/queue.c ****                 }
1661:FreeRTOS/Source/queue.c ****                 #endif /* if ( configUSE_MUTEXES == 1 ) */
1662:FreeRTOS/Source/queue.c **** 
1663:FreeRTOS/Source/queue.c ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1664:FreeRTOS/Source/queue.c ****                 prvUnlockQueue( pxQueue );
1665:FreeRTOS/Source/queue.c **** 
1666:FreeRTOS/Source/queue.c ****                 if( xTaskResumeAll() == pdFALSE )
1667:FreeRTOS/Source/queue.c ****                 {
1668:FreeRTOS/Source/queue.c ****                     portYIELD_WITHIN_API();
1669:FreeRTOS/Source/queue.c ****                 }
1670:FreeRTOS/Source/queue.c ****                 else
1671:FreeRTOS/Source/queue.c ****                 {
1672:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
1673:FreeRTOS/Source/queue.c ****                 }
1674:FreeRTOS/Source/queue.c ****             }
1675:FreeRTOS/Source/queue.c ****             else
1676:FreeRTOS/Source/queue.c ****             {
1677:FreeRTOS/Source/queue.c ****                 /* There was no timeout and the semaphore count was not 0, so
1678:FreeRTOS/Source/queue.c ****                  * attempt to take the semaphore again. */
1679:FreeRTOS/Source/queue.c ****                 prvUnlockQueue( pxQueue );
1680:FreeRTOS/Source/queue.c ****                 ( void ) xTaskResumeAll();
1681:FreeRTOS/Source/queue.c ****             }
1682:FreeRTOS/Source/queue.c ****         }
1683:FreeRTOS/Source/queue.c ****         else
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 31


1684:FreeRTOS/Source/queue.c ****         {
1685:FreeRTOS/Source/queue.c ****             /* Timed out. */
1686:FreeRTOS/Source/queue.c ****             prvUnlockQueue( pxQueue );
1687:FreeRTOS/Source/queue.c ****             ( void ) xTaskResumeAll();
1688:FreeRTOS/Source/queue.c **** 
1689:FreeRTOS/Source/queue.c ****             /* If the semaphore count is 0 exit now as the timeout has
1690:FreeRTOS/Source/queue.c ****              * expired.  Otherwise return to attempt to take the semaphore that is
1691:FreeRTOS/Source/queue.c ****              * known to be available.  As semaphores are implemented by queues the
1692:FreeRTOS/Source/queue.c ****              * queue being empty is equivalent to the semaphore count being 0. */
1693:FreeRTOS/Source/queue.c ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1694:FreeRTOS/Source/queue.c ****             {
1695:FreeRTOS/Source/queue.c ****                 #if ( configUSE_MUTEXES == 1 )
1696:FreeRTOS/Source/queue.c ****                 {
1697:FreeRTOS/Source/queue.c ****                     /* xInheritanceOccurred could only have be set if
1698:FreeRTOS/Source/queue.c ****                      * pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1699:FreeRTOS/Source/queue.c ****                      * test the mutex type again to check it is actually a mutex. */
1700:FreeRTOS/Source/queue.c ****                     if( xInheritanceOccurred != pdFALSE )
1701:FreeRTOS/Source/queue.c ****                     {
1702:FreeRTOS/Source/queue.c ****                         taskENTER_CRITICAL();
1703:FreeRTOS/Source/queue.c ****                         {
1704:FreeRTOS/Source/queue.c ****                             UBaseType_t uxHighestWaitingPriority;
1705:FreeRTOS/Source/queue.c **** 
1706:FreeRTOS/Source/queue.c ****                             /* This task blocking on the mutex caused another
1707:FreeRTOS/Source/queue.c ****                              * task to inherit this task's priority.  Now this task
1708:FreeRTOS/Source/queue.c ****                              * has timed out the priority should be disinherited
1709:FreeRTOS/Source/queue.c ****                              * again, but only as low as the next highest priority
1710:FreeRTOS/Source/queue.c ****                              * task that is waiting for the same mutex. */
1711:FreeRTOS/Source/queue.c ****                             uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueu
1712:FreeRTOS/Source/queue.c ****                             vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder
1713:FreeRTOS/Source/queue.c ****                         }
1714:FreeRTOS/Source/queue.c ****                         taskEXIT_CRITICAL();
1715:FreeRTOS/Source/queue.c ****                     }
1716:FreeRTOS/Source/queue.c ****                 }
1717:FreeRTOS/Source/queue.c ****                 #endif /* configUSE_MUTEXES */
1718:FreeRTOS/Source/queue.c **** 
1719:FreeRTOS/Source/queue.c ****                 traceQUEUE_RECEIVE_FAILED( pxQueue );
1720:FreeRTOS/Source/queue.c ****                 return errQUEUE_EMPTY;
1721:FreeRTOS/Source/queue.c ****             }
1722:FreeRTOS/Source/queue.c ****             else
1723:FreeRTOS/Source/queue.c ****             {
1724:FreeRTOS/Source/queue.c ****                 mtCOVERAGE_TEST_MARKER();
1725:FreeRTOS/Source/queue.c ****             }
1726:FreeRTOS/Source/queue.c ****         }
1727:FreeRTOS/Source/queue.c ****     } /*lint -restore */
1728:FreeRTOS/Source/queue.c **** }
1729:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1730:FreeRTOS/Source/queue.c **** 
1731:FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue,
1732:FreeRTOS/Source/queue.c ****                        void * const pvBuffer,
1733:FreeRTOS/Source/queue.c ****                        TickType_t xTicksToWait )
1734:FreeRTOS/Source/queue.c **** {
1735:FreeRTOS/Source/queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
1736:FreeRTOS/Source/queue.c ****     TimeOut_t xTimeOut;
1737:FreeRTOS/Source/queue.c ****     int8_t * pcOriginalReadPosition;
1738:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
1739:FreeRTOS/Source/queue.c **** 
1740:FreeRTOS/Source/queue.c ****     /* Check the pointer is not NULL. */
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 32


1741:FreeRTOS/Source/queue.c ****     configASSERT( ( pxQueue ) );
1742:FreeRTOS/Source/queue.c **** 
1743:FreeRTOS/Source/queue.c ****     /* The buffer into which data is received can only be NULL if the data size
1744:FreeRTOS/Source/queue.c ****      * is zero (so no data is copied into the buffer. */
1745:FreeRTOS/Source/queue.c ****     configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) 
1746:FreeRTOS/Source/queue.c **** 
1747:FreeRTOS/Source/queue.c ****     /* Cannot block if the scheduler is suspended. */
1748:FreeRTOS/Source/queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1749:FreeRTOS/Source/queue.c ****     {
1750:FreeRTOS/Source/queue.c ****         configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait 
1751:FreeRTOS/Source/queue.c ****     }
1752:FreeRTOS/Source/queue.c ****     #endif
1753:FreeRTOS/Source/queue.c **** 
1754:FreeRTOS/Source/queue.c ****     /*lint -save -e904  This function relaxes the coding standard somewhat to
1755:FreeRTOS/Source/queue.c ****      * allow return statements within the function itself.  This is done in the
1756:FreeRTOS/Source/queue.c ****      * interest of execution time efficiency. */
1757:FreeRTOS/Source/queue.c ****     for( ; ; )
1758:FreeRTOS/Source/queue.c ****     {
1759:FreeRTOS/Source/queue.c ****         taskENTER_CRITICAL();
1760:FreeRTOS/Source/queue.c ****         {
1761:FreeRTOS/Source/queue.c ****             const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1762:FreeRTOS/Source/queue.c **** 
1763:FreeRTOS/Source/queue.c ****             /* Is there data in the queue now?  To be running the calling task
1764:FreeRTOS/Source/queue.c ****              * must be the highest priority task wanting to access the queue. */
1765:FreeRTOS/Source/queue.c ****             if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1766:FreeRTOS/Source/queue.c ****             {
1767:FreeRTOS/Source/queue.c ****                 /* Remember the read position so it can be reset after the data
1768:FreeRTOS/Source/queue.c ****                  * is read from the queue as this function is only peeking the
1769:FreeRTOS/Source/queue.c ****                  * data, not removing it. */
1770:FreeRTOS/Source/queue.c ****                 pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1771:FreeRTOS/Source/queue.c **** 
1772:FreeRTOS/Source/queue.c ****                 prvCopyDataFromQueue( pxQueue, pvBuffer );
1773:FreeRTOS/Source/queue.c ****                 traceQUEUE_PEEK( pxQueue );
1774:FreeRTOS/Source/queue.c **** 
1775:FreeRTOS/Source/queue.c ****                 /* The data is not being removed, so reset the read pointer. */
1776:FreeRTOS/Source/queue.c ****                 pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1777:FreeRTOS/Source/queue.c **** 
1778:FreeRTOS/Source/queue.c ****                 /* The data is being left in the queue, so see if there are
1779:FreeRTOS/Source/queue.c ****                  * any other tasks waiting for the data. */
1780:FreeRTOS/Source/queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1781:FreeRTOS/Source/queue.c ****                 {
1782:FreeRTOS/Source/queue.c ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE
1783:FreeRTOS/Source/queue.c ****                     {
1784:FreeRTOS/Source/queue.c ****                         /* The task waiting has a higher priority than this task. */
1785:FreeRTOS/Source/queue.c ****                         queueYIELD_IF_USING_PREEMPTION();
1786:FreeRTOS/Source/queue.c ****                     }
1787:FreeRTOS/Source/queue.c ****                     else
1788:FreeRTOS/Source/queue.c ****                     {
1789:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
1790:FreeRTOS/Source/queue.c ****                     }
1791:FreeRTOS/Source/queue.c ****                 }
1792:FreeRTOS/Source/queue.c ****                 else
1793:FreeRTOS/Source/queue.c ****                 {
1794:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
1795:FreeRTOS/Source/queue.c ****                 }
1796:FreeRTOS/Source/queue.c **** 
1797:FreeRTOS/Source/queue.c ****                 taskEXIT_CRITICAL();
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 33


1798:FreeRTOS/Source/queue.c ****                 return pdPASS;
1799:FreeRTOS/Source/queue.c ****             }
1800:FreeRTOS/Source/queue.c ****             else
1801:FreeRTOS/Source/queue.c ****             {
1802:FreeRTOS/Source/queue.c ****                 if( xTicksToWait == ( TickType_t ) 0 )
1803:FreeRTOS/Source/queue.c ****                 {
1804:FreeRTOS/Source/queue.c ****                     /* The queue was empty and no block time is specified (or
1805:FreeRTOS/Source/queue.c ****                      * the block time has expired) so leave now. */
1806:FreeRTOS/Source/queue.c ****                     taskEXIT_CRITICAL();
1807:FreeRTOS/Source/queue.c ****                     traceQUEUE_PEEK_FAILED( pxQueue );
1808:FreeRTOS/Source/queue.c ****                     return errQUEUE_EMPTY;
1809:FreeRTOS/Source/queue.c ****                 }
1810:FreeRTOS/Source/queue.c ****                 else if( xEntryTimeSet == pdFALSE )
1811:FreeRTOS/Source/queue.c ****                 {
1812:FreeRTOS/Source/queue.c ****                     /* The queue was empty and a block time was specified so
1813:FreeRTOS/Source/queue.c ****                      * configure the timeout structure ready to enter the blocked
1814:FreeRTOS/Source/queue.c ****                      * state. */
1815:FreeRTOS/Source/queue.c ****                     vTaskInternalSetTimeOutState( &xTimeOut );
1816:FreeRTOS/Source/queue.c ****                     xEntryTimeSet = pdTRUE;
1817:FreeRTOS/Source/queue.c ****                 }
1818:FreeRTOS/Source/queue.c ****                 else
1819:FreeRTOS/Source/queue.c ****                 {
1820:FreeRTOS/Source/queue.c ****                     /* Entry time was already set. */
1821:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
1822:FreeRTOS/Source/queue.c ****                 }
1823:FreeRTOS/Source/queue.c ****             }
1824:FreeRTOS/Source/queue.c ****         }
1825:FreeRTOS/Source/queue.c ****         taskEXIT_CRITICAL();
1826:FreeRTOS/Source/queue.c **** 
1827:FreeRTOS/Source/queue.c ****         /* Interrupts and other tasks can send to and receive from the queue
1828:FreeRTOS/Source/queue.c ****          * now that the critical section has been exited. */
1829:FreeRTOS/Source/queue.c **** 
1830:FreeRTOS/Source/queue.c ****         vTaskSuspendAll();
1831:FreeRTOS/Source/queue.c ****         prvLockQueue( pxQueue );
1832:FreeRTOS/Source/queue.c **** 
1833:FreeRTOS/Source/queue.c ****         /* Update the timeout state to see if it has expired yet. */
1834:FreeRTOS/Source/queue.c ****         if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1835:FreeRTOS/Source/queue.c ****         {
1836:FreeRTOS/Source/queue.c ****             /* Timeout has not expired yet, check to see if there is data in the
1837:FreeRTOS/Source/queue.c ****             * queue now, and if not enter the Blocked state to wait for data. */
1838:FreeRTOS/Source/queue.c ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1839:FreeRTOS/Source/queue.c ****             {
1840:FreeRTOS/Source/queue.c ****                 traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1841:FreeRTOS/Source/queue.c ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1842:FreeRTOS/Source/queue.c ****                 prvUnlockQueue( pxQueue );
1843:FreeRTOS/Source/queue.c **** 
1844:FreeRTOS/Source/queue.c ****                 if( xTaskResumeAll() == pdFALSE )
1845:FreeRTOS/Source/queue.c ****                 {
1846:FreeRTOS/Source/queue.c ****                     portYIELD_WITHIN_API();
1847:FreeRTOS/Source/queue.c ****                 }
1848:FreeRTOS/Source/queue.c ****                 else
1849:FreeRTOS/Source/queue.c ****                 {
1850:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
1851:FreeRTOS/Source/queue.c ****                 }
1852:FreeRTOS/Source/queue.c ****             }
1853:FreeRTOS/Source/queue.c ****             else
1854:FreeRTOS/Source/queue.c ****             {
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 34


1855:FreeRTOS/Source/queue.c ****                 /* There is data in the queue now, so don't enter the blocked
1856:FreeRTOS/Source/queue.c ****                  * state, instead return to try and obtain the data. */
1857:FreeRTOS/Source/queue.c ****                 prvUnlockQueue( pxQueue );
1858:FreeRTOS/Source/queue.c ****                 ( void ) xTaskResumeAll();
1859:FreeRTOS/Source/queue.c ****             }
1860:FreeRTOS/Source/queue.c ****         }
1861:FreeRTOS/Source/queue.c ****         else
1862:FreeRTOS/Source/queue.c ****         {
1863:FreeRTOS/Source/queue.c ****             /* The timeout has expired.  If there is still no data in the queue
1864:FreeRTOS/Source/queue.c ****              * exit, otherwise go back and try to read the data again. */
1865:FreeRTOS/Source/queue.c ****             prvUnlockQueue( pxQueue );
1866:FreeRTOS/Source/queue.c ****             ( void ) xTaskResumeAll();
1867:FreeRTOS/Source/queue.c **** 
1868:FreeRTOS/Source/queue.c ****             if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1869:FreeRTOS/Source/queue.c ****             {
1870:FreeRTOS/Source/queue.c ****                 traceQUEUE_PEEK_FAILED( pxQueue );
1871:FreeRTOS/Source/queue.c ****                 return errQUEUE_EMPTY;
1872:FreeRTOS/Source/queue.c ****             }
1873:FreeRTOS/Source/queue.c ****             else
1874:FreeRTOS/Source/queue.c ****             {
1875:FreeRTOS/Source/queue.c ****                 mtCOVERAGE_TEST_MARKER();
1876:FreeRTOS/Source/queue.c ****             }
1877:FreeRTOS/Source/queue.c ****         }
1878:FreeRTOS/Source/queue.c ****     } /*lint -restore */
1879:FreeRTOS/Source/queue.c **** }
1880:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1881:FreeRTOS/Source/queue.c **** 
1882:FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue,
1883:FreeRTOS/Source/queue.c ****                                  void * const pvBuffer,
1884:FreeRTOS/Source/queue.c ****                                  BaseType_t * const pxHigherPriorityTaskWoken )
1885:FreeRTOS/Source/queue.c **** {
1886:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
1887:FreeRTOS/Source/queue.c ****     UBaseType_t uxSavedInterruptStatus;
1888:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
1889:FreeRTOS/Source/queue.c **** 
1890:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue );
1891:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1892:FreeRTOS/Source/queue.c **** 
1893:FreeRTOS/Source/queue.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
1894:FreeRTOS/Source/queue.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
1895:FreeRTOS/Source/queue.c ****      * above the maximum system call priority are kept permanently enabled, even
1896:FreeRTOS/Source/queue.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
1897:FreeRTOS/Source/queue.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1898:FreeRTOS/Source/queue.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1899:FreeRTOS/Source/queue.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
1900:FreeRTOS/Source/queue.c ****      * assigned a priority above the configured maximum system call priority.
1901:FreeRTOS/Source/queue.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
1902:FreeRTOS/Source/queue.c ****      * that have been assigned a priority at or (logically) below the maximum
1903:FreeRTOS/Source/queue.c ****      * system call interrupt priority.  FreeRTOS maintains a separate interrupt
1904:FreeRTOS/Source/queue.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
1905:FreeRTOS/Source/queue.c ****      * More information (albeit Cortex-M specific) is provided on the following
1906:FreeRTOS/Source/queue.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1907:FreeRTOS/Source/queue.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1908:FreeRTOS/Source/queue.c **** 
1909:FreeRTOS/Source/queue.c ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1910:FreeRTOS/Source/queue.c ****     {
1911:FreeRTOS/Source/queue.c ****         const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 35


1912:FreeRTOS/Source/queue.c **** 
1913:FreeRTOS/Source/queue.c ****         /* Cannot block in an ISR, so check there is data available. */
1914:FreeRTOS/Source/queue.c ****         if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1915:FreeRTOS/Source/queue.c ****         {
1916:FreeRTOS/Source/queue.c ****             const int8_t cRxLock = pxQueue->cRxLock;
1917:FreeRTOS/Source/queue.c **** 
1918:FreeRTOS/Source/queue.c ****             traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1919:FreeRTOS/Source/queue.c **** 
1920:FreeRTOS/Source/queue.c ****             prvCopyDataFromQueue( pxQueue, pvBuffer );
1921:FreeRTOS/Source/queue.c ****             pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1922:FreeRTOS/Source/queue.c **** 
1923:FreeRTOS/Source/queue.c ****             /* If the queue is locked the event list will not be modified.
1924:FreeRTOS/Source/queue.c ****              * Instead update the lock count so the task that unlocks the queue
1925:FreeRTOS/Source/queue.c ****              * will know that an ISR has removed data while the queue was
1926:FreeRTOS/Source/queue.c ****              * locked. */
1927:FreeRTOS/Source/queue.c ****             if( cRxLock == queueUNLOCKED )
1928:FreeRTOS/Source/queue.c ****             {
1929:FreeRTOS/Source/queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1930:FreeRTOS/Source/queue.c ****                 {
1931:FreeRTOS/Source/queue.c ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1932:FreeRTOS/Source/queue.c ****                     {
1933:FreeRTOS/Source/queue.c ****                         /* The task waiting has a higher priority than us so
1934:FreeRTOS/Source/queue.c ****                          * force a context switch. */
1935:FreeRTOS/Source/queue.c ****                         if( pxHigherPriorityTaskWoken != NULL )
1936:FreeRTOS/Source/queue.c ****                         {
1937:FreeRTOS/Source/queue.c ****                             *pxHigherPriorityTaskWoken = pdTRUE;
1938:FreeRTOS/Source/queue.c ****                         }
1939:FreeRTOS/Source/queue.c ****                         else
1940:FreeRTOS/Source/queue.c ****                         {
1941:FreeRTOS/Source/queue.c ****                             mtCOVERAGE_TEST_MARKER();
1942:FreeRTOS/Source/queue.c ****                         }
1943:FreeRTOS/Source/queue.c ****                     }
1944:FreeRTOS/Source/queue.c ****                     else
1945:FreeRTOS/Source/queue.c ****                     {
1946:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
1947:FreeRTOS/Source/queue.c ****                     }
1948:FreeRTOS/Source/queue.c ****                 }
1949:FreeRTOS/Source/queue.c ****                 else
1950:FreeRTOS/Source/queue.c ****                 {
1951:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
1952:FreeRTOS/Source/queue.c ****                 }
1953:FreeRTOS/Source/queue.c ****             }
1954:FreeRTOS/Source/queue.c ****             else
1955:FreeRTOS/Source/queue.c ****             {
1956:FreeRTOS/Source/queue.c ****                 /* Increment the lock count so the task that unlocks the queue
1957:FreeRTOS/Source/queue.c ****                  * knows that data was removed while it was locked. */
1958:FreeRTOS/Source/queue.c ****                 prvIncrementQueueRxLock( pxQueue, cRxLock );
1959:FreeRTOS/Source/queue.c ****             }
1960:FreeRTOS/Source/queue.c **** 
1961:FreeRTOS/Source/queue.c ****             xReturn = pdPASS;
1962:FreeRTOS/Source/queue.c ****         }
1963:FreeRTOS/Source/queue.c ****         else
1964:FreeRTOS/Source/queue.c ****         {
1965:FreeRTOS/Source/queue.c ****             xReturn = pdFAIL;
1966:FreeRTOS/Source/queue.c ****             traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1967:FreeRTOS/Source/queue.c ****         }
1968:FreeRTOS/Source/queue.c ****     }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 36


1969:FreeRTOS/Source/queue.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1970:FreeRTOS/Source/queue.c **** 
1971:FreeRTOS/Source/queue.c ****     return xReturn;
1972:FreeRTOS/Source/queue.c **** }
1973:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1974:FreeRTOS/Source/queue.c **** 
1975:FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,
1976:FreeRTOS/Source/queue.c ****                               void * const pvBuffer )
1977:FreeRTOS/Source/queue.c **** {
1978:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
1979:FreeRTOS/Source/queue.c ****     UBaseType_t uxSavedInterruptStatus;
1980:FreeRTOS/Source/queue.c ****     int8_t * pcOriginalReadPosition;
1981:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
1982:FreeRTOS/Source/queue.c **** 
1983:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue );
1984:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1985:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1986:FreeRTOS/Source/queue.c **** 
1987:FreeRTOS/Source/queue.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
1988:FreeRTOS/Source/queue.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
1989:FreeRTOS/Source/queue.c ****      * above the maximum system call priority are kept permanently enabled, even
1990:FreeRTOS/Source/queue.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
1991:FreeRTOS/Source/queue.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1992:FreeRTOS/Source/queue.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1993:FreeRTOS/Source/queue.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
1994:FreeRTOS/Source/queue.c ****      * assigned a priority above the configured maximum system call priority.
1995:FreeRTOS/Source/queue.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
1996:FreeRTOS/Source/queue.c ****      * that have been assigned a priority at or (logically) below the maximum
1997:FreeRTOS/Source/queue.c ****      * system call interrupt priority.  FreeRTOS maintains a separate interrupt
1998:FreeRTOS/Source/queue.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
1999:FreeRTOS/Source/queue.c ****      * More information (albeit Cortex-M specific) is provided on the following
2000:FreeRTOS/Source/queue.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
2001:FreeRTOS/Source/queue.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2002:FreeRTOS/Source/queue.c **** 
2003:FreeRTOS/Source/queue.c ****     uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2004:FreeRTOS/Source/queue.c ****     {
2005:FreeRTOS/Source/queue.c ****         /* Cannot block in an ISR, so check there is data available. */
2006:FreeRTOS/Source/queue.c ****         if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2007:FreeRTOS/Source/queue.c ****         {
2008:FreeRTOS/Source/queue.c ****             traceQUEUE_PEEK_FROM_ISR( pxQueue );
2009:FreeRTOS/Source/queue.c **** 
2010:FreeRTOS/Source/queue.c ****             /* Remember the read position so it can be reset as nothing is
2011:FreeRTOS/Source/queue.c ****              * actually being removed from the queue. */
2012:FreeRTOS/Source/queue.c ****             pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
2013:FreeRTOS/Source/queue.c ****             prvCopyDataFromQueue( pxQueue, pvBuffer );
2014:FreeRTOS/Source/queue.c ****             pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
2015:FreeRTOS/Source/queue.c **** 
2016:FreeRTOS/Source/queue.c ****             xReturn = pdPASS;
2017:FreeRTOS/Source/queue.c ****         }
2018:FreeRTOS/Source/queue.c ****         else
2019:FreeRTOS/Source/queue.c ****         {
2020:FreeRTOS/Source/queue.c ****             xReturn = pdFAIL;
2021:FreeRTOS/Source/queue.c ****             traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
2022:FreeRTOS/Source/queue.c ****         }
2023:FreeRTOS/Source/queue.c ****     }
2024:FreeRTOS/Source/queue.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2025:FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 37


2026:FreeRTOS/Source/queue.c ****     return xReturn;
2027:FreeRTOS/Source/queue.c **** }
2028:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2029:FreeRTOS/Source/queue.c **** 
2030:FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
2031:FreeRTOS/Source/queue.c **** {
2032:FreeRTOS/Source/queue.c ****     UBaseType_t uxReturn;
2033:FreeRTOS/Source/queue.c **** 
2034:FreeRTOS/Source/queue.c ****     configASSERT( xQueue );
2035:FreeRTOS/Source/queue.c **** 
2036:FreeRTOS/Source/queue.c ****     taskENTER_CRITICAL();
2037:FreeRTOS/Source/queue.c ****     {
2038:FreeRTOS/Source/queue.c ****         uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
2039:FreeRTOS/Source/queue.c ****     }
2040:FreeRTOS/Source/queue.c ****     taskEXIT_CRITICAL();
2041:FreeRTOS/Source/queue.c **** 
2042:FreeRTOS/Source/queue.c ****     return uxReturn;
2043:FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
2044:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2045:FreeRTOS/Source/queue.c **** 
2046:FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
2047:FreeRTOS/Source/queue.c **** {
2048:FreeRTOS/Source/queue.c ****     UBaseType_t uxReturn;
2049:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
2050:FreeRTOS/Source/queue.c **** 
2051:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue );
2052:FreeRTOS/Source/queue.c **** 
2053:FreeRTOS/Source/queue.c ****     taskENTER_CRITICAL();
2054:FreeRTOS/Source/queue.c ****     {
2055:FreeRTOS/Source/queue.c ****         uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
2056:FreeRTOS/Source/queue.c ****     }
2057:FreeRTOS/Source/queue.c ****     taskEXIT_CRITICAL();
2058:FreeRTOS/Source/queue.c **** 
2059:FreeRTOS/Source/queue.c ****     return uxReturn;
2060:FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
2061:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2062:FreeRTOS/Source/queue.c **** 
2063:FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
2064:FreeRTOS/Source/queue.c **** {
2065:FreeRTOS/Source/queue.c ****     UBaseType_t uxReturn;
2066:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
2067:FreeRTOS/Source/queue.c **** 
2068:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue );
2069:FreeRTOS/Source/queue.c ****     uxReturn = pxQueue->uxMessagesWaiting;
2070:FreeRTOS/Source/queue.c **** 
2071:FreeRTOS/Source/queue.c ****     return uxReturn;
2072:FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
2073:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2074:FreeRTOS/Source/queue.c **** 
2075:FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
2076:FreeRTOS/Source/queue.c **** {
2077:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
2078:FreeRTOS/Source/queue.c **** 
2079:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue );
2080:FreeRTOS/Source/queue.c ****     traceQUEUE_DELETE( pxQueue );
2081:FreeRTOS/Source/queue.c **** 
2082:FreeRTOS/Source/queue.c ****     #if ( configQUEUE_REGISTRY_SIZE > 0 )
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 38


2083:FreeRTOS/Source/queue.c ****     {
2084:FreeRTOS/Source/queue.c ****         vQueueUnregisterQueue( pxQueue );
2085:FreeRTOS/Source/queue.c ****     }
2086:FreeRTOS/Source/queue.c ****     #endif
2087:FreeRTOS/Source/queue.c **** 
2088:FreeRTOS/Source/queue.c ****     #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
2089:FreeRTOS/Source/queue.c ****     {
2090:FreeRTOS/Source/queue.c ****         /* The queue can only have been allocated dynamically - free it
2091:FreeRTOS/Source/queue.c ****          * again. */
2092:FreeRTOS/Source/queue.c ****         vPortFree( pxQueue );
2093:FreeRTOS/Source/queue.c ****     }
2094:FreeRTOS/Source/queue.c ****     #elif ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
2095:FreeRTOS/Source/queue.c ****     {
2096:FreeRTOS/Source/queue.c ****         /* The queue could have been allocated statically or dynamically, so
2097:FreeRTOS/Source/queue.c ****          * check before attempting to free the memory. */
2098:FreeRTOS/Source/queue.c ****         if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
2099:FreeRTOS/Source/queue.c ****         {
2100:FreeRTOS/Source/queue.c ****             vPortFree( pxQueue );
2101:FreeRTOS/Source/queue.c ****         }
2102:FreeRTOS/Source/queue.c ****         else
2103:FreeRTOS/Source/queue.c ****         {
2104:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
2105:FreeRTOS/Source/queue.c ****         }
2106:FreeRTOS/Source/queue.c ****     }
2107:FreeRTOS/Source/queue.c ****     #else /* if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION ==
2108:FreeRTOS/Source/queue.c ****     {
2109:FreeRTOS/Source/queue.c ****         /* The queue must have been statically allocated, so is not going to be
2110:FreeRTOS/Source/queue.c ****          * deleted.  Avoid compiler warnings about the unused parameter. */
2111:FreeRTOS/Source/queue.c ****         ( void ) pxQueue;
2112:FreeRTOS/Source/queue.c ****     }
2113:FreeRTOS/Source/queue.c ****     #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2114:FreeRTOS/Source/queue.c **** }
2115:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2116:FreeRTOS/Source/queue.c **** 
2117:FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2118:FreeRTOS/Source/queue.c **** 
2119:FreeRTOS/Source/queue.c ****     UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2120:FreeRTOS/Source/queue.c ****     {
2121:FreeRTOS/Source/queue.c ****         return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2122:FreeRTOS/Source/queue.c ****     }
2123:FreeRTOS/Source/queue.c **** 
2124:FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2125:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2126:FreeRTOS/Source/queue.c **** 
2127:FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2128:FreeRTOS/Source/queue.c **** 
2129:FreeRTOS/Source/queue.c ****     void vQueueSetQueueNumber( QueueHandle_t xQueue,
2130:FreeRTOS/Source/queue.c ****                                UBaseType_t uxQueueNumber )
2131:FreeRTOS/Source/queue.c ****     {
2132:FreeRTOS/Source/queue.c ****         ( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
2133:FreeRTOS/Source/queue.c ****     }
2134:FreeRTOS/Source/queue.c **** 
2135:FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2136:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2137:FreeRTOS/Source/queue.c **** 
2138:FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2139:FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 39


2140:FreeRTOS/Source/queue.c ****     uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2141:FreeRTOS/Source/queue.c ****     {
2142:FreeRTOS/Source/queue.c ****         return ( ( Queue_t * ) xQueue )->ucQueueType;
2143:FreeRTOS/Source/queue.c ****     }
2144:FreeRTOS/Source/queue.c **** 
2145:FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2146:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2147:FreeRTOS/Source/queue.c **** 
2148:FreeRTOS/Source/queue.c **** #if ( configUSE_MUTEXES == 1 )
2149:FreeRTOS/Source/queue.c **** 
2150:FreeRTOS/Source/queue.c ****     static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2151:FreeRTOS/Source/queue.c ****     {
  29              		.loc 1 2151 5 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 2151 5 is_stmt 0 view .LVU1
  35 0000 0346     		mov	r3, r0
2152:FreeRTOS/Source/queue.c ****         UBaseType_t uxHighestPriorityOfWaitingTasks;
  36              		.loc 1 2152 9 is_stmt 1 view .LVU2
2153:FreeRTOS/Source/queue.c **** 
2154:FreeRTOS/Source/queue.c ****         /* If a task waiting for a mutex causes the mutex holder to inherit a
2155:FreeRTOS/Source/queue.c ****          * priority, but the waiting task times out, then the holder should
2156:FreeRTOS/Source/queue.c ****          * disinherit the priority - but only down to the highest priority of any
2157:FreeRTOS/Source/queue.c ****          * other tasks that are waiting for the same mutex.  For this purpose,
2158:FreeRTOS/Source/queue.c ****          * return the priority of the highest priority task that is waiting for the
2159:FreeRTOS/Source/queue.c ****          * mutex. */
2160:FreeRTOS/Source/queue.c ****         if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
  37              		.loc 1 2160 9 view .LVU3
  38              		.loc 1 2160 13 is_stmt 0 view .LVU4
  39 0002 406A     		ldr	r0, [r0, #36]
  40              	.LVL1:
  41              		.loc 1 2160 11 view .LVU5
  42 0004 18B1     		cbz	r0, .L1
2161:FreeRTOS/Source/queue.c ****         {
2162:FreeRTOS/Source/queue.c ****             uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t 
  43              		.loc 1 2162 13 is_stmt 1 view .LVU6
  44              		.loc 1 2162 102 is_stmt 0 view .LVU7
  45 0006 1B6B     		ldr	r3, [r3, #48]
  46              	.LVL2:
  47              		.loc 1 2162 102 view .LVU8
  48 0008 1868     		ldr	r0, [r3]
  49              		.loc 1 2162 45 view .LVU9
  50 000a C0F10500 		rsb	r0, r0, #5
  51              	.LVL3:
2163:FreeRTOS/Source/queue.c ****         }
2164:FreeRTOS/Source/queue.c ****         else
2165:FreeRTOS/Source/queue.c ****         {
2166:FreeRTOS/Source/queue.c ****             uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
2167:FreeRTOS/Source/queue.c ****         }
2168:FreeRTOS/Source/queue.c **** 
2169:FreeRTOS/Source/queue.c ****         return uxHighestPriorityOfWaitingTasks;
  52              		.loc 1 2169 9 is_stmt 1 view .LVU10
  53              	.L1:
2170:FreeRTOS/Source/queue.c ****     }
  54              		.loc 1 2170 5 is_stmt 0 view .LVU11
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 40


  55 000e 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE28:
  59              		.section	.text.prvIsQueueFull,"ax",%progbits
  60              		.align	1
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	prvIsQueueFull:
  66              	.LVL4:
  67              	.LFB34:
2171:FreeRTOS/Source/queue.c **** 
2172:FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2173:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2174:FreeRTOS/Source/queue.c **** 
2175:FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue,
2176:FreeRTOS/Source/queue.c ****                                       const void * pvItemToQueue,
2177:FreeRTOS/Source/queue.c ****                                       const BaseType_t xPosition )
2178:FreeRTOS/Source/queue.c **** {
2179:FreeRTOS/Source/queue.c ****     BaseType_t xReturn = pdFALSE;
2180:FreeRTOS/Source/queue.c ****     UBaseType_t uxMessagesWaiting;
2181:FreeRTOS/Source/queue.c **** 
2182:FreeRTOS/Source/queue.c ****     /* This function is called from a critical section. */
2183:FreeRTOS/Source/queue.c **** 
2184:FreeRTOS/Source/queue.c ****     uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2185:FreeRTOS/Source/queue.c **** 
2186:FreeRTOS/Source/queue.c ****     if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2187:FreeRTOS/Source/queue.c ****     {
2188:FreeRTOS/Source/queue.c ****         #if ( configUSE_MUTEXES == 1 )
2189:FreeRTOS/Source/queue.c ****         {
2190:FreeRTOS/Source/queue.c ****             if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2191:FreeRTOS/Source/queue.c ****             {
2192:FreeRTOS/Source/queue.c ****                 /* The mutex is no longer being held. */
2193:FreeRTOS/Source/queue.c ****                 xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
2194:FreeRTOS/Source/queue.c ****                 pxQueue->u.xSemaphore.xMutexHolder = NULL;
2195:FreeRTOS/Source/queue.c ****             }
2196:FreeRTOS/Source/queue.c ****             else
2197:FreeRTOS/Source/queue.c ****             {
2198:FreeRTOS/Source/queue.c ****                 mtCOVERAGE_TEST_MARKER();
2199:FreeRTOS/Source/queue.c ****             }
2200:FreeRTOS/Source/queue.c ****         }
2201:FreeRTOS/Source/queue.c ****         #endif /* configUSE_MUTEXES */
2202:FreeRTOS/Source/queue.c ****     }
2203:FreeRTOS/Source/queue.c ****     else if( xPosition == queueSEND_TO_BACK )
2204:FreeRTOS/Source/queue.c ****     {
2205:FreeRTOS/Source/queue.c ****         ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSi
2206:FreeRTOS/Source/queue.c ****         pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                 
2207:FreeRTOS/Source/queue.c **** 
2208:FreeRTOS/Source/queue.c ****         if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                       
2209:FreeRTOS/Source/queue.c ****         {
2210:FreeRTOS/Source/queue.c ****             pxQueue->pcWriteTo = pxQueue->pcHead;
2211:FreeRTOS/Source/queue.c ****         }
2212:FreeRTOS/Source/queue.c ****         else
2213:FreeRTOS/Source/queue.c ****         {
2214:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
2215:FreeRTOS/Source/queue.c ****         }
2216:FreeRTOS/Source/queue.c ****     }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 41


2217:FreeRTOS/Source/queue.c ****     else
2218:FreeRTOS/Source/queue.c ****     {
2219:FreeRTOS/Source/queue.c ****         ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue
2220:FreeRTOS/Source/queue.c ****         pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
2221:FreeRTOS/Source/queue.c **** 
2222:FreeRTOS/Source/queue.c ****         if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified
2223:FreeRTOS/Source/queue.c ****         {
2224:FreeRTOS/Source/queue.c ****             pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
2225:FreeRTOS/Source/queue.c ****         }
2226:FreeRTOS/Source/queue.c ****         else
2227:FreeRTOS/Source/queue.c ****         {
2228:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
2229:FreeRTOS/Source/queue.c ****         }
2230:FreeRTOS/Source/queue.c **** 
2231:FreeRTOS/Source/queue.c ****         if( xPosition == queueOVERWRITE )
2232:FreeRTOS/Source/queue.c ****         {
2233:FreeRTOS/Source/queue.c ****             if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2234:FreeRTOS/Source/queue.c ****             {
2235:FreeRTOS/Source/queue.c ****                 /* An item is not being added but overwritten, so subtract
2236:FreeRTOS/Source/queue.c ****                  * one from the recorded number of items in the queue so when
2237:FreeRTOS/Source/queue.c ****                  * one is added again below the number of recorded items remains
2238:FreeRTOS/Source/queue.c ****                  * correct. */
2239:FreeRTOS/Source/queue.c ****                 --uxMessagesWaiting;
2240:FreeRTOS/Source/queue.c ****             }
2241:FreeRTOS/Source/queue.c ****             else
2242:FreeRTOS/Source/queue.c ****             {
2243:FreeRTOS/Source/queue.c ****                 mtCOVERAGE_TEST_MARKER();
2244:FreeRTOS/Source/queue.c ****             }
2245:FreeRTOS/Source/queue.c ****         }
2246:FreeRTOS/Source/queue.c ****         else
2247:FreeRTOS/Source/queue.c ****         {
2248:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
2249:FreeRTOS/Source/queue.c ****         }
2250:FreeRTOS/Source/queue.c ****     }
2251:FreeRTOS/Source/queue.c **** 
2252:FreeRTOS/Source/queue.c ****     pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2253:FreeRTOS/Source/queue.c **** 
2254:FreeRTOS/Source/queue.c ****     return xReturn;
2255:FreeRTOS/Source/queue.c **** }
2256:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2257:FreeRTOS/Source/queue.c **** 
2258:FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue,
2259:FreeRTOS/Source/queue.c ****                                   void * const pvBuffer )
2260:FreeRTOS/Source/queue.c **** {
2261:FreeRTOS/Source/queue.c ****     if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2262:FreeRTOS/Source/queue.c ****     {
2263:FreeRTOS/Source/queue.c ****         pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithm
2264:FreeRTOS/Source/queue.c **** 
2265:FreeRTOS/Source/queue.c ****         if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception
2266:FreeRTOS/Source/queue.c ****         {
2267:FreeRTOS/Source/queue.c ****             pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2268:FreeRTOS/Source/queue.c ****         }
2269:FreeRTOS/Source/queue.c ****         else
2270:FreeRTOS/Source/queue.c ****         {
2271:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
2272:FreeRTOS/Source/queue.c ****         }
2273:FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 42


2274:FreeRTOS/Source/queue.c ****         ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) p
2275:FreeRTOS/Source/queue.c ****     }
2276:FreeRTOS/Source/queue.c **** }
2277:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2278:FreeRTOS/Source/queue.c **** 
2279:FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2280:FreeRTOS/Source/queue.c **** {
2281:FreeRTOS/Source/queue.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2282:FreeRTOS/Source/queue.c **** 
2283:FreeRTOS/Source/queue.c ****     /* The lock counts contains the number of extra data items placed or
2284:FreeRTOS/Source/queue.c ****      * removed from the queue while the queue was locked.  When a queue is
2285:FreeRTOS/Source/queue.c ****      * locked items can be added or removed, but the event lists cannot be
2286:FreeRTOS/Source/queue.c ****      * updated. */
2287:FreeRTOS/Source/queue.c ****     taskENTER_CRITICAL();
2288:FreeRTOS/Source/queue.c ****     {
2289:FreeRTOS/Source/queue.c ****         int8_t cTxLock = pxQueue->cTxLock;
2290:FreeRTOS/Source/queue.c **** 
2291:FreeRTOS/Source/queue.c ****         /* See if data was added to the queue while it was locked. */
2292:FreeRTOS/Source/queue.c ****         while( cTxLock > queueLOCKED_UNMODIFIED )
2293:FreeRTOS/Source/queue.c ****         {
2294:FreeRTOS/Source/queue.c ****             /* Data was posted while the queue was locked.  Are any tasks
2295:FreeRTOS/Source/queue.c ****              * blocked waiting for data to become available? */
2296:FreeRTOS/Source/queue.c ****             #if ( configUSE_QUEUE_SETS == 1 )
2297:FreeRTOS/Source/queue.c ****             {
2298:FreeRTOS/Source/queue.c ****                 if( pxQueue->pxQueueSetContainer != NULL )
2299:FreeRTOS/Source/queue.c ****                 {
2300:FreeRTOS/Source/queue.c ****                     if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
2301:FreeRTOS/Source/queue.c ****                     {
2302:FreeRTOS/Source/queue.c ****                         /* The queue is a member of a queue set, and posting to
2303:FreeRTOS/Source/queue.c ****                          * the queue set caused a higher priority task to unblock.
2304:FreeRTOS/Source/queue.c ****                          * A context switch is required. */
2305:FreeRTOS/Source/queue.c ****                         vTaskMissedYield();
2306:FreeRTOS/Source/queue.c ****                     }
2307:FreeRTOS/Source/queue.c ****                     else
2308:FreeRTOS/Source/queue.c ****                     {
2309:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
2310:FreeRTOS/Source/queue.c ****                     }
2311:FreeRTOS/Source/queue.c ****                 }
2312:FreeRTOS/Source/queue.c ****                 else
2313:FreeRTOS/Source/queue.c ****                 {
2314:FreeRTOS/Source/queue.c ****                     /* Tasks that are removed from the event list will get
2315:FreeRTOS/Source/queue.c ****                      * added to the pending ready list as the scheduler is still
2316:FreeRTOS/Source/queue.c ****                      * suspended. */
2317:FreeRTOS/Source/queue.c ****                     if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2318:FreeRTOS/Source/queue.c ****                     {
2319:FreeRTOS/Source/queue.c ****                         if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdF
2320:FreeRTOS/Source/queue.c ****                         {
2321:FreeRTOS/Source/queue.c ****                             /* The task waiting has a higher priority so record that a
2322:FreeRTOS/Source/queue.c ****                              * context switch is required. */
2323:FreeRTOS/Source/queue.c ****                             vTaskMissedYield();
2324:FreeRTOS/Source/queue.c ****                         }
2325:FreeRTOS/Source/queue.c ****                         else
2326:FreeRTOS/Source/queue.c ****                         {
2327:FreeRTOS/Source/queue.c ****                             mtCOVERAGE_TEST_MARKER();
2328:FreeRTOS/Source/queue.c ****                         }
2329:FreeRTOS/Source/queue.c ****                     }
2330:FreeRTOS/Source/queue.c ****                     else
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 43


2331:FreeRTOS/Source/queue.c ****                     {
2332:FreeRTOS/Source/queue.c ****                         break;
2333:FreeRTOS/Source/queue.c ****                     }
2334:FreeRTOS/Source/queue.c ****                 }
2335:FreeRTOS/Source/queue.c ****             }
2336:FreeRTOS/Source/queue.c ****             #else /* configUSE_QUEUE_SETS */
2337:FreeRTOS/Source/queue.c ****             {
2338:FreeRTOS/Source/queue.c ****                 /* Tasks that are removed from the event list will get added to
2339:FreeRTOS/Source/queue.c ****                  * the pending ready list as the scheduler is still suspended. */
2340:FreeRTOS/Source/queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2341:FreeRTOS/Source/queue.c ****                 {
2342:FreeRTOS/Source/queue.c ****                     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE
2343:FreeRTOS/Source/queue.c ****                     {
2344:FreeRTOS/Source/queue.c ****                         /* The task waiting has a higher priority so record that
2345:FreeRTOS/Source/queue.c ****                          * a context switch is required. */
2346:FreeRTOS/Source/queue.c ****                         vTaskMissedYield();
2347:FreeRTOS/Source/queue.c ****                     }
2348:FreeRTOS/Source/queue.c ****                     else
2349:FreeRTOS/Source/queue.c ****                     {
2350:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
2351:FreeRTOS/Source/queue.c ****                     }
2352:FreeRTOS/Source/queue.c ****                 }
2353:FreeRTOS/Source/queue.c ****                 else
2354:FreeRTOS/Source/queue.c ****                 {
2355:FreeRTOS/Source/queue.c ****                     break;
2356:FreeRTOS/Source/queue.c ****                 }
2357:FreeRTOS/Source/queue.c ****             }
2358:FreeRTOS/Source/queue.c ****             #endif /* configUSE_QUEUE_SETS */
2359:FreeRTOS/Source/queue.c **** 
2360:FreeRTOS/Source/queue.c ****             --cTxLock;
2361:FreeRTOS/Source/queue.c ****         }
2362:FreeRTOS/Source/queue.c **** 
2363:FreeRTOS/Source/queue.c ****         pxQueue->cTxLock = queueUNLOCKED;
2364:FreeRTOS/Source/queue.c ****     }
2365:FreeRTOS/Source/queue.c ****     taskEXIT_CRITICAL();
2366:FreeRTOS/Source/queue.c **** 
2367:FreeRTOS/Source/queue.c ****     /* Do the same for the Rx lock. */
2368:FreeRTOS/Source/queue.c ****     taskENTER_CRITICAL();
2369:FreeRTOS/Source/queue.c ****     {
2370:FreeRTOS/Source/queue.c ****         int8_t cRxLock = pxQueue->cRxLock;
2371:FreeRTOS/Source/queue.c **** 
2372:FreeRTOS/Source/queue.c ****         while( cRxLock > queueLOCKED_UNMODIFIED )
2373:FreeRTOS/Source/queue.c ****         {
2374:FreeRTOS/Source/queue.c ****             if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2375:FreeRTOS/Source/queue.c ****             {
2376:FreeRTOS/Source/queue.c ****                 if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2377:FreeRTOS/Source/queue.c ****                 {
2378:FreeRTOS/Source/queue.c ****                     vTaskMissedYield();
2379:FreeRTOS/Source/queue.c ****                 }
2380:FreeRTOS/Source/queue.c ****                 else
2381:FreeRTOS/Source/queue.c ****                 {
2382:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
2383:FreeRTOS/Source/queue.c ****                 }
2384:FreeRTOS/Source/queue.c **** 
2385:FreeRTOS/Source/queue.c ****                 --cRxLock;
2386:FreeRTOS/Source/queue.c ****             }
2387:FreeRTOS/Source/queue.c ****             else
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 44


2388:FreeRTOS/Source/queue.c ****             {
2389:FreeRTOS/Source/queue.c ****                 break;
2390:FreeRTOS/Source/queue.c ****             }
2391:FreeRTOS/Source/queue.c ****         }
2392:FreeRTOS/Source/queue.c **** 
2393:FreeRTOS/Source/queue.c ****         pxQueue->cRxLock = queueUNLOCKED;
2394:FreeRTOS/Source/queue.c ****     }
2395:FreeRTOS/Source/queue.c ****     taskEXIT_CRITICAL();
2396:FreeRTOS/Source/queue.c **** }
2397:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2398:FreeRTOS/Source/queue.c **** 
2399:FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
2400:FreeRTOS/Source/queue.c **** {
2401:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
2402:FreeRTOS/Source/queue.c **** 
2403:FreeRTOS/Source/queue.c ****     taskENTER_CRITICAL();
2404:FreeRTOS/Source/queue.c ****     {
2405:FreeRTOS/Source/queue.c ****         if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2406:FreeRTOS/Source/queue.c ****         {
2407:FreeRTOS/Source/queue.c ****             xReturn = pdTRUE;
2408:FreeRTOS/Source/queue.c ****         }
2409:FreeRTOS/Source/queue.c ****         else
2410:FreeRTOS/Source/queue.c ****         {
2411:FreeRTOS/Source/queue.c ****             xReturn = pdFALSE;
2412:FreeRTOS/Source/queue.c ****         }
2413:FreeRTOS/Source/queue.c ****     }
2414:FreeRTOS/Source/queue.c ****     taskEXIT_CRITICAL();
2415:FreeRTOS/Source/queue.c **** 
2416:FreeRTOS/Source/queue.c ****     return xReturn;
2417:FreeRTOS/Source/queue.c **** }
2418:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2419:FreeRTOS/Source/queue.c **** 
2420:FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2421:FreeRTOS/Source/queue.c **** {
2422:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
2423:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
2424:FreeRTOS/Source/queue.c **** 
2425:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue );
2426:FreeRTOS/Source/queue.c **** 
2427:FreeRTOS/Source/queue.c ****     if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2428:FreeRTOS/Source/queue.c ****     {
2429:FreeRTOS/Source/queue.c ****         xReturn = pdTRUE;
2430:FreeRTOS/Source/queue.c ****     }
2431:FreeRTOS/Source/queue.c ****     else
2432:FreeRTOS/Source/queue.c ****     {
2433:FreeRTOS/Source/queue.c ****         xReturn = pdFALSE;
2434:FreeRTOS/Source/queue.c ****     }
2435:FreeRTOS/Source/queue.c **** 
2436:FreeRTOS/Source/queue.c ****     return xReturn;
2437:FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2438:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2439:FreeRTOS/Source/queue.c **** 
2440:FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t * pxQueue )
2441:FreeRTOS/Source/queue.c **** {
  68              		.loc 1 2441 1 is_stmt 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 45


  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		.loc 1 2441 1 is_stmt 0 view .LVU13
  73 0000 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
  78 0002 0446     		mov	r4, r0
2442:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
  79              		.loc 1 2442 5 is_stmt 1 view .LVU14
2443:FreeRTOS/Source/queue.c **** 
2444:FreeRTOS/Source/queue.c ****     taskENTER_CRITICAL();
  80              		.loc 1 2444 5 view .LVU15
  81 0004 FFF7FEFF 		bl	vPortEnterCritical
  82              	.LVL5:
2445:FreeRTOS/Source/queue.c ****     {
2446:FreeRTOS/Source/queue.c ****         if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  83              		.loc 1 2446 9 view .LVU16
  84              		.loc 1 2446 20 is_stmt 0 view .LVU17
  85 0008 A26B     		ldr	r2, [r4, #56]
  86              		.loc 1 2446 50 view .LVU18
  87 000a E36B     		ldr	r3, [r4, #60]
  88              		.loc 1 2446 11 view .LVU19
  89 000c 9A42     		cmp	r2, r3
  90 000e 04D0     		beq	.L7
2447:FreeRTOS/Source/queue.c ****         {
2448:FreeRTOS/Source/queue.c ****             xReturn = pdTRUE;
2449:FreeRTOS/Source/queue.c ****         }
2450:FreeRTOS/Source/queue.c ****         else
2451:FreeRTOS/Source/queue.c ****         {
2452:FreeRTOS/Source/queue.c ****             xReturn = pdFALSE;
  91              		.loc 1 2452 21 view .LVU20
  92 0010 0024     		movs	r4, #0
  93              	.LVL6:
  94              	.L4:
2453:FreeRTOS/Source/queue.c ****         }
2454:FreeRTOS/Source/queue.c ****     }
2455:FreeRTOS/Source/queue.c ****     taskEXIT_CRITICAL();
  95              		.loc 1 2455 5 is_stmt 1 view .LVU21
  96 0012 FFF7FEFF 		bl	vPortExitCritical
  97              	.LVL7:
2456:FreeRTOS/Source/queue.c **** 
2457:FreeRTOS/Source/queue.c ****     return xReturn;
  98              		.loc 1 2457 5 view .LVU22
2458:FreeRTOS/Source/queue.c **** }
  99              		.loc 1 2458 1 is_stmt 0 view .LVU23
 100 0016 2046     		mov	r0, r4
 101 0018 10BD     		pop	{r4, pc}
 102              	.LVL8:
 103              	.L7:
2448:FreeRTOS/Source/queue.c ****         }
 104              		.loc 1 2448 21 view .LVU24
 105 001a 0124     		movs	r4, #1
 106              	.LVL9:
2448:FreeRTOS/Source/queue.c ****         }
 107              		.loc 1 2448 21 view .LVU25
 108 001c F9E7     		b	.L4
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 46


 109              		.cfi_endproc
 110              	.LFE34:
 112              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	prvIsQueueEmpty:
 119              	.LVL10:
 120              	.LFB32:
2400:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
 121              		.loc 1 2400 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
2400:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
 125              		.loc 1 2400 1 is_stmt 0 view .LVU27
 126 0000 10B5     		push	{r4, lr}
 127              	.LCFI1:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
 131 0002 0446     		mov	r4, r0
2401:FreeRTOS/Source/queue.c **** 
 132              		.loc 1 2401 5 is_stmt 1 view .LVU28
2403:FreeRTOS/Source/queue.c ****     {
 133              		.loc 1 2403 5 view .LVU29
 134 0004 FFF7FEFF 		bl	vPortEnterCritical
 135              	.LVL11:
2405:FreeRTOS/Source/queue.c ****         {
 136              		.loc 1 2405 9 view .LVU30
2405:FreeRTOS/Source/queue.c ****         {
 137              		.loc 1 2405 20 is_stmt 0 view .LVU31
 138 0008 A36B     		ldr	r3, [r4, #56]
2405:FreeRTOS/Source/queue.c ****         {
 139              		.loc 1 2405 11 view .LVU32
 140 000a 23B9     		cbnz	r3, .L10
2407:FreeRTOS/Source/queue.c ****         }
 141              		.loc 1 2407 21 view .LVU33
 142 000c 0124     		movs	r4, #1
 143              	.LVL12:
 144              	.L9:
2414:FreeRTOS/Source/queue.c **** 
 145              		.loc 1 2414 5 is_stmt 1 view .LVU34
 146 000e FFF7FEFF 		bl	vPortExitCritical
 147              	.LVL13:
2416:FreeRTOS/Source/queue.c **** }
 148              		.loc 1 2416 5 view .LVU35
2417:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 149              		.loc 1 2417 1 is_stmt 0 view .LVU36
 150 0012 2046     		mov	r0, r4
 151 0014 10BD     		pop	{r4, pc}
 152              	.LVL14:
 153              	.L10:
2411:FreeRTOS/Source/queue.c ****         }
 154              		.loc 1 2411 21 view .LVU37
 155 0016 0024     		movs	r4, #0
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 47


 156              	.LVL15:
2411:FreeRTOS/Source/queue.c ****         }
 157              		.loc 1 2411 21 view .LVU38
 158 0018 F9E7     		b	.L9
 159              		.cfi_endproc
 160              	.LFE32:
 162              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	prvCopyDataToQueue:
 169              	.LVL16:
 170              	.LFB29:
2178:FreeRTOS/Source/queue.c ****     BaseType_t xReturn = pdFALSE;
 171              		.loc 1 2178 1 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
2178:FreeRTOS/Source/queue.c ****     BaseType_t xReturn = pdFALSE;
 175              		.loc 1 2178 1 is_stmt 0 view .LVU40
 176 0000 70B5     		push	{r4, r5, r6, lr}
 177              	.LCFI2:
 178              		.cfi_def_cfa_offset 16
 179              		.cfi_offset 4, -16
 180              		.cfi_offset 5, -12
 181              		.cfi_offset 6, -8
 182              		.cfi_offset 14, -4
 183 0002 0446     		mov	r4, r0
 184 0004 1546     		mov	r5, r2
2179:FreeRTOS/Source/queue.c ****     UBaseType_t uxMessagesWaiting;
 185              		.loc 1 2179 5 is_stmt 1 view .LVU41
 186              	.LVL17:
2180:FreeRTOS/Source/queue.c **** 
 187              		.loc 1 2180 5 view .LVU42
2184:FreeRTOS/Source/queue.c **** 
 188              		.loc 1 2184 5 view .LVU43
2184:FreeRTOS/Source/queue.c **** 
 189              		.loc 1 2184 23 is_stmt 0 view .LVU44
 190 0006 866B     		ldr	r6, [r0, #56]
 191              	.LVL18:
2186:FreeRTOS/Source/queue.c ****     {
 192              		.loc 1 2186 5 is_stmt 1 view .LVU45
2186:FreeRTOS/Source/queue.c ****     {
 193              		.loc 1 2186 16 is_stmt 0 view .LVU46
 194 0008 026C     		ldr	r2, [r0, #64]
 195              	.LVL19:
2186:FreeRTOS/Source/queue.c ****     {
 196              		.loc 1 2186 7 view .LVU47
 197 000a 5AB9     		cbnz	r2, .L13
2190:FreeRTOS/Source/queue.c ****             {
 198              		.loc 1 2190 13 is_stmt 1 view .LVU48
2190:FreeRTOS/Source/queue.c ****             {
 199              		.loc 1 2190 24 is_stmt 0 view .LVU49
 200 000c 0368     		ldr	r3, [r0]
2190:FreeRTOS/Source/queue.c ****             {
 201              		.loc 1 2190 15 view .LVU50
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 48


 202 000e 1BB1     		cbz	r3, .L22
2179:FreeRTOS/Source/queue.c ****     UBaseType_t uxMessagesWaiting;
 203              		.loc 1 2179 16 view .LVU51
 204 0010 0020     		movs	r0, #0
 205              	.LVL20:
 206              	.L14:
2248:FreeRTOS/Source/queue.c ****         }
 207              		.loc 1 2248 37 is_stmt 1 view .LVU52
2252:FreeRTOS/Source/queue.c **** 
 208              		.loc 1 2252 5 view .LVU53
2252:FreeRTOS/Source/queue.c **** 
 209              		.loc 1 2252 52 is_stmt 0 view .LVU54
 210 0012 0136     		adds	r6, r6, #1
 211              	.LVL21:
2252:FreeRTOS/Source/queue.c **** 
 212              		.loc 1 2252 32 view .LVU55
 213 0014 A663     		str	r6, [r4, #56]
2254:FreeRTOS/Source/queue.c **** }
 214              		.loc 1 2254 5 is_stmt 1 view .LVU56
2255:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 215              		.loc 1 2255 1 is_stmt 0 view .LVU57
 216 0016 70BD     		pop	{r4, r5, r6, pc}
 217              	.LVL22:
 218              	.L22:
2193:FreeRTOS/Source/queue.c ****                 pxQueue->u.xSemaphore.xMutexHolder = NULL;
 219              		.loc 1 2193 17 is_stmt 1 view .LVU58
2193:FreeRTOS/Source/queue.c ****                 pxQueue->u.xSemaphore.xMutexHolder = NULL;
 220              		.loc 1 2193 27 is_stmt 0 view .LVU59
 221 0018 8068     		ldr	r0, [r0, #8]
 222              	.LVL23:
2193:FreeRTOS/Source/queue.c ****                 pxQueue->u.xSemaphore.xMutexHolder = NULL;
 223              		.loc 1 2193 27 view .LVU60
 224 001a FFF7FEFF 		bl	xTaskPriorityDisinherit
 225              	.LVL24:
2194:FreeRTOS/Source/queue.c ****             }
 226              		.loc 1 2194 17 is_stmt 1 view .LVU61
2194:FreeRTOS/Source/queue.c ****             }
 227              		.loc 1 2194 52 is_stmt 0 view .LVU62
 228 001e 0023     		movs	r3, #0
 229 0020 A360     		str	r3, [r4, #8]
 230 0022 F6E7     		b	.L14
 231              	.LVL25:
 232              	.L13:
2203:FreeRTOS/Source/queue.c ****     {
 233              		.loc 1 2203 10 is_stmt 1 view .LVU63
2203:FreeRTOS/Source/queue.c ****     {
 234              		.loc 1 2203 12 is_stmt 0 view .LVU64
 235 0024 6DB9     		cbnz	r5, .L15
2205:FreeRTOS/Source/queue.c ****         pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                 
 236              		.loc 1 2205 9 is_stmt 1 view .LVU65
2205:FreeRTOS/Source/queue.c ****         pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                 
 237              		.loc 1 2205 18 is_stmt 0 view .LVU66
 238 0026 4068     		ldr	r0, [r0, #4]
 239              	.LVL26:
2205:FreeRTOS/Source/queue.c ****         pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                 
 240              		.loc 1 2205 18 view .LVU67
 241 0028 FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 49


 242              	.LVL27:
2206:FreeRTOS/Source/queue.c **** 
 243              		.loc 1 2206 9 is_stmt 1 view .LVU68
2206:FreeRTOS/Source/queue.c **** 
 244              		.loc 1 2206 16 is_stmt 0 view .LVU69
 245 002c 6368     		ldr	r3, [r4, #4]
2206:FreeRTOS/Source/queue.c **** 
 246              		.loc 1 2206 38 view .LVU70
 247 002e 226C     		ldr	r2, [r4, #64]
2206:FreeRTOS/Source/queue.c **** 
 248              		.loc 1 2206 28 view .LVU71
 249 0030 1344     		add	r3, r3, r2
 250 0032 6360     		str	r3, [r4, #4]
2208:FreeRTOS/Source/queue.c ****         {
 251              		.loc 1 2208 9 is_stmt 1 view .LVU72
2208:FreeRTOS/Source/queue.c ****         {
 252              		.loc 1 2208 52 is_stmt 0 view .LVU73
 253 0034 A268     		ldr	r2, [r4, #8]
2208:FreeRTOS/Source/queue.c ****         {
 254              		.loc 1 2208 11 view .LVU74
 255 0036 9342     		cmp	r3, r2
 256 0038 19D3     		bcc	.L18
2210:FreeRTOS/Source/queue.c ****         }
 257              		.loc 1 2210 13 is_stmt 1 view .LVU75
2210:FreeRTOS/Source/queue.c ****         }
 258              		.loc 1 2210 41 is_stmt 0 view .LVU76
 259 003a 2368     		ldr	r3, [r4]
2210:FreeRTOS/Source/queue.c ****         }
 260              		.loc 1 2210 32 view .LVU77
 261 003c 6360     		str	r3, [r4, #4]
2179:FreeRTOS/Source/queue.c ****     UBaseType_t uxMessagesWaiting;
 262              		.loc 1 2179 16 view .LVU78
 263 003e 2846     		mov	r0, r5
 264 0040 E7E7     		b	.L14
 265              	.LVL28:
 266              	.L15:
2219:FreeRTOS/Source/queue.c ****         pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 267              		.loc 1 2219 9 is_stmt 1 view .LVU79
2219:FreeRTOS/Source/queue.c ****         pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 268              		.loc 1 2219 18 is_stmt 0 view .LVU80
 269 0042 C068     		ldr	r0, [r0, #12]
 270              	.LVL29:
2219:FreeRTOS/Source/queue.c ****         pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 271              		.loc 1 2219 18 view .LVU81
 272 0044 FFF7FEFF 		bl	memcpy
 273              	.LVL30:
2220:FreeRTOS/Source/queue.c **** 
 274              		.loc 1 2220 9 is_stmt 1 view .LVU82
2220:FreeRTOS/Source/queue.c **** 
 275              		.loc 1 2220 26 is_stmt 0 view .LVU83
 276 0048 E368     		ldr	r3, [r4, #12]
2220:FreeRTOS/Source/queue.c **** 
 277              		.loc 1 2220 48 view .LVU84
 278 004a 226C     		ldr	r2, [r4, #64]
2220:FreeRTOS/Source/queue.c **** 
 279              		.loc 1 2220 38 view .LVU85
 280 004c 5142     		rsbs	r1, r2, #0
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 50


 281 004e 9B1A     		subs	r3, r3, r2
 282 0050 E360     		str	r3, [r4, #12]
2222:FreeRTOS/Source/queue.c ****         {
 283              		.loc 1 2222 9 is_stmt 1 view .LVU86
2222:FreeRTOS/Source/queue.c ****         {
 284              		.loc 1 2222 51 is_stmt 0 view .LVU87
 285 0052 2268     		ldr	r2, [r4]
2222:FreeRTOS/Source/queue.c ****         {
 286              		.loc 1 2222 11 view .LVU88
 287 0054 9342     		cmp	r3, r2
 288 0056 02D2     		bcs	.L16
2224:FreeRTOS/Source/queue.c ****         }
 289              		.loc 1 2224 13 is_stmt 1 view .LVU89
2224:FreeRTOS/Source/queue.c ****         }
 290              		.loc 1 2224 63 is_stmt 0 view .LVU90
 291 0058 A368     		ldr	r3, [r4, #8]
2224:FreeRTOS/Source/queue.c ****         }
 292              		.loc 1 2224 71 view .LVU91
 293 005a 0B44     		add	r3, r3, r1
2224:FreeRTOS/Source/queue.c ****         }
 294              		.loc 1 2224 42 view .LVU92
 295 005c E360     		str	r3, [r4, #12]
 296              	.L16:
2228:FreeRTOS/Source/queue.c ****         }
 297              		.loc 1 2228 37 is_stmt 1 view .LVU93
2231:FreeRTOS/Source/queue.c ****         {
 298              		.loc 1 2231 9 view .LVU94
2231:FreeRTOS/Source/queue.c ****         {
 299              		.loc 1 2231 11 is_stmt 0 view .LVU95
 300 005e 022D     		cmp	r5, #2
 301 0060 01D0     		beq	.L23
2179:FreeRTOS/Source/queue.c ****     UBaseType_t uxMessagesWaiting;
 302              		.loc 1 2179 16 view .LVU96
 303 0062 0020     		movs	r0, #0
 304 0064 D5E7     		b	.L14
 305              	.L23:
2233:FreeRTOS/Source/queue.c ****             {
 306              		.loc 1 2233 13 is_stmt 1 view .LVU97
2233:FreeRTOS/Source/queue.c ****             {
 307              		.loc 1 2233 15 is_stmt 0 view .LVU98
 308 0066 26B1     		cbz	r6, .L20
2239:FreeRTOS/Source/queue.c ****             }
 309              		.loc 1 2239 17 is_stmt 1 view .LVU99
 310 0068 013E     		subs	r6, r6, #1
 311              	.LVL31:
2179:FreeRTOS/Source/queue.c ****     UBaseType_t uxMessagesWaiting;
 312              		.loc 1 2179 16 is_stmt 0 view .LVU100
 313 006a 0020     		movs	r0, #0
 314 006c D1E7     		b	.L14
 315              	.L18:
2179:FreeRTOS/Source/queue.c ****     UBaseType_t uxMessagesWaiting;
 316              		.loc 1 2179 16 view .LVU101
 317 006e 2846     		mov	r0, r5
 318 0070 CFE7     		b	.L14
 319              	.L20:
2179:FreeRTOS/Source/queue.c ****     UBaseType_t uxMessagesWaiting;
 320              		.loc 1 2179 16 view .LVU102
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 51


 321 0072 0020     		movs	r0, #0
 322 0074 CDE7     		b	.L14
 323              		.cfi_endproc
 324              	.LFE29:
 326              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 327              		.align	1
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 332              	prvCopyDataFromQueue:
 333              	.LVL32:
 334              	.LFB30:
2260:FreeRTOS/Source/queue.c ****     if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 335              		.loc 1 2260 1 is_stmt 1 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
2260:FreeRTOS/Source/queue.c ****     if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 339              		.loc 1 2260 1 is_stmt 0 view .LVU104
 340 0000 0346     		mov	r3, r0
2261:FreeRTOS/Source/queue.c ****     {
 341              		.loc 1 2261 5 is_stmt 1 view .LVU105
2261:FreeRTOS/Source/queue.c ****     {
 342              		.loc 1 2261 16 is_stmt 0 view .LVU106
 343 0002 026C     		ldr	r2, [r0, #64]
2261:FreeRTOS/Source/queue.c ****     {
 344              		.loc 1 2261 7 view .LVU107
 345 0004 6AB1     		cbz	r2, .L28
2260:FreeRTOS/Source/queue.c ****     if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 346              		.loc 1 2260 1 view .LVU108
 347 0006 10B5     		push	{r4, lr}
 348              	.LCFI3:
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 4, -8
 351              		.cfi_offset 14, -4
 352 0008 0846     		mov	r0, r1
 353              	.LVL33:
2263:FreeRTOS/Source/queue.c **** 
 354              		.loc 1 2263 9 is_stmt 1 view .LVU109
2263:FreeRTOS/Source/queue.c **** 
 355              		.loc 1 2263 26 is_stmt 0 view .LVU110
 356 000a D968     		ldr	r1, [r3, #12]
 357              	.LVL34:
2263:FreeRTOS/Source/queue.c **** 
 358              		.loc 1 2263 38 view .LVU111
 359 000c 1144     		add	r1, r1, r2
 360 000e D960     		str	r1, [r3, #12]
2265:FreeRTOS/Source/queue.c ****         {
 361              		.loc 1 2265 9 is_stmt 1 view .LVU112
2265:FreeRTOS/Source/queue.c ****         {
 362              		.loc 1 2265 11 is_stmt 0 view .LVU113
 363 0010 9C68     		ldr	r4, [r3, #8]
 364 0012 A142     		cmp	r1, r4
 365 0014 01D3     		bcc	.L26
2267:FreeRTOS/Source/queue.c ****         }
 366              		.loc 1 2267 13 is_stmt 1 view .LVU114
2267:FreeRTOS/Source/queue.c ****         }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 52


 367              		.loc 1 2267 51 is_stmt 0 view .LVU115
 368 0016 1968     		ldr	r1, [r3]
2267:FreeRTOS/Source/queue.c ****         }
 369              		.loc 1 2267 42 view .LVU116
 370 0018 D960     		str	r1, [r3, #12]
 371              	.L26:
2271:FreeRTOS/Source/queue.c ****         }
 372              		.loc 1 2271 37 is_stmt 1 view .LVU117
2274:FreeRTOS/Source/queue.c ****     }
 373              		.loc 1 2274 9 view .LVU118
2274:FreeRTOS/Source/queue.c ****     }
 374              		.loc 1 2274 18 is_stmt 0 view .LVU119
 375 001a D968     		ldr	r1, [r3, #12]
 376 001c FFF7FEFF 		bl	memcpy
 377              	.LVL35:
2276:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 378              		.loc 1 2276 1 view .LVU120
 379 0020 10BD     		pop	{r4, pc}
 380              	.LVL36:
 381              	.L28:
 382              	.LCFI4:
 383              		.cfi_def_cfa_offset 0
 384              		.cfi_restore 4
 385              		.cfi_restore 14
2276:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 386              		.loc 1 2276 1 view .LVU121
 387 0022 7047     		bx	lr
 388              		.cfi_endproc
 389              	.LFE30:
 391              		.section	.text.prvUnlockQueue,"ax",%progbits
 392              		.align	1
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 397              	prvUnlockQueue:
 398              	.LVL37:
 399              	.LFB31:
2280:FreeRTOS/Source/queue.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 400              		.loc 1 2280 1 is_stmt 1 view -0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
2280:FreeRTOS/Source/queue.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 404              		.loc 1 2280 1 is_stmt 0 view .LVU123
 405 0000 38B5     		push	{r3, r4, r5, lr}
 406              	.LCFI5:
 407              		.cfi_def_cfa_offset 16
 408              		.cfi_offset 3, -16
 409              		.cfi_offset 4, -12
 410              		.cfi_offset 5, -8
 411              		.cfi_offset 14, -4
 412 0002 0546     		mov	r5, r0
2287:FreeRTOS/Source/queue.c ****     {
 413              		.loc 1 2287 5 is_stmt 1 view .LVU124
 414 0004 FFF7FEFF 		bl	vPortEnterCritical
 415              	.LVL38:
 416              	.LBB114:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 53


2289:FreeRTOS/Source/queue.c **** 
 417              		.loc 1 2289 9 view .LVU125
2289:FreeRTOS/Source/queue.c **** 
 418              		.loc 1 2289 16 is_stmt 0 view .LVU126
 419 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 420 000c 64B2     		sxtb	r4, r4
 421              	.LVL39:
2292:FreeRTOS/Source/queue.c ****         {
 422              		.loc 1 2292 9 is_stmt 1 view .LVU127
2292:FreeRTOS/Source/queue.c ****         {
 423              		.loc 1 2292 14 is_stmt 0 view .LVU128
 424 000e 01E0     		b	.L32
 425              	.L34:
2350:FreeRTOS/Source/queue.c ****                     }
 426              		.loc 1 2350 49 is_stmt 1 view .LVU129
2360:FreeRTOS/Source/queue.c ****         }
 427              		.loc 1 2360 13 view .LVU130
 428 0010 013C     		subs	r4, r4, #1
 429              	.LVL40:
2360:FreeRTOS/Source/queue.c ****         }
 430              		.loc 1 2360 13 is_stmt 0 view .LVU131
 431 0012 64B2     		sxtb	r4, r4
 432              	.LVL41:
 433              	.L32:
2292:FreeRTOS/Source/queue.c ****         {
 434              		.loc 1 2292 24 is_stmt 1 view .LVU132
 435 0014 002C     		cmp	r4, #0
 436 0016 0ADD     		ble	.L33
2340:FreeRTOS/Source/queue.c ****                 {
 437              		.loc 1 2340 17 view .LVU133
2340:FreeRTOS/Source/queue.c ****                 {
 438              		.loc 1 2340 21 is_stmt 0 view .LVU134
 439 0018 6B6A     		ldr	r3, [r5, #36]
2340:FreeRTOS/Source/queue.c ****                 {
 440              		.loc 1 2340 19 view .LVU135
 441 001a 43B1     		cbz	r3, .L33
2342:FreeRTOS/Source/queue.c ****                     {
 442              		.loc 1 2342 21 is_stmt 1 view .LVU136
2342:FreeRTOS/Source/queue.c ****                     {
 443              		.loc 1 2342 25 is_stmt 0 view .LVU137
 444 001c 05F12400 		add	r0, r5, #36
 445 0020 FFF7FEFF 		bl	xTaskRemoveFromEventList
 446              	.LVL42:
2342:FreeRTOS/Source/queue.c ****                     {
 447              		.loc 1 2342 23 view .LVU138
 448 0024 0028     		cmp	r0, #0
 449 0026 F3D0     		beq	.L34
2346:FreeRTOS/Source/queue.c ****                     }
 450              		.loc 1 2346 25 is_stmt 1 view .LVU139
 451 0028 FFF7FEFF 		bl	vTaskMissedYield
 452              	.LVL43:
 453 002c F0E7     		b	.L34
 454              	.L33:
2363:FreeRTOS/Source/queue.c ****     }
 455              		.loc 1 2363 9 view .LVU140
2363:FreeRTOS/Source/queue.c ****     }
 456              		.loc 1 2363 26 is_stmt 0 view .LVU141
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 54


 457 002e FF23     		movs	r3, #255
 458 0030 85F84530 		strb	r3, [r5, #69]
 459              	.LBE114:
2365:FreeRTOS/Source/queue.c **** 
 460              		.loc 1 2365 5 is_stmt 1 view .LVU142
 461 0034 FFF7FEFF 		bl	vPortExitCritical
 462              	.LVL44:
2368:FreeRTOS/Source/queue.c ****     {
 463              		.loc 1 2368 5 view .LVU143
 464 0038 FFF7FEFF 		bl	vPortEnterCritical
 465              	.LVL45:
 466              	.LBB115:
2370:FreeRTOS/Source/queue.c **** 
 467              		.loc 1 2370 9 view .LVU144
2370:FreeRTOS/Source/queue.c **** 
 468              		.loc 1 2370 16 is_stmt 0 view .LVU145
 469 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 470              	.LVL46:
2370:FreeRTOS/Source/queue.c **** 
 471              		.loc 1 2370 16 view .LVU146
 472 0040 64B2     		sxtb	r4, r4
 473              	.LVL47:
2372:FreeRTOS/Source/queue.c ****         {
 474              		.loc 1 2372 9 is_stmt 1 view .LVU147
2372:FreeRTOS/Source/queue.c ****         {
 475              		.loc 1 2372 14 is_stmt 0 view .LVU148
 476 0042 01E0     		b	.L36
 477              	.L38:
2382:FreeRTOS/Source/queue.c ****                 }
 478              		.loc 1 2382 45 is_stmt 1 view .LVU149
2385:FreeRTOS/Source/queue.c ****             }
 479              		.loc 1 2385 17 view .LVU150
 480 0044 013C     		subs	r4, r4, #1
 481              	.LVL48:
2385:FreeRTOS/Source/queue.c ****             }
 482              		.loc 1 2385 17 is_stmt 0 view .LVU151
 483 0046 64B2     		sxtb	r4, r4
 484              	.LVL49:
 485              	.L36:
2372:FreeRTOS/Source/queue.c ****         {
 486              		.loc 1 2372 24 is_stmt 1 view .LVU152
 487 0048 002C     		cmp	r4, #0
 488 004a 0ADD     		ble	.L37
2374:FreeRTOS/Source/queue.c ****             {
 489              		.loc 1 2374 13 view .LVU153
2374:FreeRTOS/Source/queue.c ****             {
 490              		.loc 1 2374 17 is_stmt 0 view .LVU154
 491 004c 2B69     		ldr	r3, [r5, #16]
2374:FreeRTOS/Source/queue.c ****             {
 492              		.loc 1 2374 15 view .LVU155
 493 004e 43B1     		cbz	r3, .L37
2376:FreeRTOS/Source/queue.c ****                 {
 494              		.loc 1 2376 17 is_stmt 1 view .LVU156
2376:FreeRTOS/Source/queue.c ****                 {
 495              		.loc 1 2376 21 is_stmt 0 view .LVU157
 496 0050 05F11000 		add	r0, r5, #16
 497 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 55


 498              	.LVL50:
2376:FreeRTOS/Source/queue.c ****                 {
 499              		.loc 1 2376 19 view .LVU158
 500 0058 0028     		cmp	r0, #0
 501 005a F3D0     		beq	.L38
2378:FreeRTOS/Source/queue.c ****                 }
 502              		.loc 1 2378 21 is_stmt 1 view .LVU159
 503 005c FFF7FEFF 		bl	vTaskMissedYield
 504              	.LVL51:
 505 0060 F0E7     		b	.L38
 506              	.L37:
2393:FreeRTOS/Source/queue.c ****     }
 507              		.loc 1 2393 9 view .LVU160
2393:FreeRTOS/Source/queue.c ****     }
 508              		.loc 1 2393 26 is_stmt 0 view .LVU161
 509 0062 FF23     		movs	r3, #255
 510 0064 85F84430 		strb	r3, [r5, #68]
 511              	.LBE115:
2395:FreeRTOS/Source/queue.c **** }
 512              		.loc 1 2395 5 is_stmt 1 view .LVU162
 513 0068 FFF7FEFF 		bl	vPortExitCritical
 514              	.LVL52:
2396:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 515              		.loc 1 2396 1 is_stmt 0 view .LVU163
 516 006c 38BD     		pop	{r3, r4, r5, pc}
2396:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 517              		.loc 1 2396 1 view .LVU164
 518              		.cfi_endproc
 519              	.LFE31:
 521              		.section	.text.xQueueGenericReset,"ax",%progbits
 522              		.align	1
 523              		.global	xQueueGenericReset
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 528              	xQueueGenericReset:
 529              	.LVL53:
 530              	.LFB5:
 298:FreeRTOS/Source/queue.c ****     BaseType_t xReturn = pdPASS;
 531              		.loc 1 298 1 is_stmt 1 view -0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 298:FreeRTOS/Source/queue.c ****     BaseType_t xReturn = pdPASS;
 535              		.loc 1 298 1 is_stmt 0 view .LVU166
 536 0000 38B5     		push	{r3, r4, r5, lr}
 537              	.LCFI6:
 538              		.cfi_def_cfa_offset 16
 539              		.cfi_offset 3, -16
 540              		.cfi_offset 4, -12
 541              		.cfi_offset 5, -8
 542              		.cfi_offset 14, -4
 299:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 543              		.loc 1 299 5 is_stmt 1 view .LVU167
 544              	.LVL54:
 300:FreeRTOS/Source/queue.c **** 
 545              		.loc 1 300 5 view .LVU168
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 56


 302:FreeRTOS/Source/queue.c **** 
 546              		.loc 1 302 5 view .LVU169
 547 0002 90B1     		cbz	r0, .L52
 548 0004 0D46     		mov	r5, r1
 549 0006 0446     		mov	r4, r0
 302:FreeRTOS/Source/queue.c **** 
 550              		.loc 1 302 28 discriminator 1 view .LVU170
 304:FreeRTOS/Source/queue.c ****         ( pxQueue->uxLength >= 1U ) &&
 551              		.loc 1 304 5 discriminator 1 view .LVU171
 305:FreeRTOS/Source/queue.c ****         /* Check for multiplication overflow. */
 552              		.loc 1 305 18 is_stmt 0 discriminator 1 view .LVU172
 553 0008 C36B     		ldr	r3, [r0, #60]
 304:FreeRTOS/Source/queue.c ****         ( pxQueue->uxLength >= 1U ) &&
 554              		.loc 1 304 29 discriminator 1 view .LVU173
 555 000a 2BB1     		cbz	r3, .L44
 307:FreeRTOS/Source/queue.c ****     {
 556              		.loc 1 307 54 view .LVU174
 557 000c 026C     		ldr	r2, [r0, #64]
 307:FreeRTOS/Source/queue.c ****     {
 558              		.loc 1 307 44 view .LVU175
 559 000e 0021     		movs	r1, #0
 560              	.LVL55:
 307:FreeRTOS/Source/queue.c ****     {
 561              		.loc 1 307 44 view .LVU176
 562 0010 A2FB0323 		umull	r2, r3, r2, r3
 563 0014 93B9     		cbnz	r3, .L53
 564              	.L45:
 305:FreeRTOS/Source/queue.c ****         /* Check for multiplication overflow. */
 565              		.loc 1 305 37 view .LVU177
 566 0016 99B1     		cbz	r1, .L54
 567              	.L44:
 568              	.LVL56:
 355:FreeRTOS/Source/queue.c **** 
 569              		.loc 1 355 5 is_stmt 1 view .LVU178
 570              	.LBB116:
 571              	.LBI116:
 572              		.file 2 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.5.1
   3:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * SPDX-License-Identifier: MIT
   6:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   7:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   9:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
  10:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  13:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  14:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  15:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  16:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  17:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 57


  21:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  24:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  25:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  26:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  27:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  28:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  30:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  31:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define PORTMACRO_H
  32:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  33:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef __cplusplus
  34:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         extern "C" {
  35:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  36:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  37:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  38:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  39:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  40:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  41:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  42:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  43:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  44:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  45:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  46:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  47:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  48:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCHAR          char
  49:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFLOAT         float
  50:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDOUBLE        double
  51:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portLONG          long
  52:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSHORT         short
  53:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  54:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBASE_TYPE     long
  55:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  56:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  57:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     typedef long             BaseType_t;
  58:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     typedef unsigned long    UBaseType_t;
  59:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  60:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  61:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint16_t     TickType_t;
  62:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  63:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #else
  64:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint32_t     TickType_t;
  65:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  66:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  67:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  68:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  69:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  70:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  71:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  72:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  73:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  74:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  75:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  76:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  77:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 58


  78:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  79:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  80:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  81:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD()                                 \
  82:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  83:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  84:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  85:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  86:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  87:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  88:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  89:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
  90:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
  91:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  92:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  93:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  94:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    do { if( xSwitchRequired != pdFALSE ) portY
  95:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  96:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  97:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  98:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  99:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortEnterCritical( void );
 100:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortExitCritical( void );
 101:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 102:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 103:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 104:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 105:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 106:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 107:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 109:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 110:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 111:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 112:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 113:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 114:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 115:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 116:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 117:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 118:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 119:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 120:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 121:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 122:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 123:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 124:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 125:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 126:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 127:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 128:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 130:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 131:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 132:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 133:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         {
 134:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             uint8_t ucReturn;
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 59


 135:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 136:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 137:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             return ucReturn;
 139:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 140:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 141:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 142:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 143:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 144:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #endif
 145:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 146:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 147:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 148:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 149:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 152:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 153:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 154:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 155:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 156:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 158:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef configASSERT
 159:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         void vPortValidateInterruptPriority( void );
 160:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 161:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 162:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNOP()
 165:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 166:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portINLINE              __inline
 167:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 168:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portFORCE_INLINE
 169:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 170:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 171:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 172:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 173:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 174:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulCurrentInterrupt;
 175:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         BaseType_t xReturn;
 176:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 178:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 179:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 180:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 181:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         {
 182:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdFALSE;
 183:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 184:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         else
 185:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         {
 186:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdTRUE;
 187:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 188:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         return xReturn;
 190:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 191:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 60


 192:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 193:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 573              		.loc 2 194 34 view .LVU179
 574              	.LBB117:
 195:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulNewBASEPRI;
 575              		.loc 2 196 9 view .LVU180
 197:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 576              		.loc 2 198 9 view .LVU181
 577              		.syntax unified
 578              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 579 0018 4FF05003 			mov r3, #80												
 580 001c 83F31188 		msr basepri, r3											
 581 0020 BFF36F8F 		isb														
 582 0024 BFF34F8F 		dsb														
 583              	
 584              	@ 0 "" 2
 585              	.LVL57:
 586              		.thumb
 587              		.syntax unified
 588              	.L49:
 589              		.loc 2 198 9 is_stmt 0 view .LVU182
 590              	.LBE117:
 591              	.LBE116:
 355:FreeRTOS/Source/queue.c **** 
 592              		.loc 1 355 5 is_stmt 1 discriminator 3 view .LVU183
 355:FreeRTOS/Source/queue.c **** 
 593              		.loc 1 355 5 discriminator 3 view .LVU184
 594 0028 FEE7     		b	.L49
 595              	.LVL58:
 596              	.L52:
 302:FreeRTOS/Source/queue.c **** 
 597              		.loc 1 302 5 view .LVU185
 598              	.LBB118:
 599              	.LBI118:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 600              		.loc 2 194 34 view .LVU186
 601              	.LBB119:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 602              		.loc 2 196 9 view .LVU187
 603              		.loc 2 198 9 view .LVU188
 604              		.syntax unified
 605              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 606 002a 4FF05003 			mov r3, #80												
 607 002e 83F31188 		msr basepri, r3											
 608 0032 BFF36F8F 		isb														
 609 0036 BFF34F8F 		dsb														
 610              	
 611              	@ 0 "" 2
 612              	.LVL59:
 613              		.thumb
 614              		.syntax unified
 615              	.L43:
 616              		.loc 2 198 9 is_stmt 0 view .LVU189
 617              	.LBE119:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 61


 618              	.LBE118:
 302:FreeRTOS/Source/queue.c **** 
 619              		.loc 1 302 5 is_stmt 1 discriminator 1 view .LVU190
 302:FreeRTOS/Source/queue.c **** 
 620              		.loc 1 302 5 discriminator 1 view .LVU191
 621 003a FEE7     		b	.L43
 622              	.LVL60:
 623              	.L53:
 307:FreeRTOS/Source/queue.c ****     {
 624              		.loc 1 307 44 is_stmt 0 view .LVU192
 625 003c 0121     		movs	r1, #1
 626 003e EAE7     		b	.L45
 627              	.L54:
 309:FreeRTOS/Source/queue.c ****         {
 628              		.loc 1 309 9 is_stmt 1 view .LVU193
 629 0040 FFF7FEFF 		bl	vPortEnterCritical
 630              	.LVL61:
 311:FreeRTOS/Source/queue.c ****             pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 631              		.loc 1 311 13 view .LVU194
 311:FreeRTOS/Source/queue.c ****             pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 632              		.loc 1 311 47 is_stmt 0 view .LVU195
 633 0044 2368     		ldr	r3, [r4]
 311:FreeRTOS/Source/queue.c ****             pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 634              		.loc 1 311 67 view .LVU196
 635 0046 E26B     		ldr	r2, [r4, #60]
 311:FreeRTOS/Source/queue.c ****             pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 636              		.loc 1 311 87 view .LVU197
 637 0048 216C     		ldr	r1, [r4, #64]
 311:FreeRTOS/Source/queue.c ****             pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 638              		.loc 1 311 56 view .LVU198
 639 004a 01FB0230 		mla	r0, r1, r2, r3
 311:FreeRTOS/Source/queue.c ****             pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 640              		.loc 1 311 38 view .LVU199
 641 004e A060     		str	r0, [r4, #8]
 312:FreeRTOS/Source/queue.c ****             pxQueue->pcWriteTo = pxQueue->pcHead;
 642              		.loc 1 312 13 is_stmt 1 view .LVU200
 312:FreeRTOS/Source/queue.c ****             pxQueue->pcWriteTo = pxQueue->pcHead;
 643              		.loc 1 312 40 is_stmt 0 view .LVU201
 644 0050 0020     		movs	r0, #0
 645 0052 A063     		str	r0, [r4, #56]
 313:FreeRTOS/Source/queue.c ****             pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue
 646              		.loc 1 313 13 is_stmt 1 view .LVU202
 313:FreeRTOS/Source/queue.c ****             pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue
 647              		.loc 1 313 32 is_stmt 0 view .LVU203
 648 0054 6360     		str	r3, [r4, #4]
 314:FreeRTOS/Source/queue.c ****             pxQueue->cRxLock = queueUNLOCKED;
 649              		.loc 1 314 13 is_stmt 1 view .LVU204
 314:FreeRTOS/Source/queue.c ****             pxQueue->cRxLock = queueUNLOCKED;
 650              		.loc 1 314 84 is_stmt 0 view .LVU205
 651 0056 013A     		subs	r2, r2, #1
 314:FreeRTOS/Source/queue.c ****             pxQueue->cRxLock = queueUNLOCKED;
 652              		.loc 1 314 60 view .LVU206
 653 0058 02FB0133 		mla	r3, r2, r1, r3
 314:FreeRTOS/Source/queue.c ****             pxQueue->cRxLock = queueUNLOCKED;
 654              		.loc 1 314 42 view .LVU207
 655 005c E360     		str	r3, [r4, #12]
 315:FreeRTOS/Source/queue.c ****             pxQueue->cTxLock = queueUNLOCKED;
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 62


 656              		.loc 1 315 13 is_stmt 1 view .LVU208
 315:FreeRTOS/Source/queue.c ****             pxQueue->cTxLock = queueUNLOCKED;
 657              		.loc 1 315 30 is_stmt 0 view .LVU209
 658 005e FF23     		movs	r3, #255
 659 0060 84F84430 		strb	r3, [r4, #68]
 316:FreeRTOS/Source/queue.c **** 
 660              		.loc 1 316 13 is_stmt 1 view .LVU210
 316:FreeRTOS/Source/queue.c **** 
 661              		.loc 1 316 30 is_stmt 0 view .LVU211
 662 0064 84F84530 		strb	r3, [r4, #69]
 318:FreeRTOS/Source/queue.c ****             {
 663              		.loc 1 318 13 is_stmt 1 view .LVU212
 318:FreeRTOS/Source/queue.c ****             {
 664              		.loc 1 318 15 is_stmt 0 view .LVU213
 665 0068 B5B9     		cbnz	r5, .L47
 325:FreeRTOS/Source/queue.c ****                 {
 666              		.loc 1 325 17 is_stmt 1 view .LVU214
 325:FreeRTOS/Source/queue.c ****                 {
 667              		.loc 1 325 21 is_stmt 0 view .LVU215
 668 006a 2369     		ldr	r3, [r4, #16]
 325:FreeRTOS/Source/queue.c ****                 {
 669              		.loc 1 325 19 view .LVU216
 670 006c 1BB9     		cbnz	r3, .L55
 671              	.L48:
 348:FreeRTOS/Source/queue.c ****     }
 672              		.loc 1 348 9 is_stmt 1 view .LVU217
 673 006e FFF7FEFF 		bl	vPortExitCritical
 674              	.LVL62:
 355:FreeRTOS/Source/queue.c **** 
 675              		.loc 1 355 5 view .LVU218
 355:FreeRTOS/Source/queue.c **** 
 676              		.loc 1 355 38 view .LVU219
 359:FreeRTOS/Source/queue.c **** }
 677              		.loc 1 359 5 view .LVU220
 360:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 678              		.loc 1 360 1 is_stmt 0 view .LVU221
 679 0072 0120     		movs	r0, #1
 680 0074 38BD     		pop	{r3, r4, r5, pc}
 681              	.LVL63:
 682              	.L55:
 327:FreeRTOS/Source/queue.c ****                     {
 683              		.loc 1 327 21 is_stmt 1 view .LVU222
 327:FreeRTOS/Source/queue.c ****                     {
 684              		.loc 1 327 25 is_stmt 0 view .LVU223
 685 0076 04F11000 		add	r0, r4, #16
 686 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 687              	.LVL64:
 327:FreeRTOS/Source/queue.c ****                     {
 688              		.loc 1 327 23 view .LVU224
 689 007e 0028     		cmp	r0, #0
 690 0080 F5D0     		beq	.L48
 329:FreeRTOS/Source/queue.c ****                     }
 691              		.loc 1 329 25 is_stmt 1 view .LVU225
 692 0082 4FF0E023 		mov	r3, #-536813568
 693 0086 4FF08052 		mov	r2, #268435456
 694 008a C3F8042D 		str	r2, [r3, #3332]
 329:FreeRTOS/Source/queue.c ****                     }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 63


 695              		.loc 1 329 25 view .LVU226
 696              		.syntax unified
 697              	@ 329 "FreeRTOS/Source/queue.c" 1
 698 008e BFF34F8F 		dsb
 699              	@ 0 "" 2
 329:FreeRTOS/Source/queue.c ****                     }
 700              		.loc 1 329 25 view .LVU227
 701              	@ 329 "FreeRTOS/Source/queue.c" 1
 702 0092 BFF36F8F 		isb
 703              	@ 0 "" 2
 329:FreeRTOS/Source/queue.c ****                     }
 704              		.loc 1 329 57 view .LVU228
 705              		.thumb
 706              		.syntax unified
 707 0096 EAE7     		b	.L48
 708              	.L47:
 344:FreeRTOS/Source/queue.c ****                 vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 709              		.loc 1 344 17 view .LVU229
 710 0098 04F11000 		add	r0, r4, #16
 711 009c FFF7FEFF 		bl	vListInitialise
 712              	.LVL65:
 345:FreeRTOS/Source/queue.c ****             }
 713              		.loc 1 345 17 view .LVU230
 714 00a0 04F12400 		add	r0, r4, #36
 715 00a4 FFF7FEFF 		bl	vListInitialise
 716              	.LVL66:
 717 00a8 E1E7     		b	.L48
 718              		.cfi_endproc
 719              	.LFE5:
 721              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 722              		.align	1
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 727              	prvInitialiseNewQueue:
 728              	.LVL67:
 729              	.LFB7:
 499:FreeRTOS/Source/queue.c ****     /* Remove compiler warnings about unused parameters should
 730              		.loc 1 499 1 view -0
 731              		.cfi_startproc
 732              		@ args = 4, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 499:FreeRTOS/Source/queue.c ****     /* Remove compiler warnings about unused parameters should
 734              		.loc 1 499 1 is_stmt 0 view .LVU232
 735 0000 38B5     		push	{r3, r4, r5, lr}
 736              	.LCFI7:
 737              		.cfi_def_cfa_offset 16
 738              		.cfi_offset 3, -16
 739              		.cfi_offset 4, -12
 740              		.cfi_offset 5, -8
 741              		.cfi_offset 14, -4
 742 0002 1D46     		mov	r5, r3
 743 0004 049C     		ldr	r4, [sp, #16]
 502:FreeRTOS/Source/queue.c **** 
 744              		.loc 1 502 5 is_stmt 1 view .LVU233
 504:FreeRTOS/Source/queue.c ****     {
 745              		.loc 1 504 5 view .LVU234
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 64


 504:FreeRTOS/Source/queue.c ****     {
 746              		.loc 1 504 7 is_stmt 0 view .LVU235
 747 0006 0B46     		mov	r3, r1
 748              	.LVL68:
 504:FreeRTOS/Source/queue.c ****     {
 749              		.loc 1 504 7 view .LVU236
 750 0008 49B9     		cbnz	r1, .L57
 510:FreeRTOS/Source/queue.c ****     }
 751              		.loc 1 510 9 is_stmt 1 view .LVU237
 510:FreeRTOS/Source/queue.c ****     }
 752              		.loc 1 510 28 is_stmt 0 view .LVU238
 753 000a 2460     		str	r4, [r4]
 754              	.L58:
 520:FreeRTOS/Source/queue.c ****     pxNewQueue->uxItemSize = uxItemSize;
 755              		.loc 1 520 5 is_stmt 1 view .LVU239
 520:FreeRTOS/Source/queue.c ****     pxNewQueue->uxItemSize = uxItemSize;
 756              		.loc 1 520 26 is_stmt 0 view .LVU240
 757 000c E063     		str	r0, [r4, #60]
 521:FreeRTOS/Source/queue.c ****     ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 758              		.loc 1 521 5 is_stmt 1 view .LVU241
 521:FreeRTOS/Source/queue.c ****     ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 759              		.loc 1 521 28 is_stmt 0 view .LVU242
 760 000e 2364     		str	r3, [r4, #64]
 522:FreeRTOS/Source/queue.c **** 
 761              		.loc 1 522 5 is_stmt 1 view .LVU243
 522:FreeRTOS/Source/queue.c **** 
 762              		.loc 1 522 14 is_stmt 0 view .LVU244
 763 0010 0121     		movs	r1, #1
 764              	.LVL69:
 522:FreeRTOS/Source/queue.c **** 
 765              		.loc 1 522 14 view .LVU245
 766 0012 2046     		mov	r0, r4
 767              	.LVL70:
 522:FreeRTOS/Source/queue.c **** 
 768              		.loc 1 522 14 view .LVU246
 769 0014 FFF7FEFF 		bl	xQueueGenericReset
 770              	.LVL71:
 526:FreeRTOS/Source/queue.c ****     }
 771              		.loc 1 526 9 is_stmt 1 view .LVU247
 526:FreeRTOS/Source/queue.c ****     }
 772              		.loc 1 526 33 is_stmt 0 view .LVU248
 773 0018 84F84C50 		strb	r5, [r4, #76]
 536:FreeRTOS/Source/queue.c **** }
 774              		.loc 1 536 36 is_stmt 1 view .LVU249
 537:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 775              		.loc 1 537 1 is_stmt 0 view .LVU250
 776 001c 38BD     		pop	{r3, r4, r5, pc}
 777              	.LVL72:
 778              	.L57:
 515:FreeRTOS/Source/queue.c ****     }
 779              		.loc 1 515 9 is_stmt 1 view .LVU251
 515:FreeRTOS/Source/queue.c ****     }
 780              		.loc 1 515 28 is_stmt 0 view .LVU252
 781 001e 2260     		str	r2, [r4]
 782 0020 F4E7     		b	.L58
 783              		.cfi_endproc
 784              	.LFE7:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 65


 786              		.section	.text.xQueueGenericCreate,"ax",%progbits
 787              		.align	1
 788              		.global	xQueueGenericCreate
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 793              	xQueueGenericCreate:
 794              	.LVL73:
 795              	.LFB6:
 431:FreeRTOS/Source/queue.c ****         Queue_t * pxNewQueue = NULL;
 796              		.loc 1 431 5 is_stmt 1 view -0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 431:FreeRTOS/Source/queue.c ****         Queue_t * pxNewQueue = NULL;
 800              		.loc 1 431 5 is_stmt 0 view .LVU254
 801 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 802              	.LCFI8:
 803              		.cfi_def_cfa_offset 20
 804              		.cfi_offset 4, -20
 805              		.cfi_offset 5, -16
 806              		.cfi_offset 6, -12
 807              		.cfi_offset 7, -8
 808              		.cfi_offset 14, -4
 809 0002 83B0     		sub	sp, sp, #12
 810              	.LCFI9:
 811              		.cfi_def_cfa_offset 32
 432:FreeRTOS/Source/queue.c ****         size_t xQueueSizeInBytes;
 812              		.loc 1 432 9 is_stmt 1 view .LVU255
 813              	.LVL74:
 433:FreeRTOS/Source/queue.c ****         uint8_t * pucQueueStorage;
 814              		.loc 1 433 9 view .LVU256
 434:FreeRTOS/Source/queue.c **** 
 815              		.loc 1 434 9 view .LVU257
 436:FreeRTOS/Source/queue.c ****             /* Check for multiplication overflow. */
 816              		.loc 1 436 9 view .LVU258
 436:FreeRTOS/Source/queue.c ****             /* Check for multiplication overflow. */
 817              		.loc 1 436 11 is_stmt 0 view .LVU259
 818 0004 60B1     		cbz	r0, .L61
 819 0006 0C46     		mov	r4, r1
 820 0008 1746     		mov	r7, r2
 821 000a 0546     		mov	r5, r0
 438:FreeRTOS/Source/queue.c ****             /* Check for addition overflow. */
 822              		.loc 1 438 44 discriminator 1 view .LVU260
 823 000c 0023     		movs	r3, #0
 824 000e A4FB0012 		umull	r1, r2, r4, r0
 825              	.LVL75:
 438:FreeRTOS/Source/queue.c ****             /* Check for addition overflow. */
 826              		.loc 1 438 44 discriminator 1 view .LVU261
 827 0012 72B9     		cbnz	r2, .L67
 828              	.L62:
 436:FreeRTOS/Source/queue.c ****             /* Check for multiplication overflow. */
 829              		.loc 1 436 51 discriminator 1 view .LVU262
 830 0014 23B9     		cbnz	r3, .L61
 440:FreeRTOS/Source/queue.c ****         {
 831              		.loc 1 440 67 view .LVU263
 832 0016 04FB05F0 		mul	r0, r4, r5
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 66


 833              	.LVL76:
 438:FreeRTOS/Source/queue.c ****             /* Check for addition overflow. */
 834              		.loc 1 438 60 view .LVU264
 835 001a 10F1510F 		cmn	r0, #81
 836 001e 0AD9     		bls	.L68
 837              	.LVL77:
 838              	.L61:
 484:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
 839              		.loc 1 484 13 is_stmt 1 view .LVU265
 484:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
 840              		.loc 1 484 13 view .LVU266
 841              	.LBB120:
 842              	.LBI120:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 843              		.loc 2 194 34 view .LVU267
 844              	.LBB121:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 845              		.loc 2 196 9 view .LVU268
 846              		.loc 2 198 9 view .LVU269
 847              		.syntax unified
 848              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 849 0020 4FF05003 			mov r3, #80												
 850 0024 83F31188 		msr basepri, r3											
 851 0028 BFF36F8F 		isb														
 852 002c BFF34F8F 		dsb														
 853              	
 854              	@ 0 "" 2
 855              	.LVL78:
 856              		.thumb
 857              		.syntax unified
 858              	.L65:
 859              		.loc 2 198 9 is_stmt 0 view .LVU270
 860              	.LBE121:
 861              	.LBE120:
 484:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
 862              		.loc 1 484 13 is_stmt 1 discriminator 1 view .LVU271
 484:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
 863              		.loc 1 484 13 discriminator 1 view .LVU272
 864 0030 FEE7     		b	.L65
 865              	.LVL79:
 866              	.L67:
 438:FreeRTOS/Source/queue.c ****             /* Check for addition overflow. */
 867              		.loc 1 438 44 is_stmt 0 discriminator 1 view .LVU273
 868 0032 0123     		movs	r3, #1
 869 0034 EEE7     		b	.L62
 870              	.LVL80:
 871              	.L68:
 445:FreeRTOS/Source/queue.c **** 
 872              		.loc 1 445 13 is_stmt 1 view .LVU274
 456:FreeRTOS/Source/queue.c **** 
 873              		.loc 1 456 13 view .LVU275
 456:FreeRTOS/Source/queue.c **** 
 874              		.loc 1 456 40 is_stmt 0 view .LVU276
 875 0036 5030     		adds	r0, r0, #80
 876              	.LVL81:
 456:FreeRTOS/Source/queue.c **** 
 877              		.loc 1 456 40 view .LVU277
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 67


 878 0038 FFF7FEFF 		bl	pvPortMalloc
 879              	.LVL82:
 458:FreeRTOS/Source/queue.c ****             {
 880              		.loc 1 458 13 is_stmt 1 view .LVU278
 458:FreeRTOS/Source/queue.c ****             {
 881              		.loc 1 458 15 is_stmt 0 view .LVU279
 882 003c 0646     		mov	r6, r0
 883 003e 38B1     		cbz	r0, .L60
 462:FreeRTOS/Source/queue.c ****                 pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on c
 884              		.loc 1 462 17 is_stmt 1 view .LVU280
 885              	.LVL83:
 463:FreeRTOS/Source/queue.c **** 
 886              		.loc 1 463 17 view .LVU281
 474:FreeRTOS/Source/queue.c ****             }
 887              		.loc 1 474 17 view .LVU282
 888 0040 0090     		str	r0, [sp]
 889 0042 3B46     		mov	r3, r7
 890 0044 00F15002 		add	r2, r0, #80
 891              	.LVL84:
 474:FreeRTOS/Source/queue.c ****             }
 892              		.loc 1 474 17 is_stmt 0 view .LVU283
 893 0048 2146     		mov	r1, r4
 894 004a 2846     		mov	r0, r5
 895              	.LVL85:
 474:FreeRTOS/Source/queue.c ****             }
 896              		.loc 1 474 17 view .LVU284
 897 004c FFF7FEFF 		bl	prvInitialiseNewQueue
 898              	.LVL86:
 899              	.L60:
 489:FreeRTOS/Source/queue.c **** 
 900              		.loc 1 489 5 view .LVU285
 901 0050 3046     		mov	r0, r6
 902 0052 03B0     		add	sp, sp, #12
 903              	.LCFI10:
 904              		.cfi_def_cfa_offset 20
 905              		@ sp needed
 906 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 489:FreeRTOS/Source/queue.c **** 
 907              		.loc 1 489 5 view .LVU286
 908              		.cfi_endproc
 909              	.LFE6:
 911              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 912              		.align	1
 913              		.global	xQueueCreateCountingSemaphore
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 918              	xQueueCreateCountingSemaphore:
 919              	.LVL87:
 920              	.LFB12:
 804:FreeRTOS/Source/queue.c ****         QueueHandle_t xHandle = NULL;
 921              		.loc 1 804 5 is_stmt 1 view -0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 804:FreeRTOS/Source/queue.c ****         QueueHandle_t xHandle = NULL;
 925              		.loc 1 804 5 is_stmt 0 view .LVU288
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 68


 926 0000 10B5     		push	{r4, lr}
 927              	.LCFI11:
 928              		.cfi_def_cfa_offset 8
 929              		.cfi_offset 4, -8
 930              		.cfi_offset 14, -4
 805:FreeRTOS/Source/queue.c **** 
 931              		.loc 1 805 9 is_stmt 1 view .LVU289
 932              	.LVL88:
 807:FreeRTOS/Source/queue.c ****             ( uxInitialCount <= uxMaxCount ) )
 933              		.loc 1 807 9 view .LVU290
 807:FreeRTOS/Source/queue.c ****             ( uxInitialCount <= uxMaxCount ) )
 934              		.loc 1 807 11 is_stmt 0 view .LVU291
 935 0002 10B1     		cbz	r0, .L70
 936 0004 0C46     		mov	r4, r1
 807:FreeRTOS/Source/queue.c ****             ( uxInitialCount <= uxMaxCount ) )
 937              		.loc 1 807 33 discriminator 1 view .LVU292
 938 0006 8842     		cmp	r0, r1
 939 0008 08D2     		bcs	.L74
 940              	.L70:
 825:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
 941              		.loc 1 825 13 is_stmt 1 view .LVU293
 825:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
 942              		.loc 1 825 13 view .LVU294
 943              	.LBB122:
 944              	.LBI122:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 945              		.loc 2 194 34 view .LVU295
 946              	.LBB123:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 947              		.loc 2 196 9 view .LVU296
 948              		.loc 2 198 9 view .LVU297
 949              		.syntax unified
 950              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 951 000a 4FF05003 			mov r3, #80												
 952 000e 83F31188 		msr basepri, r3											
 953 0012 BFF36F8F 		isb														
 954 0016 BFF34F8F 		dsb														
 955              	
 956              	@ 0 "" 2
 957              	.LVL89:
 958              		.thumb
 959              		.syntax unified
 960              	.L72:
 961              		.loc 2 198 9 is_stmt 0 view .LVU298
 962              	.LBE123:
 963              	.LBE122:
 825:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
 964              		.loc 1 825 13 is_stmt 1 discriminator 1 view .LVU299
 825:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
 965              		.loc 1 825 13 discriminator 1 view .LVU300
 966 001a FEE7     		b	.L72
 967              	.L74:
 810:FreeRTOS/Source/queue.c **** 
 968              		.loc 1 810 13 view .LVU301
 810:FreeRTOS/Source/queue.c **** 
 969              		.loc 1 810 23 is_stmt 0 view .LVU302
 970 001c 0222     		movs	r2, #2
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 69


 971 001e 0021     		movs	r1, #0
 972              	.LVL90:
 810:FreeRTOS/Source/queue.c **** 
 973              		.loc 1 810 23 view .LVU303
 974 0020 FFF7FEFF 		bl	xQueueGenericCreate
 975              	.LVL91:
 812:FreeRTOS/Source/queue.c ****             {
 976              		.loc 1 812 13 is_stmt 1 view .LVU304
 812:FreeRTOS/Source/queue.c ****             {
 977              		.loc 1 812 15 is_stmt 0 view .LVU305
 978 0024 00B1     		cbz	r0, .L69
 814:FreeRTOS/Source/queue.c **** 
 979              		.loc 1 814 17 is_stmt 1 view .LVU306
 814:FreeRTOS/Source/queue.c **** 
 980              		.loc 1 814 62 is_stmt 0 view .LVU307
 981 0026 8463     		str	r4, [r0, #56]
 816:FreeRTOS/Source/queue.c ****             }
 982              		.loc 1 816 49 is_stmt 1 view .LVU308
 983              	.L69:
 830:FreeRTOS/Source/queue.c **** 
 984              		.loc 1 830 5 is_stmt 0 view .LVU309
 985 0028 10BD     		pop	{r4, pc}
 830:FreeRTOS/Source/queue.c **** 
 986              		.loc 1 830 5 view .LVU310
 987              		.cfi_endproc
 988              	.LFE12:
 990              		.section	.text.xQueueGenericSend,"ax",%progbits
 991              		.align	1
 992              		.global	xQueueGenericSend
 993              		.syntax unified
 994              		.thumb
 995              		.thumb_func
 997              	xQueueGenericSend:
 998              	.LVL92:
 999              	.LFB13:
 839:FreeRTOS/Source/queue.c ****     BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1000              		.loc 1 839 1 is_stmt 1 view -0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 16
 1003              		@ frame_needed = 0, uses_anonymous_args = 0
 839:FreeRTOS/Source/queue.c ****     BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1004              		.loc 1 839 1 is_stmt 0 view .LVU312
 1005 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1006              	.LCFI12:
 1007              		.cfi_def_cfa_offset 20
 1008              		.cfi_offset 4, -20
 1009              		.cfi_offset 5, -16
 1010              		.cfi_offset 6, -12
 1011              		.cfi_offset 7, -8
 1012              		.cfi_offset 14, -4
 1013 0002 85B0     		sub	sp, sp, #20
 1014              	.LCFI13:
 1015              		.cfi_def_cfa_offset 40
 1016 0004 0192     		str	r2, [sp, #4]
 840:FreeRTOS/Source/queue.c ****     TimeOut_t xTimeOut;
 1017              		.loc 1 840 5 is_stmt 1 view .LVU313
 1018              	.LVL93:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 70


 841:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 1019              		.loc 1 841 5 view .LVU314
 842:FreeRTOS/Source/queue.c **** 
 1020              		.loc 1 842 5 view .LVU315
 844:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1021              		.loc 1 844 5 view .LVU316
 1022 0006 88B1     		cbz	r0, .L99
 1023 0008 0F46     		mov	r7, r1
 1024 000a 1D46     		mov	r5, r3
 1025 000c 0446     		mov	r4, r0
 844:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1026              		.loc 1 844 28 discriminator 2 view .LVU317
 845:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1027              		.loc 1 845 5 discriminator 2 view .LVU318
 1028 000e B1B1     		cbz	r1, .L100
 1029              	.LVL94:
 1030              	.L78:
 845:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1031              		.loc 1 845 100 discriminator 8 view .LVU319
 846:FreeRTOS/Source/queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1032              		.loc 1 846 5 discriminator 8 view .LVU320
 1033 0010 022D     		cmp	r5, #2
 1034 0012 20D1     		bne	.L80
 846:FreeRTOS/Source/queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1035              		.loc 1 846 5 is_stmt 0 discriminator 2 view .LVU321
 1036 0014 E36B     		ldr	r3, [r4, #60]
 1037 0016 012B     		cmp	r3, #1
 1038 0018 1DD0     		beq	.L80
 846:FreeRTOS/Source/queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1039              		.loc 1 846 5 is_stmt 1 view .LVU322
 1040              	.LBB124:
 1041              	.LBI124:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1042              		.loc 2 194 34 view .LVU323
 1043              	.LBB125:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1044              		.loc 2 196 9 view .LVU324
 1045              		.loc 2 198 9 view .LVU325
 1046              		.syntax unified
 1047              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1048 001a 4FF05003 			mov r3, #80												
 1049 001e 83F31188 		msr basepri, r3											
 1050 0022 BFF36F8F 		isb														
 1051 0026 BFF34F8F 		dsb														
 1052              	
 1053              	@ 0 "" 2
 1054              	.LVL95:
 1055              		.thumb
 1056              		.syntax unified
 1057              	.L81:
 1058              		.loc 2 198 9 is_stmt 0 view .LVU326
 1059              	.LBE125:
 1060              	.LBE124:
 846:FreeRTOS/Source/queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1061              		.loc 1 846 5 is_stmt 1 discriminator 3 view .LVU327
 846:FreeRTOS/Source/queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1062              		.loc 1 846 5 discriminator 3 view .LVU328
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 71


 1063 002a FEE7     		b	.L81
 1064              	.LVL96:
 1065              	.L99:
 844:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1066              		.loc 1 844 5 view .LVU329
 1067              	.LBB126:
 1068              	.LBI126:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1069              		.loc 2 194 34 view .LVU330
 1070              	.LBB127:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1071              		.loc 2 196 9 view .LVU331
 1072              		.loc 2 198 9 view .LVU332
 1073              		.syntax unified
 1074              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1075 002c 4FF05003 			mov r3, #80												
 1076 0030 83F31188 		msr basepri, r3											
 1077 0034 BFF36F8F 		isb														
 1078 0038 BFF34F8F 		dsb														
 1079              	
 1080              	@ 0 "" 2
 1081              	.LVL97:
 1082              		.thumb
 1083              		.syntax unified
 1084              	.L77:
 1085              		.loc 2 198 9 is_stmt 0 view .LVU333
 1086              	.LBE127:
 1087              	.LBE126:
 844:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1088              		.loc 1 844 5 is_stmt 1 discriminator 1 view .LVU334
 844:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1089              		.loc 1 844 5 discriminator 1 view .LVU335
 1090 003c FEE7     		b	.L77
 1091              	.LVL98:
 1092              	.L100:
 845:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1093              		.loc 1 845 5 is_stmt 0 discriminator 2 view .LVU336
 1094 003e 036C     		ldr	r3, [r0, #64]
 1095              	.LVL99:
 845:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1096              		.loc 1 845 5 discriminator 2 view .LVU337
 1097 0040 002B     		cmp	r3, #0
 1098 0042 E5D0     		beq	.L78
 845:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1099              		.loc 1 845 5 is_stmt 1 view .LVU338
 1100              	.LBB128:
 1101              	.LBI128:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1102              		.loc 2 194 34 view .LVU339
 1103              	.LBB129:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1104              		.loc 2 196 9 view .LVU340
 1105              		.loc 2 198 9 view .LVU341
 1106              		.syntax unified
 1107              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1108 0044 4FF05003 			mov r3, #80												
 1109 0048 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 72


 1110 004c BFF36F8F 		isb														
 1111 0050 BFF34F8F 		dsb														
 1112              	
 1113              	@ 0 "" 2
 1114              	.LVL100:
 1115              		.thumb
 1116              		.syntax unified
 1117              	.L79:
 1118              		.loc 2 198 9 is_stmt 0 view .LVU342
 1119              	.LBE129:
 1120              	.LBE128:
 845:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1121              		.loc 1 845 5 is_stmt 1 discriminator 2 view .LVU343
 845:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1122              		.loc 1 845 5 discriminator 2 view .LVU344
 1123 0054 FEE7     		b	.L79
 1124              	.L80:
 846:FreeRTOS/Source/queue.c ****     #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1125              		.loc 1 846 91 discriminator 8 view .LVU345
 849:FreeRTOS/Source/queue.c ****     }
 1126              		.loc 1 849 9 discriminator 8 view .LVU346
 1127 0056 FFF7FEFF 		bl	xTaskGetSchedulerState
 1128              	.LVL101:
 849:FreeRTOS/Source/queue.c ****     }
 1129              		.loc 1 849 9 is_stmt 0 discriminator 8 view .LVU347
 1130 005a 0646     		mov	r6, r0
 1131 005c 58B9     		cbnz	r0, .L97
 849:FreeRTOS/Source/queue.c ****     }
 1132              		.loc 1 849 9 discriminator 2 view .LVU348
 1133 005e 019B     		ldr	r3, [sp, #4]
 1134 0060 002B     		cmp	r3, #0
 1135 0062 48D0     		beq	.L84
 849:FreeRTOS/Source/queue.c ****     }
 1136              		.loc 1 849 9 is_stmt 1 view .LVU349
 1137              	.LBB130:
 1138              	.LBI130:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1139              		.loc 2 194 34 view .LVU350
 1140              	.LBB131:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1141              		.loc 2 196 9 view .LVU351
 1142              		.loc 2 198 9 view .LVU352
 1143              		.syntax unified
 1144              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1145 0064 4FF05003 			mov r3, #80												
 1146 0068 83F31188 		msr basepri, r3											
 1147 006c BFF36F8F 		isb														
 1148 0070 BFF34F8F 		dsb														
 1149              	
 1150              	@ 0 "" 2
 1151              	.LVL102:
 1152              		.thumb
 1153              		.syntax unified
 1154              	.L83:
 1155              		.loc 2 198 9 is_stmt 0 view .LVU353
 1156              	.LBE131:
 1157              	.LBE130:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 73


 849:FreeRTOS/Source/queue.c ****     }
 1158              		.loc 1 849 9 is_stmt 1 discriminator 4 view .LVU354
 849:FreeRTOS/Source/queue.c ****     }
 1159              		.loc 1 849 9 discriminator 4 view .LVU355
 1160 0074 FEE7     		b	.L83
 1161              	.L97:
 1162 0076 0026     		movs	r6, #0
 1163 0078 3DE0     		b	.L84
 1164              	.LVL103:
 1165              	.L85:
 866:FreeRTOS/Source/queue.c **** 
 1166              		.loc 1 866 43 view .LVU356
 930:FreeRTOS/Source/queue.c **** 
 1167              		.loc 1 930 21 view .LVU357
 930:FreeRTOS/Source/queue.c **** 
 1168              		.loc 1 930 38 is_stmt 0 view .LVU358
 1169 007a 2A46     		mov	r2, r5
 1170 007c 3946     		mov	r1, r7
 1171 007e 2046     		mov	r0, r4
 1172 0080 FFF7FEFF 		bl	prvCopyDataToQueue
 1173              	.LVL104:
 934:FreeRTOS/Source/queue.c ****                     {
 1174              		.loc 1 934 21 is_stmt 1 view .LVU359
 934:FreeRTOS/Source/queue.c ****                     {
 1175              		.loc 1 934 25 is_stmt 0 view .LVU360
 1176 0084 636A     		ldr	r3, [r4, #36]
 934:FreeRTOS/Source/queue.c ****                     {
 1177              		.loc 1 934 23 view .LVU361
 1178 0086 7BB9     		cbnz	r3, .L101
 949:FreeRTOS/Source/queue.c ****                     {
 1179              		.loc 1 949 26 is_stmt 1 view .LVU362
 949:FreeRTOS/Source/queue.c ****                     {
 1180              		.loc 1 949 28 is_stmt 0 view .LVU363
 1181 0088 48B1     		cbz	r0, .L88
 955:FreeRTOS/Source/queue.c ****                     }
 1182              		.loc 1 955 25 is_stmt 1 view .LVU364
 1183 008a 4FF0E023 		mov	r3, #-536813568
 1184 008e 4FF08052 		mov	r2, #268435456
 1185 0092 C3F8042D 		str	r2, [r3, #3332]
 955:FreeRTOS/Source/queue.c ****                     }
 1186              		.loc 1 955 25 view .LVU365
 1187              		.syntax unified
 1188              	@ 955 "FreeRTOS/Source/queue.c" 1
 1189 0096 BFF34F8F 		dsb
 1190              	@ 0 "" 2
 955:FreeRTOS/Source/queue.c ****                     }
 1191              		.loc 1 955 25 view .LVU366
 1192              	@ 955 "FreeRTOS/Source/queue.c" 1
 1193 009a BFF36F8F 		isb
 1194              	@ 0 "" 2
 955:FreeRTOS/Source/queue.c ****                     }
 1195              		.loc 1 955 57 view .LVU367
 1196              	.LVL105:
 1197              		.thumb
 1198              		.syntax unified
 1199              	.L88:
 959:FreeRTOS/Source/queue.c ****                     }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 74


 1200              		.loc 1 959 49 view .LVU368
 964:FreeRTOS/Source/queue.c ****                 return pdPASS;
 1201              		.loc 1 964 17 view .LVU369
 1202 009e FFF7FEFF 		bl	vPortExitCritical
 1203              	.LVL106:
 965:FreeRTOS/Source/queue.c ****             }
 1204              		.loc 1 965 17 view .LVU370
 965:FreeRTOS/Source/queue.c ****             }
 1205              		.loc 1 965 24 is_stmt 0 view .LVU371
 1206 00a2 0120     		movs	r0, #1
 1207              	.LVL107:
 1208              	.L75:
1044:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1209              		.loc 1 1044 1 view .LVU372
 1210 00a4 05B0     		add	sp, sp, #20
 1211              	.LCFI14:
 1212              		.cfi_remember_state
 1213              		.cfi_def_cfa_offset 20
 1214              		@ sp needed
 1215 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1216              	.LVL108:
 1217              	.L101:
 1218              	.LCFI15:
 1219              		.cfi_restore_state
 936:FreeRTOS/Source/queue.c ****                         {
 1220              		.loc 1 936 25 is_stmt 1 view .LVU373
 936:FreeRTOS/Source/queue.c ****                         {
 1221              		.loc 1 936 29 is_stmt 0 view .LVU374
 1222 00a8 04F12400 		add	r0, r4, #36
 1223              	.LVL109:
 936:FreeRTOS/Source/queue.c ****                         {
 1224              		.loc 1 936 29 view .LVU375
 1225 00ac FFF7FEFF 		bl	xTaskRemoveFromEventList
 1226              	.LVL110:
 936:FreeRTOS/Source/queue.c ****                         {
 1227              		.loc 1 936 27 view .LVU376
 1228 00b0 0028     		cmp	r0, #0
 1229 00b2 F4D0     		beq	.L88
 942:FreeRTOS/Source/queue.c ****                         }
 1230              		.loc 1 942 29 is_stmt 1 view .LVU377
 1231 00b4 4FF0E023 		mov	r3, #-536813568
 1232 00b8 4FF08052 		mov	r2, #268435456
 1233 00bc C3F8042D 		str	r2, [r3, #3332]
 942:FreeRTOS/Source/queue.c ****                         }
 1234              		.loc 1 942 29 view .LVU378
 1235              		.syntax unified
 1236              	@ 942 "FreeRTOS/Source/queue.c" 1
 1237 00c0 BFF34F8F 		dsb
 1238              	@ 0 "" 2
 942:FreeRTOS/Source/queue.c ****                         }
 1239              		.loc 1 942 29 view .LVU379
 1240              	@ 942 "FreeRTOS/Source/queue.c" 1
 1241 00c4 BFF36F8F 		isb
 1242              	@ 0 "" 2
 942:FreeRTOS/Source/queue.c ****                         }
 1243              		.loc 1 942 61 view .LVU380
 1244              		.thumb
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 75


 1245              		.syntax unified
 1246 00c8 E9E7     		b	.L88
 1247              	.LVL111:
 1248              	.L102:
 973:FreeRTOS/Source/queue.c **** 
 1249              		.loc 1 973 21 view .LVU381
 1250 00ca FFF7FEFF 		bl	vPortExitCritical
 1251              	.LVL112:
 977:FreeRTOS/Source/queue.c ****                     return errQUEUE_FULL;
 1252              		.loc 1 977 54 view .LVU382
 978:FreeRTOS/Source/queue.c ****                 }
 1253              		.loc 1 978 21 view .LVU383
 978:FreeRTOS/Source/queue.c ****                 }
 1254              		.loc 1 978 28 is_stmt 0 view .LVU384
 1255 00ce 0020     		movs	r0, #0
 1256 00d0 E8E7     		b	.L75
 1257              	.L103:
 984:FreeRTOS/Source/queue.c ****                     xEntryTimeSet = pdTRUE;
 1258              		.loc 1 984 21 is_stmt 1 view .LVU385
 1259 00d2 02A8     		add	r0, sp, #8
 1260 00d4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1261              	.LVL113:
 985:FreeRTOS/Source/queue.c ****                 }
 1262              		.loc 1 985 21 view .LVU386
 985:FreeRTOS/Source/queue.c ****                 }
 1263              		.loc 1 985 35 is_stmt 0 view .LVU387
 1264 00d8 0126     		movs	r6, #1
 1265 00da 19E0     		b	.L91
 1266              	.LVL114:
 1267              	.L104:
1000:FreeRTOS/Source/queue.c **** 
 1268              		.loc 1 1000 9 is_stmt 1 discriminator 1 view .LVU388
 1269 00dc 0023     		movs	r3, #0
 1270 00de 84F84430 		strb	r3, [r4, #68]
 1271 00e2 21E0     		b	.L92
 1272              	.L105:
1000:FreeRTOS/Source/queue.c **** 
 1273              		.loc 1 1000 9 discriminator 4 view .LVU389
 1274 00e4 0023     		movs	r3, #0
 1275 00e6 84F84530 		strb	r3, [r4, #69]
 1276 00ea 23E0     		b	.L93
 1277              	.L95:
1030:FreeRTOS/Source/queue.c ****                 ( void ) xTaskResumeAll();
 1278              		.loc 1 1030 17 view .LVU390
 1279 00ec 2046     		mov	r0, r4
 1280 00ee FFF7FEFF 		bl	prvUnlockQueue
 1281              	.LVL115:
1031:FreeRTOS/Source/queue.c ****             }
 1282              		.loc 1 1031 17 view .LVU391
1031:FreeRTOS/Source/queue.c ****             }
 1283              		.loc 1 1031 26 is_stmt 0 view .LVU392
 1284 00f2 FFF7FEFF 		bl	xTaskResumeAll
 1285              	.LVL116:
 1286              	.L84:
 849:FreeRTOS/Source/queue.c ****     }
 1287              		.loc 1 849 110 is_stmt 1 discriminator 8 view .LVU393
 856:FreeRTOS/Source/queue.c ****     {
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 76


 1288              		.loc 1 856 5 discriminator 8 view .LVU394
 858:FreeRTOS/Source/queue.c ****         {
 1289              		.loc 1 858 9 discriminator 8 view .LVU395
 1290 00f6 FFF7FEFF 		bl	vPortEnterCritical
 1291              	.LVL117:
 864:FreeRTOS/Source/queue.c ****             {
 1292              		.loc 1 864 13 discriminator 8 view .LVU396
 864:FreeRTOS/Source/queue.c ****             {
 1293              		.loc 1 864 26 is_stmt 0 discriminator 8 view .LVU397
 1294 00fa A26B     		ldr	r2, [r4, #56]
 864:FreeRTOS/Source/queue.c ****             {
 1295              		.loc 1 864 55 discriminator 8 view .LVU398
 1296 00fc E36B     		ldr	r3, [r4, #60]
 864:FreeRTOS/Source/queue.c ****             {
 1297              		.loc 1 864 15 discriminator 8 view .LVU399
 1298 00fe 9A42     		cmp	r2, r3
 1299 0100 BBD3     		bcc	.L85
 864:FreeRTOS/Source/queue.c ****             {
 1300              		.loc 1 864 68 discriminator 1 view .LVU400
 1301 0102 022D     		cmp	r5, #2
 1302 0104 B9D0     		beq	.L85
 969:FreeRTOS/Source/queue.c ****                 {
 1303              		.loc 1 969 17 is_stmt 1 view .LVU401
 969:FreeRTOS/Source/queue.c ****                 {
 1304              		.loc 1 969 34 is_stmt 0 view .LVU402
 1305 0106 019B     		ldr	r3, [sp, #4]
 969:FreeRTOS/Source/queue.c ****                 {
 1306              		.loc 1 969 19 view .LVU403
 1307 0108 002B     		cmp	r3, #0
 1308 010a DED0     		beq	.L102
 980:FreeRTOS/Source/queue.c ****                 {
 1309              		.loc 1 980 22 is_stmt 1 view .LVU404
 980:FreeRTOS/Source/queue.c ****                 {
 1310              		.loc 1 980 24 is_stmt 0 view .LVU405
 1311 010c 002E     		cmp	r6, #0
 1312 010e E0D0     		beq	.L103
 1313              	.LVL118:
 1314              	.L91:
 990:FreeRTOS/Source/queue.c ****                 }
 1315              		.loc 1 990 45 is_stmt 1 view .LVU406
 994:FreeRTOS/Source/queue.c **** 
 1316              		.loc 1 994 9 view .LVU407
 1317 0110 FFF7FEFF 		bl	vPortExitCritical
 1318              	.LVL119:
 999:FreeRTOS/Source/queue.c ****         prvLockQueue( pxQueue );
 1319              		.loc 1 999 9 view .LVU408
 1320 0114 FFF7FEFF 		bl	vTaskSuspendAll
 1321              	.LVL120:
1000:FreeRTOS/Source/queue.c **** 
 1322              		.loc 1 1000 9 view .LVU409
 1323 0118 FFF7FEFF 		bl	vPortEnterCritical
 1324              	.LVL121:
1000:FreeRTOS/Source/queue.c **** 
 1325              		.loc 1 1000 9 view .LVU410
 1326 011c 94F84420 		ldrb	r2, [r4, #68]	@ zero_extendqisi2
 1327 0120 52B2     		sxtb	r2, r2
 1328 0122 B2F1FF3F 		cmp	r2, #-1
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 77


 1329 0126 D9D0     		beq	.L104
 1330              	.L92:
1000:FreeRTOS/Source/queue.c **** 
 1331              		.loc 1 1000 9 discriminator 3 view .LVU411
 1332 0128 94F84520 		ldrb	r2, [r4, #69]	@ zero_extendqisi2
 1333 012c 52B2     		sxtb	r2, r2
 1334 012e B2F1FF3F 		cmp	r2, #-1
 1335 0132 D7D0     		beq	.L105
 1336              	.L93:
1000:FreeRTOS/Source/queue.c **** 
 1337              		.loc 1 1000 9 discriminator 6 view .LVU412
 1338 0134 FFF7FEFF 		bl	vPortExitCritical
 1339              	.LVL122:
1003:FreeRTOS/Source/queue.c ****         {
 1340              		.loc 1 1003 9 discriminator 6 view .LVU413
1003:FreeRTOS/Source/queue.c ****         {
 1341              		.loc 1 1003 13 is_stmt 0 discriminator 6 view .LVU414
 1342 0138 01A9     		add	r1, sp, #4
 1343 013a 02A8     		add	r0, sp, #8
 1344 013c FFF7FEFF 		bl	xTaskCheckForTimeOut
 1345              	.LVL123:
1003:FreeRTOS/Source/queue.c ****         {
 1346              		.loc 1 1003 11 discriminator 6 view .LVU415
 1347 0140 D8B9     		cbnz	r0, .L94
1005:FreeRTOS/Source/queue.c ****             {
 1348              		.loc 1 1005 13 is_stmt 1 view .LVU416
1005:FreeRTOS/Source/queue.c ****             {
 1349              		.loc 1 1005 17 is_stmt 0 view .LVU417
 1350 0142 2046     		mov	r0, r4
 1351 0144 FFF7FEFF 		bl	prvIsQueueFull
 1352              	.LVL124:
1005:FreeRTOS/Source/queue.c ****             {
 1353              		.loc 1 1005 15 view .LVU418
 1354 0148 0028     		cmp	r0, #0
 1355 014a CFD0     		beq	.L95
1007:FreeRTOS/Source/queue.c ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 1356              		.loc 1 1007 55 is_stmt 1 view .LVU419
1008:FreeRTOS/Source/queue.c **** 
 1357              		.loc 1 1008 17 view .LVU420
 1358 014c 0199     		ldr	r1, [sp, #4]
 1359 014e 04F11000 		add	r0, r4, #16
 1360 0152 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1361              	.LVL125:
1015:FreeRTOS/Source/queue.c **** 
 1362              		.loc 1 1015 17 view .LVU421
 1363 0156 2046     		mov	r0, r4
 1364 0158 FFF7FEFF 		bl	prvUnlockQueue
 1365              	.LVL126:
1022:FreeRTOS/Source/queue.c ****                 {
 1366              		.loc 1 1022 17 view .LVU422
1022:FreeRTOS/Source/queue.c ****                 {
 1367              		.loc 1 1022 21 is_stmt 0 view .LVU423
 1368 015c FFF7FEFF 		bl	xTaskResumeAll
 1369              	.LVL127:
1022:FreeRTOS/Source/queue.c ****                 {
 1370              		.loc 1 1022 19 view .LVU424
 1371 0160 0028     		cmp	r0, #0
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 78


 1372 0162 C8D1     		bne	.L84
1024:FreeRTOS/Source/queue.c ****                 }
 1373              		.loc 1 1024 21 is_stmt 1 view .LVU425
 1374 0164 4FF0E023 		mov	r3, #-536813568
 1375 0168 4FF08052 		mov	r2, #268435456
 1376 016c C3F8042D 		str	r2, [r3, #3332]
1024:FreeRTOS/Source/queue.c ****                 }
 1377              		.loc 1 1024 21 view .LVU426
 1378              		.syntax unified
 1379              	@ 1024 "FreeRTOS/Source/queue.c" 1
 1380 0170 BFF34F8F 		dsb
 1381              	@ 0 "" 2
1024:FreeRTOS/Source/queue.c ****                 }
 1382              		.loc 1 1024 21 view .LVU427
 1383              	@ 1024 "FreeRTOS/Source/queue.c" 1
 1384 0174 BFF36F8F 		isb
 1385              	@ 0 "" 2
 1386              		.thumb
 1387              		.syntax unified
 1388 0178 BDE7     		b	.L84
 1389              	.L94:
1037:FreeRTOS/Source/queue.c ****             ( void ) xTaskResumeAll();
 1390              		.loc 1 1037 13 view .LVU428
 1391 017a 2046     		mov	r0, r4
 1392 017c FFF7FEFF 		bl	prvUnlockQueue
 1393              	.LVL128:
1038:FreeRTOS/Source/queue.c **** 
 1394              		.loc 1 1038 13 view .LVU429
1038:FreeRTOS/Source/queue.c **** 
 1395              		.loc 1 1038 22 is_stmt 0 view .LVU430
 1396 0180 FFF7FEFF 		bl	xTaskResumeAll
 1397              	.LVL129:
1040:FreeRTOS/Source/queue.c ****             return errQUEUE_FULL;
 1398              		.loc 1 1040 46 is_stmt 1 view .LVU431
1041:FreeRTOS/Source/queue.c ****         }
 1399              		.loc 1 1041 13 view .LVU432
1041:FreeRTOS/Source/queue.c ****         }
 1400              		.loc 1 1041 20 is_stmt 0 view .LVU433
 1401 0184 0020     		movs	r0, #0
 1402 0186 8DE7     		b	.L75
 1403              		.cfi_endproc
 1404              	.LFE13:
 1406              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1407              		.align	1
 1408              		.syntax unified
 1409              		.thumb
 1410              		.thumb_func
 1412              	prvInitialiseMutex:
 1413              	.LVL130:
 1414              	.LFB8:
 543:FreeRTOS/Source/queue.c ****         if( pxNewQueue != NULL )
 1415              		.loc 1 543 5 is_stmt 1 view -0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 544:FreeRTOS/Source/queue.c ****         {
 1419              		.loc 1 544 9 view .LVU435
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 79


 544:FreeRTOS/Source/queue.c ****         {
 1420              		.loc 1 544 11 is_stmt 0 view .LVU436
 1421 0000 48B1     		cbz	r0, .L109
 543:FreeRTOS/Source/queue.c ****         if( pxNewQueue != NULL )
 1422              		.loc 1 543 5 view .LVU437
 1423 0002 08B5     		push	{r3, lr}
 1424              	.LCFI16:
 1425              		.cfi_def_cfa_offset 8
 1426              		.cfi_offset 3, -8
 1427              		.cfi_offset 14, -4
 550:FreeRTOS/Source/queue.c ****             pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1428              		.loc 1 550 13 is_stmt 1 view .LVU438
 550:FreeRTOS/Source/queue.c ****             pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1429              		.loc 1 550 51 is_stmt 0 view .LVU439
 1430 0004 0021     		movs	r1, #0
 1431 0006 8160     		str	r1, [r0, #8]
 551:FreeRTOS/Source/queue.c **** 
 1432              		.loc 1 551 13 is_stmt 1 view .LVU440
 551:FreeRTOS/Source/queue.c **** 
 1433              		.loc 1 551 37 is_stmt 0 view .LVU441
 1434 0008 0160     		str	r1, [r0]
 554:FreeRTOS/Source/queue.c **** 
 1435              		.loc 1 554 13 is_stmt 1 view .LVU442
 554:FreeRTOS/Source/queue.c **** 
 1436              		.loc 1 554 59 is_stmt 0 view .LVU443
 1437 000a C160     		str	r1, [r0, #12]
 556:FreeRTOS/Source/queue.c **** 
 1438              		.loc 1 556 44 is_stmt 1 view .LVU444
 559:FreeRTOS/Source/queue.c ****         }
 1439              		.loc 1 559 13 view .LVU445
 559:FreeRTOS/Source/queue.c ****         }
 1440              		.loc 1 559 22 is_stmt 0 view .LVU446
 1441 000c 0B46     		mov	r3, r1
 1442 000e 0A46     		mov	r2, r1
 1443 0010 FFF7FEFF 		bl	xQueueGenericSend
 1444              	.LVL131:
 563:FreeRTOS/Source/queue.c ****         }
 1445              		.loc 1 563 39 is_stmt 1 view .LVU447
 565:FreeRTOS/Source/queue.c **** 
 1446              		.loc 1 565 5 is_stmt 0 view .LVU448
 1447 0014 08BD     		pop	{r3, pc}
 1448              	.LVL132:
 1449              	.L109:
 1450              	.LCFI17:
 1451              		.cfi_def_cfa_offset 0
 1452              		.cfi_restore 3
 1453              		.cfi_restore 14
 565:FreeRTOS/Source/queue.c **** 
 1454              		.loc 1 565 5 view .LVU449
 1455 0016 7047     		bx	lr
 1456              		.cfi_endproc
 1457              	.LFE8:
 1459              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1460              		.align	1
 1461              		.global	xQueueCreateMutex
 1462              		.syntax unified
 1463              		.thumb
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 80


 1464              		.thumb_func
 1466              	xQueueCreateMutex:
 1467              	.LVL133:
 1468              	.LFB9:
 573:FreeRTOS/Source/queue.c ****         QueueHandle_t xNewQueue;
 1469              		.loc 1 573 5 is_stmt 1 view -0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 0
 1472              		@ frame_needed = 0, uses_anonymous_args = 0
 573:FreeRTOS/Source/queue.c ****         QueueHandle_t xNewQueue;
 1473              		.loc 1 573 5 is_stmt 0 view .LVU451
 1474 0000 10B5     		push	{r4, lr}
 1475              	.LCFI18:
 1476              		.cfi_def_cfa_offset 8
 1477              		.cfi_offset 4, -8
 1478              		.cfi_offset 14, -4
 1479 0002 0246     		mov	r2, r0
 574:FreeRTOS/Source/queue.c ****         const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 1480              		.loc 1 574 9 is_stmt 1 view .LVU452
 575:FreeRTOS/Source/queue.c **** 
 1481              		.loc 1 575 9 view .LVU453
 1482              	.LVL134:
 577:FreeRTOS/Source/queue.c ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1483              		.loc 1 577 9 view .LVU454
 577:FreeRTOS/Source/queue.c ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1484              		.loc 1 577 21 is_stmt 0 view .LVU455
 1485 0004 0021     		movs	r1, #0
 1486 0006 0120     		movs	r0, #1
 1487              	.LVL135:
 577:FreeRTOS/Source/queue.c ****         prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1488              		.loc 1 577 21 view .LVU456
 1489 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1490              	.LVL136:
 1491 000c 0446     		mov	r4, r0
 1492              	.LVL137:
 578:FreeRTOS/Source/queue.c **** 
 1493              		.loc 1 578 9 is_stmt 1 view .LVU457
 1494 000e FFF7FEFF 		bl	prvInitialiseMutex
 1495              	.LVL138:
 580:FreeRTOS/Source/queue.c ****     }
 1496              		.loc 1 580 9 view .LVU458
 581:FreeRTOS/Source/queue.c **** 
 1497              		.loc 1 581 5 is_stmt 0 view .LVU459
 1498 0012 2046     		mov	r0, r4
 1499 0014 10BD     		pop	{r4, pc}
 581:FreeRTOS/Source/queue.c **** 
 1500              		.loc 1 581 5 view .LVU460
 1501              		.cfi_endproc
 1502              	.LFE9:
 1504              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 1505              		.align	1
 1506              		.global	xQueueGiveMutexRecursive
 1507              		.syntax unified
 1508              		.thumb
 1509              		.thumb_func
 1511              	xQueueGiveMutexRecursive:
 1512              	.LVL139:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 81


 1513              	.LFB10:
 669:FreeRTOS/Source/queue.c ****         BaseType_t xReturn;
 1514              		.loc 1 669 5 is_stmt 1 view -0
 1515              		.cfi_startproc
 1516              		@ args = 0, pretend = 0, frame = 0
 1517              		@ frame_needed = 0, uses_anonymous_args = 0
 669:FreeRTOS/Source/queue.c ****         BaseType_t xReturn;
 1518              		.loc 1 669 5 is_stmt 0 view .LVU462
 1519 0000 38B5     		push	{r3, r4, r5, lr}
 1520              	.LCFI19:
 1521              		.cfi_def_cfa_offset 16
 1522              		.cfi_offset 3, -16
 1523              		.cfi_offset 4, -12
 1524              		.cfi_offset 5, -8
 1525              		.cfi_offset 14, -4
 670:FreeRTOS/Source/queue.c ****         Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 1526              		.loc 1 670 9 is_stmt 1 view .LVU463
 671:FreeRTOS/Source/queue.c **** 
 1527              		.loc 1 671 9 view .LVU464
 1528              	.LVL140:
 673:FreeRTOS/Source/queue.c **** 
 1529              		.loc 1 673 9 view .LVU465
 1530 0002 38B1     		cbz	r0, .L121
 1531 0004 0446     		mov	r4, r0
 673:FreeRTOS/Source/queue.c **** 
 1532              		.loc 1 673 32 discriminator 2 view .LVU466
 681:FreeRTOS/Source/queue.c ****         {
 1533              		.loc 1 681 9 discriminator 2 view .LVU467
 681:FreeRTOS/Source/queue.c ****         {
 1534              		.loc 1 681 34 is_stmt 0 discriminator 2 view .LVU468
 1535 0006 8568     		ldr	r5, [r0, #8]
 681:FreeRTOS/Source/queue.c ****         {
 1536              		.loc 1 681 51 discriminator 2 view .LVU469
 1537 0008 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1538              	.LVL141:
 681:FreeRTOS/Source/queue.c ****         {
 1539              		.loc 1 681 11 discriminator 2 view .LVU470
 1540 000c 8542     		cmp	r5, r0
 1541 000e 0AD0     		beq	.L122
 710:FreeRTOS/Source/queue.c **** 
 1542              		.loc 1 710 21 view .LVU471
 1543 0010 0020     		movs	r0, #0
 1544              	.L114:
 716:FreeRTOS/Source/queue.c **** 
 1545              		.loc 1 716 5 view .LVU472
 1546 0012 38BD     		pop	{r3, r4, r5, pc}
 1547              	.LVL142:
 1548              	.L121:
 673:FreeRTOS/Source/queue.c **** 
 1549              		.loc 1 673 9 is_stmt 1 view .LVU473
 1550              	.LBB132:
 1551              	.LBI132:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1552              		.loc 2 194 34 view .LVU474
 1553              	.LBB133:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1554              		.loc 2 196 9 view .LVU475
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 82


 1555              		.loc 2 198 9 view .LVU476
 1556              		.syntax unified
 1557              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1558 0014 4FF05003 			mov r3, #80												
 1559 0018 83F31188 		msr basepri, r3											
 1560 001c BFF36F8F 		isb														
 1561 0020 BFF34F8F 		dsb														
 1562              	
 1563              	@ 0 "" 2
 1564              	.LVL143:
 1565              		.thumb
 1566              		.syntax unified
 1567              	.L116:
 1568              		.loc 2 198 9 is_stmt 0 view .LVU477
 1569              	.LBE133:
 1570              	.LBE132:
 673:FreeRTOS/Source/queue.c **** 
 1571              		.loc 1 673 9 is_stmt 1 discriminator 1 view .LVU478
 673:FreeRTOS/Source/queue.c **** 
 1572              		.loc 1 673 9 discriminator 1 view .LVU479
 1573 0024 FEE7     		b	.L116
 1574              	.LVL144:
 1575              	.L122:
 683:FreeRTOS/Source/queue.c **** 
 1576              		.loc 1 683 49 view .LVU480
 690:FreeRTOS/Source/queue.c **** 
 1577              		.loc 1 690 13 view .LVU481
 690:FreeRTOS/Source/queue.c **** 
 1578              		.loc 1 690 36 is_stmt 0 view .LVU482
 1579 0026 E368     		ldr	r3, [r4, #12]
 690:FreeRTOS/Source/queue.c **** 
 1580              		.loc 1 690 59 view .LVU483
 1581 0028 013B     		subs	r3, r3, #1
 1582 002a E360     		str	r3, [r4, #12]
 693:FreeRTOS/Source/queue.c ****             {
 1583              		.loc 1 693 13 is_stmt 1 view .LVU484
 693:FreeRTOS/Source/queue.c ****             {
 1584              		.loc 1 693 15 is_stmt 0 view .LVU485
 1585 002c 0BB1     		cbz	r3, .L123
 704:FreeRTOS/Source/queue.c ****         }
 1586              		.loc 1 704 21 view .LVU486
 1587 002e 0120     		movs	r0, #1
 1588              	.LVL145:
 712:FreeRTOS/Source/queue.c ****         }
 1589              		.loc 1 712 56 is_stmt 1 view .LVU487
 715:FreeRTOS/Source/queue.c ****     }
 1590              		.loc 1 715 9 view .LVU488
 715:FreeRTOS/Source/queue.c ****     }
 1591              		.loc 1 715 16 is_stmt 0 view .LVU489
 1592 0030 EFE7     		b	.L114
 1593              	.LVL146:
 1594              	.L123:
 697:FreeRTOS/Source/queue.c ****             }
 1595              		.loc 1 697 17 is_stmt 1 view .LVU490
 697:FreeRTOS/Source/queue.c ****             }
 1596              		.loc 1 697 26 is_stmt 0 view .LVU491
 1597 0032 1A46     		mov	r2, r3
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 83


 1598 0034 1946     		mov	r1, r3
 1599 0036 2046     		mov	r0, r4
 1600 0038 FFF7FEFF 		bl	xQueueGenericSend
 1601              	.LVL147:
 704:FreeRTOS/Source/queue.c ****         }
 1602              		.loc 1 704 21 view .LVU492
 1603 003c 0120     		movs	r0, #1
 1604 003e E8E7     		b	.L114
 1605              		.cfi_endproc
 1606              	.LFE10:
 1608              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1609              		.align	1
 1610              		.global	xQueueGenericSendFromISR
 1611              		.syntax unified
 1612              		.thumb
 1613              		.thumb_func
 1615              	xQueueGenericSendFromISR:
 1616              	.LVL148:
 1617              	.LFB14:
1051:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
 1618              		.loc 1 1051 1 is_stmt 1 view -0
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 0
 1621              		@ frame_needed = 0, uses_anonymous_args = 0
1051:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
 1622              		.loc 1 1051 1 is_stmt 0 view .LVU494
 1623 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1624              	.LCFI20:
 1625              		.cfi_def_cfa_offset 32
 1626              		.cfi_offset 3, -32
 1627              		.cfi_offset 4, -28
 1628              		.cfi_offset 5, -24
 1629              		.cfi_offset 6, -20
 1630              		.cfi_offset 7, -16
 1631              		.cfi_offset 8, -12
 1632              		.cfi_offset 9, -8
 1633              		.cfi_offset 14, -4
1052:FreeRTOS/Source/queue.c ****     UBaseType_t uxSavedInterruptStatus;
 1634              		.loc 1 1052 5 is_stmt 1 view .LVU495
1053:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 1635              		.loc 1 1053 5 view .LVU496
1054:FreeRTOS/Source/queue.c **** 
 1636              		.loc 1 1054 5 view .LVU497
 1637              	.LVL149:
1056:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1638              		.loc 1 1056 5 view .LVU498
 1639 0004 90B1     		cbz	r0, .L142
 1640 0006 0F46     		mov	r7, r1
 1641 0008 1646     		mov	r6, r2
 1642 000a 1C46     		mov	r4, r3
 1643 000c 0546     		mov	r5, r0
1056:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1644              		.loc 1 1056 28 discriminator 2 view .LVU499
1057:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1645              		.loc 1 1057 5 discriminator 2 view .LVU500
 1646 000e B1B1     		cbz	r1, .L143
 1647              	.LVL150:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 84


 1648              	.L127:
1057:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1649              		.loc 1 1057 100 discriminator 8 view .LVU501
1058:FreeRTOS/Source/queue.c **** 
 1650              		.loc 1 1058 5 discriminator 8 view .LVU502
 1651 0010 022C     		cmp	r4, #2
 1652 0012 20D1     		bne	.L129
1058:FreeRTOS/Source/queue.c **** 
 1653              		.loc 1 1058 5 is_stmt 0 discriminator 2 view .LVU503
 1654 0014 EB6B     		ldr	r3, [r5, #60]
 1655 0016 012B     		cmp	r3, #1
 1656 0018 1DD0     		beq	.L129
1058:FreeRTOS/Source/queue.c **** 
 1657              		.loc 1 1058 5 is_stmt 1 view .LVU504
 1658              	.LBB134:
 1659              	.LBI134:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1660              		.loc 2 194 34 view .LVU505
 1661              	.LBB135:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1662              		.loc 2 196 9 view .LVU506
 1663              		.loc 2 198 9 view .LVU507
 1664              		.syntax unified
 1665              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1666 001a 4FF05003 			mov r3, #80												
 1667 001e 83F31188 		msr basepri, r3											
 1668 0022 BFF36F8F 		isb														
 1669 0026 BFF34F8F 		dsb														
 1670              	
 1671              	@ 0 "" 2
 1672              	.LVL151:
 1673              		.thumb
 1674              		.syntax unified
 1675              	.L130:
 1676              		.loc 2 198 9 is_stmt 0 view .LVU508
 1677              	.LBE135:
 1678              	.LBE134:
1058:FreeRTOS/Source/queue.c **** 
 1679              		.loc 1 1058 5 is_stmt 1 discriminator 3 view .LVU509
1058:FreeRTOS/Source/queue.c **** 
 1680              		.loc 1 1058 5 discriminator 3 view .LVU510
 1681 002a FEE7     		b	.L130
 1682              	.LVL152:
 1683              	.L142:
1056:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1684              		.loc 1 1056 5 view .LVU511
 1685              	.LBB136:
 1686              	.LBI136:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1687              		.loc 2 194 34 view .LVU512
 1688              	.LBB137:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1689              		.loc 2 196 9 view .LVU513
 1690              		.loc 2 198 9 view .LVU514
 1691              		.syntax unified
 1692              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1693 002c 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 85


 1694 0030 83F31188 		msr basepri, r3											
 1695 0034 BFF36F8F 		isb														
 1696 0038 BFF34F8F 		dsb														
 1697              	
 1698              	@ 0 "" 2
 1699              	.LVL153:
 1700              		.thumb
 1701              		.syntax unified
 1702              	.L126:
 1703              		.loc 2 198 9 is_stmt 0 view .LVU515
 1704              	.LBE137:
 1705              	.LBE136:
1056:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1706              		.loc 1 1056 5 is_stmt 1 discriminator 1 view .LVU516
1056:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) )
 1707              		.loc 1 1056 5 discriminator 1 view .LVU517
 1708 003c FEE7     		b	.L126
 1709              	.LVL154:
 1710              	.L143:
1057:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1711              		.loc 1 1057 5 is_stmt 0 discriminator 2 view .LVU518
 1712 003e 036C     		ldr	r3, [r0, #64]
 1713              	.LVL155:
1057:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1714              		.loc 1 1057 5 discriminator 2 view .LVU519
 1715 0040 002B     		cmp	r3, #0
 1716 0042 E5D0     		beq	.L127
1057:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1717              		.loc 1 1057 5 is_stmt 1 view .LVU520
 1718              	.LBB138:
 1719              	.LBI138:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1720              		.loc 2 194 34 view .LVU521
 1721              	.LBB139:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1722              		.loc 2 196 9 view .LVU522
 1723              		.loc 2 198 9 view .LVU523
 1724              		.syntax unified
 1725              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1726 0044 4FF05003 			mov r3, #80												
 1727 0048 83F31188 		msr basepri, r3											
 1728 004c BFF36F8F 		isb														
 1729 0050 BFF34F8F 		dsb														
 1730              	
 1731              	@ 0 "" 2
 1732              	.LVL156:
 1733              		.thumb
 1734              		.syntax unified
 1735              	.L128:
 1736              		.loc 2 198 9 is_stmt 0 view .LVU524
 1737              	.LBE139:
 1738              	.LBE138:
1057:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1739              		.loc 1 1057 5 is_stmt 1 discriminator 2 view .LVU525
1057:FreeRTOS/Source/queue.c ****     configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1740              		.loc 1 1057 5 discriminator 2 view .LVU526
 1741 0054 FEE7     		b	.L128
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 86


 1742              	.L129:
1058:FreeRTOS/Source/queue.c **** 
 1743              		.loc 1 1058 91 discriminator 8 view .LVU527
1074:FreeRTOS/Source/queue.c **** 
 1744              		.loc 1 1074 5 discriminator 8 view .LVU528
 1745 0056 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1746              	.LVL157:
1081:FreeRTOS/Source/queue.c ****     {
 1747              		.loc 1 1081 5 discriminator 8 view .LVU529
 1748              	.LBB140:
 1749              	.LBI140:
 199:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 200:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %0, %1												\n"\
 201:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %0											\n"\
 202:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 203:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 204:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 205:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         );
 206:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 207:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 208:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 209:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 210:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1750              		.loc 2 210 38 discriminator 8 view .LVU530
 1751              	.LBB141:
 211:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 212:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1752              		.loc 2 212 9 discriminator 8 view .LVU531
 213:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 214:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 1753              		.loc 2 214 9 discriminator 8 view .LVU532
 1754              		.syntax unified
 1755              	@ 214 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1756 005a EFF31188 			mrs r8, basepri											
 1757 005e 4FF05003 		mov r3, #80												
 1758 0062 83F31188 		msr basepri, r3											
 1759 0066 BFF36F8F 		isb														
 1760 006a BFF34F8F 		dsb														
 1761              	
 1762              	@ 0 "" 2
 1763              	.LVL158:
 215:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 216:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	mrs %0, basepri											\n"\
 217:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %1, %2												\n"\
 218:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %1											\n"\
 219:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 220:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 221:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 222:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         );
 223:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 224:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 225:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****          * warnings. */
 226:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         return ulOriginalBASEPRI;
 1764              		.loc 2 226 9 discriminator 8 view .LVU533
 1765              		.loc 2 226 9 is_stmt 0 discriminator 8 view .LVU534
 1766              		.thumb
 1767              		.syntax unified
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 87


 1768              	.LBE141:
 1769              	.LBE140:
1083:FreeRTOS/Source/queue.c ****         {
 1770              		.loc 1 1083 9 is_stmt 1 discriminator 8 view .LVU535
1083:FreeRTOS/Source/queue.c ****         {
 1771              		.loc 1 1083 22 is_stmt 0 discriminator 8 view .LVU536
 1772 006e AA6B     		ldr	r2, [r5, #56]
1083:FreeRTOS/Source/queue.c ****         {
 1773              		.loc 1 1083 51 discriminator 8 view .LVU537
 1774 0070 EB6B     		ldr	r3, [r5, #60]
1083:FreeRTOS/Source/queue.c ****         {
 1775              		.loc 1 1083 11 discriminator 8 view .LVU538
 1776 0072 9A42     		cmp	r2, r3
 1777 0074 06D3     		bcc	.L131
1083:FreeRTOS/Source/queue.c ****         {
 1778              		.loc 1 1083 64 discriminator 1 view .LVU539
 1779 0076 022C     		cmp	r4, #2
 1780 0078 04D0     		beq	.L131
1203:FreeRTOS/Source/queue.c ****         }
 1781              		.loc 1 1203 21 view .LVU540
 1782 007a 0020     		movs	r0, #0
 1783              	.L132:
 1784              	.LVL159:
1206:FreeRTOS/Source/queue.c **** 
 1785              		.loc 1 1206 5 is_stmt 1 view .LVU541
 1786              	.LBB142:
 1787              	.LBI142:
 227:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 228:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 229:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 230:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1788              		.loc 2 230 34 view .LVU542
 1789              	.LBB143:
 231:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 232:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 1790              		.loc 2 232 9 view .LVU543
 1791              		.syntax unified
 1792              	@ 232 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1793 007c 88F31188 			msr basepri, r8	
 1794              	@ 0 "" 2
 1795              		.thumb
 1796              		.syntax unified
 1797              	.LBE143:
 1798              	.LBE142:
1208:FreeRTOS/Source/queue.c **** }
 1799              		.loc 1 1208 5 view .LVU544
1209:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1800              		.loc 1 1209 1 is_stmt 0 view .LVU545
 1801 0080 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1802              	.LVL160:
 1803              	.L131:
 1804              	.LBB144:
1085:FreeRTOS/Source/queue.c ****             const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 1805              		.loc 1 1085 13 is_stmt 1 view .LVU546
1085:FreeRTOS/Source/queue.c ****             const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 1806              		.loc 1 1085 26 is_stmt 0 view .LVU547
 1807 0084 95F84590 		ldrb	r9, [r5, #69]	@ zero_extendqisi2
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 88


 1808 0088 4FFA89F9 		sxtb	r9, r9
 1809              	.LVL161:
1086:FreeRTOS/Source/queue.c **** 
 1810              		.loc 1 1086 13 is_stmt 1 view .LVU548
1086:FreeRTOS/Source/queue.c **** 
 1811              		.loc 1 1086 31 is_stmt 0 view .LVU549
 1812 008c AB6B     		ldr	r3, [r5, #56]
1088:FreeRTOS/Source/queue.c **** 
 1813              		.loc 1 1088 48 is_stmt 1 view .LVU550
1095:FreeRTOS/Source/queue.c **** 
 1814              		.loc 1 1095 13 view .LVU551
1095:FreeRTOS/Source/queue.c **** 
 1815              		.loc 1 1095 22 is_stmt 0 view .LVU552
 1816 008e 2246     		mov	r2, r4
 1817 0090 3946     		mov	r1, r7
 1818 0092 2846     		mov	r0, r5
 1819 0094 FFF7FEFF 		bl	prvCopyDataToQueue
 1820              	.LVL162:
1099:FreeRTOS/Source/queue.c ****             {
 1821              		.loc 1 1099 13 is_stmt 1 view .LVU553
1099:FreeRTOS/Source/queue.c ****             {
 1822              		.loc 1 1099 15 is_stmt 0 view .LVU554
 1823 0098 B9F1FF3F 		cmp	r9, #-1
 1824 009c 0CD1     		bne	.L133
1161:FreeRTOS/Source/queue.c ****                     {
 1825              		.loc 1 1161 21 is_stmt 1 view .LVU555
1161:FreeRTOS/Source/queue.c ****                     {
 1826              		.loc 1 1161 25 is_stmt 0 view .LVU556
 1827 009e 6B6A     		ldr	r3, [r5, #36]
1161:FreeRTOS/Source/queue.c ****                     {
 1828              		.loc 1 1161 23 view .LVU557
 1829 00a0 0BB9     		cbnz	r3, .L144
1198:FreeRTOS/Source/queue.c ****         }
 1830              		.loc 1 1198 21 view .LVU558
 1831 00a2 0120     		movs	r0, #1
 1832 00a4 EAE7     		b	.L132
 1833              	.L144:
1163:FreeRTOS/Source/queue.c ****                         {
 1834              		.loc 1 1163 25 is_stmt 1 view .LVU559
1163:FreeRTOS/Source/queue.c ****                         {
 1835              		.loc 1 1163 29 is_stmt 0 view .LVU560
 1836 00a6 05F12400 		add	r0, r5, #36
 1837 00aa FFF7FEFF 		bl	xTaskRemoveFromEventList
 1838              	.LVL163:
1163:FreeRTOS/Source/queue.c ****                         {
 1839              		.loc 1 1163 27 view .LVU561
 1840 00ae D0B1     		cbz	r0, .L138
1167:FreeRTOS/Source/queue.c ****                             {
 1841              		.loc 1 1167 29 is_stmt 1 view .LVU562
1167:FreeRTOS/Source/queue.c ****                             {
 1842              		.loc 1 1167 31 is_stmt 0 view .LVU563
 1843 00b0 DEB1     		cbz	r6, .L139
1169:FreeRTOS/Source/queue.c ****                             }
 1844              		.loc 1 1169 33 is_stmt 1 view .LVU564
1169:FreeRTOS/Source/queue.c ****                             }
 1845              		.loc 1 1169 60 is_stmt 0 view .LVU565
 1846 00b2 0120     		movs	r0, #1
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 89


 1847 00b4 3060     		str	r0, [r6]
 1848 00b6 E1E7     		b	.L132
 1849              	.L133:
 1850              	.LBB145:
1195:FreeRTOS/Source/queue.c ****             }
 1851              		.loc 1 1195 17 is_stmt 1 view .LVU566
 1852 00b8 FFF7FEFF 		bl	uxTaskGetNumberOfTasks
 1853              	.LVL164:
1195:FreeRTOS/Source/queue.c ****             }
 1854              		.loc 1 1195 17 view .LVU567
 1855 00bc 8145     		cmp	r9, r0
 1856 00be 16D2     		bcs	.L140
1195:FreeRTOS/Source/queue.c ****             }
 1857              		.loc 1 1195 17 discriminator 1 view .LVU568
 1858 00c0 B9F17F0F 		cmp	r9, #127
 1859 00c4 06D0     		beq	.L145
1195:FreeRTOS/Source/queue.c ****             }
 1860              		.loc 1 1195 17 discriminator 4 view .LVU569
1195:FreeRTOS/Source/queue.c ****             }
 1861              		.loc 1 1195 17 discriminator 4 view .LVU570
 1862 00c6 09F10103 		add	r3, r9, #1
 1863 00ca 5BB2     		sxtb	r3, r3
 1864 00cc 85F84530 		strb	r3, [r5, #69]
 1865              	.LBE145:
1198:FreeRTOS/Source/queue.c ****         }
 1866              		.loc 1 1198 21 is_stmt 0 discriminator 4 view .LVU571
 1867 00d0 0120     		movs	r0, #1
 1868              	.LVL165:
1198:FreeRTOS/Source/queue.c ****         }
 1869              		.loc 1 1198 21 discriminator 4 view .LVU572
 1870 00d2 D3E7     		b	.L132
 1871              	.LVL166:
 1872              	.L145:
 1873              	.LBB148:
1195:FreeRTOS/Source/queue.c ****             }
 1874              		.loc 1 1195 17 is_stmt 1 view .LVU573
 1875              	.LBB146:
 1876              	.LBI146:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1877              		.loc 2 194 34 view .LVU574
 1878              	.LBB147:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1879              		.loc 2 196 9 view .LVU575
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1880              		.loc 2 198 9 view .LVU576
 1881              		.syntax unified
 1882              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1883 00d4 4FF05003 			mov r3, #80												
 1884 00d8 83F31188 		msr basepri, r3											
 1885 00dc BFF36F8F 		isb														
 1886 00e0 BFF34F8F 		dsb														
 1887              	
 1888              	@ 0 "" 2
 1889              	.LVL167:
 1890              		.thumb
 1891              		.syntax unified
 1892              	.L135:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 90


 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1893              		.loc 2 198 9 is_stmt 0 view .LVU577
 1894              	.LBE147:
 1895              	.LBE146:
1195:FreeRTOS/Source/queue.c ****             }
 1896              		.loc 1 1195 17 is_stmt 1 discriminator 6 view .LVU578
1195:FreeRTOS/Source/queue.c ****             }
 1897              		.loc 1 1195 17 discriminator 6 view .LVU579
 1898 00e4 FEE7     		b	.L135
 1899              	.LVL168:
 1900              	.L138:
1195:FreeRTOS/Source/queue.c ****             }
 1901              		.loc 1 1195 17 is_stmt 0 discriminator 6 view .LVU580
 1902              	.LBE148:
1198:FreeRTOS/Source/queue.c ****         }
 1903              		.loc 1 1198 21 view .LVU581
 1904 00e6 0120     		movs	r0, #1
 1905 00e8 C8E7     		b	.L132
 1906              	.L139:
 1907 00ea 0120     		movs	r0, #1
 1908 00ec C6E7     		b	.L132
 1909              	.LVL169:
 1910              	.L140:
1198:FreeRTOS/Source/queue.c ****         }
 1911              		.loc 1 1198 21 view .LVU582
 1912 00ee 0120     		movs	r0, #1
 1913              	.LVL170:
1198:FreeRTOS/Source/queue.c ****         }
 1914              		.loc 1 1198 21 view .LVU583
 1915 00f0 C4E7     		b	.L132
 1916              	.LBE144:
 1917              		.cfi_endproc
 1918              	.LFE14:
 1920              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1921              		.align	1
 1922              		.global	xQueueGiveFromISR
 1923              		.syntax unified
 1924              		.thumb
 1925              		.thumb_func
 1927              	xQueueGiveFromISR:
 1928              	.LVL171:
 1929              	.LFB15:
1214:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
 1930              		.loc 1 1214 1 is_stmt 1 view -0
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 0
 1933              		@ frame_needed = 0, uses_anonymous_args = 0
1214:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
 1934              		.loc 1 1214 1 is_stmt 0 view .LVU585
 1935 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1936              	.LCFI21:
 1937              		.cfi_def_cfa_offset 24
 1938              		.cfi_offset 3, -24
 1939              		.cfi_offset 4, -20
 1940              		.cfi_offset 5, -16
 1941              		.cfi_offset 6, -12
 1942              		.cfi_offset 7, -8
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 91


 1943              		.cfi_offset 14, -4
1215:FreeRTOS/Source/queue.c ****     UBaseType_t uxSavedInterruptStatus;
 1944              		.loc 1 1215 5 is_stmt 1 view .LVU586
1216:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 1945              		.loc 1 1216 5 view .LVU587
1217:FreeRTOS/Source/queue.c **** 
 1946              		.loc 1 1217 5 view .LVU588
 1947              	.LVL172:
1225:FreeRTOS/Source/queue.c **** 
 1948              		.loc 1 1225 5 view .LVU589
 1949 0002 60B1     		cbz	r0, .L163
 1950 0004 0D46     		mov	r5, r1
 1951 0006 0446     		mov	r4, r0
1225:FreeRTOS/Source/queue.c **** 
 1952              		.loc 1 1225 28 discriminator 2 view .LVU590
1229:FreeRTOS/Source/queue.c **** 
 1953              		.loc 1 1229 5 discriminator 2 view .LVU591
 1954 0008 036C     		ldr	r3, [r0, #64]
 1955 000a 8BB1     		cbz	r3, .L149
1229:FreeRTOS/Source/queue.c **** 
 1956              		.loc 1 1229 5 view .LVU592
 1957              	.LBB149:
 1958              	.LBI149:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1959              		.loc 2 194 34 view .LVU593
 1960              	.LBB150:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1961              		.loc 2 196 9 view .LVU594
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1962              		.loc 2 198 9 view .LVU595
 1963              		.syntax unified
 1964              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1965 000c 4FF05003 			mov r3, #80												
 1966 0010 83F31188 		msr basepri, r3											
 1967 0014 BFF36F8F 		isb														
 1968 0018 BFF34F8F 		dsb														
 1969              	
 1970              	@ 0 "" 2
 1971              	.LVL173:
 1972              		.thumb
 1973              		.syntax unified
 1974              	.L150:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1975              		.loc 2 198 9 is_stmt 0 view .LVU596
 1976              	.LBE150:
 1977              	.LBE149:
1229:FreeRTOS/Source/queue.c **** 
 1978              		.loc 1 1229 5 is_stmt 1 discriminator 2 view .LVU597
1229:FreeRTOS/Source/queue.c **** 
 1979              		.loc 1 1229 5 discriminator 2 view .LVU598
 1980 001c FEE7     		b	.L150
 1981              	.L163:
1225:FreeRTOS/Source/queue.c **** 
 1982              		.loc 1 1225 5 view .LVU599
 1983              	.LBB151:
 1984              	.LBI151:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 92


 1985              		.loc 2 194 34 view .LVU600
 1986              	.LBB152:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1987              		.loc 2 196 9 view .LVU601
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1988              		.loc 2 198 9 view .LVU602
 1989              		.syntax unified
 1990              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1991 001e 4FF05003 			mov r3, #80												
 1992 0022 83F31188 		msr basepri, r3											
 1993 0026 BFF36F8F 		isb														
 1994 002a BFF34F8F 		dsb														
 1995              	
 1996              	@ 0 "" 2
 1997              	.LVL174:
 1998              		.thumb
 1999              		.syntax unified
 2000              	.L148:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2001              		.loc 2 198 9 is_stmt 0 view .LVU603
 2002              	.LBE152:
 2003              	.LBE151:
1225:FreeRTOS/Source/queue.c **** 
 2004              		.loc 1 1225 5 is_stmt 1 discriminator 1 view .LVU604
1225:FreeRTOS/Source/queue.c **** 
 2005              		.loc 1 1225 5 discriminator 1 view .LVU605
 2006 002e FEE7     		b	.L148
 2007              	.L149:
1229:FreeRTOS/Source/queue.c **** 
 2008              		.loc 1 1229 45 discriminator 2 view .LVU606
1234:FreeRTOS/Source/queue.c **** 
 2009              		.loc 1 1234 5 discriminator 2 view .LVU607
 2010 0030 0368     		ldr	r3, [r0]
 2011 0032 DBB1     		cbz	r3, .L164
 2012              	.L151:
1234:FreeRTOS/Source/queue.c **** 
 2013              		.loc 1 1234 123 discriminator 8 view .LVU608
1250:FreeRTOS/Source/queue.c **** 
 2014              		.loc 1 1250 5 discriminator 8 view .LVU609
 2015 0034 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2016              	.LVL175:
1252:FreeRTOS/Source/queue.c ****     {
 2017              		.loc 1 1252 5 discriminator 8 view .LVU610
 2018              	.LBB153:
 2019              	.LBI153:
 210:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2020              		.loc 2 210 38 discriminator 8 view .LVU611
 2021              	.LBB154:
 212:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2022              		.loc 2 212 9 discriminator 8 view .LVU612
 214:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2023              		.loc 2 214 9 discriminator 8 view .LVU613
 2024              		.syntax unified
 2025              	@ 214 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2026 0038 EFF31186 			mrs r6, basepri											
 2027 003c 4FF05003 		mov r3, #80												
 2028 0040 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 93


 2029 0044 BFF36F8F 		isb														
 2030 0048 BFF34F8F 		dsb														
 2031              	
 2032              	@ 0 "" 2
 2033              	.LVL176:
 226:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 2034              		.loc 2 226 9 discriminator 8 view .LVU614
 226:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 2035              		.loc 2 226 9 is_stmt 0 discriminator 8 view .LVU615
 2036              		.thumb
 2037              		.syntax unified
 2038              	.LBE154:
 2039              	.LBE153:
 2040              	.LBB155:
1254:FreeRTOS/Source/queue.c **** 
 2041              		.loc 1 1254 9 is_stmt 1 discriminator 8 view .LVU616
1254:FreeRTOS/Source/queue.c **** 
 2042              		.loc 1 1254 27 is_stmt 0 discriminator 8 view .LVU617
 2043 004c A36B     		ldr	r3, [r4, #56]
 2044              	.LVL177:
1259:FreeRTOS/Source/queue.c ****         {
 2045              		.loc 1 1259 9 is_stmt 1 discriminator 8 view .LVU618
1259:FreeRTOS/Source/queue.c ****         {
 2046              		.loc 1 1259 40 is_stmt 0 discriminator 8 view .LVU619
 2047 004e E26B     		ldr	r2, [r4, #60]
1259:FreeRTOS/Source/queue.c ****         {
 2048              		.loc 1 1259 11 discriminator 8 view .LVU620
 2049 0050 9A42     		cmp	r2, r3
 2050 0052 35D9     		bls	.L157
 2051              	.LBB156:
1261:FreeRTOS/Source/queue.c **** 
 2052              		.loc 1 1261 13 is_stmt 1 view .LVU621
1261:FreeRTOS/Source/queue.c **** 
 2053              		.loc 1 1261 26 is_stmt 0 view .LVU622
 2054 0054 94F84570 		ldrb	r7, [r4, #69]	@ zero_extendqisi2
 2055 0058 7FB2     		sxtb	r7, r7
 2056              	.LVL178:
1263:FreeRTOS/Source/queue.c **** 
 2057              		.loc 1 1263 48 is_stmt 1 view .LVU623
1271:FreeRTOS/Source/queue.c **** 
 2058              		.loc 1 1271 13 view .LVU624
1271:FreeRTOS/Source/queue.c **** 
 2059              		.loc 1 1271 60 is_stmt 0 view .LVU625
 2060 005a 0133     		adds	r3, r3, #1
 2061              	.LVL179:
1271:FreeRTOS/Source/queue.c **** 
 2062              		.loc 1 1271 40 view .LVU626
 2063 005c A363     		str	r3, [r4, #56]
1275:FreeRTOS/Source/queue.c ****             {
 2064              		.loc 1 1275 13 is_stmt 1 view .LVU627
1275:FreeRTOS/Source/queue.c ****             {
 2065              		.loc 1 1275 15 is_stmt 0 view .LVU628
 2066 005e B7F1FF3F 		cmp	r7, #-1
 2067 0062 18D1     		bne	.L154
1330:FreeRTOS/Source/queue.c ****                     {
 2068              		.loc 1 1330 21 is_stmt 1 view .LVU629
1330:FreeRTOS/Source/queue.c ****                     {
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 94


 2069              		.loc 1 1330 25 is_stmt 0 view .LVU630
 2070 0064 636A     		ldr	r3, [r4, #36]
 2071              	.LVL180:
1330:FreeRTOS/Source/queue.c ****                     {
 2072              		.loc 1 1330 23 view .LVU631
 2073 0066 6BB9     		cbnz	r3, .L165
1364:FreeRTOS/Source/queue.c ****         }
 2074              		.loc 1 1364 21 view .LVU632
 2075 0068 0120     		movs	r0, #1
 2076 006a 2AE0     		b	.L153
 2077              	.LVL181:
 2078              	.L164:
1364:FreeRTOS/Source/queue.c ****         }
 2079              		.loc 1 1364 21 view .LVU633
 2080              	.LBE156:
 2081              	.LBE155:
1234:FreeRTOS/Source/queue.c **** 
 2082              		.loc 1 1234 5 discriminator 2 view .LVU634
 2083 006c 8368     		ldr	r3, [r0, #8]
 2084 006e 002B     		cmp	r3, #0
 2085 0070 E0D0     		beq	.L151
1234:FreeRTOS/Source/queue.c **** 
 2086              		.loc 1 1234 5 is_stmt 1 view .LVU635
 2087              	.LBB163:
 2088              	.LBI163:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2089              		.loc 2 194 34 view .LVU636
 2090              	.LBB164:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2091              		.loc 2 196 9 view .LVU637
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2092              		.loc 2 198 9 view .LVU638
 2093              		.syntax unified
 2094              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2095 0072 4FF05003 			mov r3, #80												
 2096 0076 83F31188 		msr basepri, r3											
 2097 007a BFF36F8F 		isb														
 2098 007e BFF34F8F 		dsb														
 2099              	
 2100              	@ 0 "" 2
 2101              	.LVL182:
 2102              		.thumb
 2103              		.syntax unified
 2104              	.L152:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2105              		.loc 2 198 9 is_stmt 0 view .LVU639
 2106              	.LBE164:
 2107              	.LBE163:
1234:FreeRTOS/Source/queue.c **** 
 2108              		.loc 1 1234 5 is_stmt 1 discriminator 3 view .LVU640
1234:FreeRTOS/Source/queue.c **** 
 2109              		.loc 1 1234 5 discriminator 3 view .LVU641
 2110 0082 FEE7     		b	.L152
 2111              	.LVL183:
 2112              	.L165:
 2113              	.LBB165:
 2114              	.LBB161:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 95


1332:FreeRTOS/Source/queue.c ****                         {
 2115              		.loc 1 1332 25 view .LVU642
1332:FreeRTOS/Source/queue.c ****                         {
 2116              		.loc 1 1332 29 is_stmt 0 view .LVU643
 2117 0084 04F12400 		add	r0, r4, #36
 2118 0088 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2119              	.LVL184:
1332:FreeRTOS/Source/queue.c ****                         {
 2120              		.loc 1 1332 27 view .LVU644
 2121 008c E0B1     		cbz	r0, .L159
1336:FreeRTOS/Source/queue.c ****                             {
 2122              		.loc 1 1336 29 is_stmt 1 view .LVU645
1336:FreeRTOS/Source/queue.c ****                             {
 2123              		.loc 1 1336 31 is_stmt 0 view .LVU646
 2124 008e EDB1     		cbz	r5, .L160
1338:FreeRTOS/Source/queue.c ****                             }
 2125              		.loc 1 1338 33 is_stmt 1 view .LVU647
1338:FreeRTOS/Source/queue.c ****                             }
 2126              		.loc 1 1338 60 is_stmt 0 view .LVU648
 2127 0090 0120     		movs	r0, #1
 2128 0092 2860     		str	r0, [r5]
 2129 0094 15E0     		b	.L153
 2130              	.LVL185:
 2131              	.L154:
 2132              	.LBB157:
1361:FreeRTOS/Source/queue.c ****             }
 2133              		.loc 1 1361 17 is_stmt 1 view .LVU649
 2134 0096 FFF7FEFF 		bl	uxTaskGetNumberOfTasks
 2135              	.LVL186:
1361:FreeRTOS/Source/queue.c ****             }
 2136              		.loc 1 1361 17 view .LVU650
 2137 009a 8742     		cmp	r7, r0
 2138 009c 18D2     		bcs	.L161
1361:FreeRTOS/Source/queue.c ****             }
 2139              		.loc 1 1361 17 discriminator 1 view .LVU651
 2140 009e 7F2F     		cmp	r7, #127
 2141 00a0 05D0     		beq	.L166
1361:FreeRTOS/Source/queue.c ****             }
 2142              		.loc 1 1361 17 discriminator 4 view .LVU652
1361:FreeRTOS/Source/queue.c ****             }
 2143              		.loc 1 1361 17 discriminator 4 view .LVU653
 2144 00a2 7B1C     		adds	r3, r7, #1
 2145 00a4 5BB2     		sxtb	r3, r3
 2146 00a6 84F84530 		strb	r3, [r4, #69]
 2147              	.LBE157:
1364:FreeRTOS/Source/queue.c ****         }
 2148              		.loc 1 1364 21 is_stmt 0 discriminator 4 view .LVU654
 2149 00aa 0120     		movs	r0, #1
 2150              	.LVL187:
1364:FreeRTOS/Source/queue.c ****         }
 2151              		.loc 1 1364 21 discriminator 4 view .LVU655
 2152 00ac 09E0     		b	.L153
 2153              	.LVL188:
 2154              	.L166:
 2155              	.LBB160:
1361:FreeRTOS/Source/queue.c ****             }
 2156              		.loc 1 1361 17 is_stmt 1 view .LVU656
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 96


 2157              	.LBB158:
 2158              	.LBI158:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2159              		.loc 2 194 34 view .LVU657
 2160              	.LBB159:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2161              		.loc 2 196 9 view .LVU658
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2162              		.loc 2 198 9 view .LVU659
 2163              		.syntax unified
 2164              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2165 00ae 4FF05003 			mov r3, #80												
 2166 00b2 83F31188 		msr basepri, r3											
 2167 00b6 BFF36F8F 		isb														
 2168 00ba BFF34F8F 		dsb														
 2169              	
 2170              	@ 0 "" 2
 2171              	.LVL189:
 2172              		.thumb
 2173              		.syntax unified
 2174              	.L156:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2175              		.loc 2 198 9 is_stmt 0 view .LVU660
 2176              	.LBE159:
 2177              	.LBE158:
1361:FreeRTOS/Source/queue.c ****             }
 2178              		.loc 1 1361 17 is_stmt 1 discriminator 6 view .LVU661
1361:FreeRTOS/Source/queue.c ****             }
 2179              		.loc 1 1361 17 discriminator 6 view .LVU662
 2180 00be FEE7     		b	.L156
 2181              	.LVL190:
 2182              	.L157:
1361:FreeRTOS/Source/queue.c ****             }
 2183              		.loc 1 1361 17 is_stmt 0 discriminator 6 view .LVU663
 2184              	.LBE160:
 2185              	.LBE161:
1369:FreeRTOS/Source/queue.c ****         }
 2186              		.loc 1 1369 21 view .LVU664
 2187 00c0 0020     		movs	r0, #0
 2188              	.LVL191:
 2189              	.L153:
1369:FreeRTOS/Source/queue.c ****         }
 2190              		.loc 1 1369 21 view .LVU665
 2191              	.LBE165:
1372:FreeRTOS/Source/queue.c **** 
 2192              		.loc 1 1372 5 is_stmt 1 view .LVU666
 2193              	.LBB166:
 2194              	.LBI166:
 230:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2195              		.loc 2 230 34 view .LVU667
 2196              	.LBB167:
 2197              		.loc 2 232 9 view .LVU668
 2198              		.syntax unified
 2199              	@ 232 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2200 00c2 86F31188 			msr basepri, r6	
 2201              	@ 0 "" 2
 2202              		.thumb
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 97


 2203              		.syntax unified
 2204              	.LBE167:
 2205              	.LBE166:
1374:FreeRTOS/Source/queue.c **** }
 2206              		.loc 1 1374 5 view .LVU669
1375:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2207              		.loc 1 1375 1 is_stmt 0 view .LVU670
 2208 00c6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2209              	.LVL192:
 2210              	.L159:
 2211              	.LBB168:
 2212              	.LBB162:
1364:FreeRTOS/Source/queue.c ****         }
 2213              		.loc 1 1364 21 view .LVU671
 2214 00c8 0120     		movs	r0, #1
 2215 00ca FAE7     		b	.L153
 2216              	.L160:
 2217 00cc 0120     		movs	r0, #1
 2218 00ce F8E7     		b	.L153
 2219              	.LVL193:
 2220              	.L161:
1364:FreeRTOS/Source/queue.c ****         }
 2221              		.loc 1 1364 21 view .LVU672
 2222 00d0 0120     		movs	r0, #1
 2223              	.LVL194:
1364:FreeRTOS/Source/queue.c ****         }
 2224              		.loc 1 1364 21 view .LVU673
 2225 00d2 F6E7     		b	.L153
 2226              	.LBE162:
 2227              	.LBE168:
 2228              		.cfi_endproc
 2229              	.LFE15:
 2231              		.section	.text.xQueueReceive,"ax",%progbits
 2232              		.align	1
 2233              		.global	xQueueReceive
 2234              		.syntax unified
 2235              		.thumb
 2236              		.thumb_func
 2238              	xQueueReceive:
 2239              	.LVL195:
 2240              	.LFB16:
1381:FreeRTOS/Source/queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
 2241              		.loc 1 1381 1 is_stmt 1 view -0
 2242              		.cfi_startproc
 2243              		@ args = 0, pretend = 0, frame = 16
 2244              		@ frame_needed = 0, uses_anonymous_args = 0
1381:FreeRTOS/Source/queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
 2245              		.loc 1 1381 1 is_stmt 0 view .LVU675
 2246 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2247              	.LCFI22:
 2248              		.cfi_def_cfa_offset 20
 2249              		.cfi_offset 4, -20
 2250              		.cfi_offset 5, -16
 2251              		.cfi_offset 6, -12
 2252              		.cfi_offset 7, -8
 2253              		.cfi_offset 14, -4
 2254 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 98


 2255              	.LCFI23:
 2256              		.cfi_def_cfa_offset 40
 2257 0004 0192     		str	r2, [sp, #4]
1382:FreeRTOS/Source/queue.c ****     TimeOut_t xTimeOut;
 2258              		.loc 1 1382 5 is_stmt 1 view .LVU676
 2259              	.LVL196:
1383:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 2260              		.loc 1 1383 5 view .LVU677
1384:FreeRTOS/Source/queue.c **** 
 2261              		.loc 1 1384 5 view .LVU678
1387:FreeRTOS/Source/queue.c **** 
 2262              		.loc 1 1387 5 view .LVU679
 2263 0006 90B1     		cbz	r0, .L187
 2264 0008 0F46     		mov	r7, r1
 2265 000a 0446     		mov	r4, r0
1387:FreeRTOS/Source/queue.c **** 
 2266              		.loc 1 1387 32 discriminator 2 view .LVU680
1391:FreeRTOS/Source/queue.c **** 
 2267              		.loc 1 1391 5 discriminator 2 view .LVU681
 2268 000c C1B1     		cbz	r1, .L188
 2269              	.L170:
1391:FreeRTOS/Source/queue.c **** 
 2270              		.loc 1 1391 103 discriminator 8 view .LVU682
1396:FreeRTOS/Source/queue.c ****     }
 2271              		.loc 1 1396 9 discriminator 8 view .LVU683
 2272 000e FFF7FEFF 		bl	xTaskGetSchedulerState
 2273              	.LVL197:
1396:FreeRTOS/Source/queue.c ****     }
 2274              		.loc 1 1396 9 is_stmt 0 discriminator 8 view .LVU684
 2275 0012 0646     		mov	r6, r0
 2276 0014 00BB     		cbnz	r0, .L185
1396:FreeRTOS/Source/queue.c ****     }
 2277              		.loc 1 1396 9 discriminator 2 view .LVU685
 2278 0016 019B     		ldr	r3, [sp, #4]
 2279 0018 002B     		cmp	r3, #0
 2280 001a 5ED0     		beq	.L174
1396:FreeRTOS/Source/queue.c ****     }
 2281              		.loc 1 1396 9 is_stmt 1 view .LVU686
 2282              	.LBB169:
 2283              	.LBI169:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2284              		.loc 2 194 34 view .LVU687
 2285              	.LBB170:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2286              		.loc 2 196 9 view .LVU688
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2287              		.loc 2 198 9 view .LVU689
 2288              		.syntax unified
 2289              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2290 001c 4FF05003 			mov r3, #80												
 2291 0020 83F31188 		msr basepri, r3											
 2292 0024 BFF36F8F 		isb														
 2293 0028 BFF34F8F 		dsb														
 2294              	
 2295              	@ 0 "" 2
 2296              	.LVL198:
 2297              		.thumb
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 99


 2298              		.syntax unified
 2299              	.L173:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2300              		.loc 2 198 9 is_stmt 0 view .LVU690
 2301              	.LBE170:
 2302              	.LBE169:
1396:FreeRTOS/Source/queue.c ****     }
 2303              		.loc 1 1396 9 is_stmt 1 discriminator 3 view .LVU691
1396:FreeRTOS/Source/queue.c ****     }
 2304              		.loc 1 1396 9 discriminator 3 view .LVU692
 2305 002c FEE7     		b	.L173
 2306              	.LVL199:
 2307              	.L187:
1387:FreeRTOS/Source/queue.c **** 
 2308              		.loc 1 1387 5 view .LVU693
 2309              	.LBB171:
 2310              	.LBI171:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2311              		.loc 2 194 34 view .LVU694
 2312              	.LBB172:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2313              		.loc 2 196 9 view .LVU695
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2314              		.loc 2 198 9 view .LVU696
 2315              		.syntax unified
 2316              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2317 002e 4FF05003 			mov r3, #80												
 2318 0032 83F31188 		msr basepri, r3											
 2319 0036 BFF36F8F 		isb														
 2320 003a BFF34F8F 		dsb														
 2321              	
 2322              	@ 0 "" 2
 2323              	.LVL200:
 2324              		.thumb
 2325              		.syntax unified
 2326              	.L169:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2327              		.loc 2 198 9 is_stmt 0 view .LVU697
 2328              	.LBE172:
 2329              	.LBE171:
1387:FreeRTOS/Source/queue.c **** 
 2330              		.loc 1 1387 5 is_stmt 1 discriminator 1 view .LVU698
1387:FreeRTOS/Source/queue.c **** 
 2331              		.loc 1 1387 5 discriminator 1 view .LVU699
 2332 003e FEE7     		b	.L169
 2333              	.L188:
1391:FreeRTOS/Source/queue.c **** 
 2334              		.loc 1 1391 5 is_stmt 0 discriminator 2 view .LVU700
 2335 0040 036C     		ldr	r3, [r0, #64]
 2336 0042 002B     		cmp	r3, #0
 2337 0044 E3D0     		beq	.L170
1391:FreeRTOS/Source/queue.c **** 
 2338              		.loc 1 1391 5 is_stmt 1 view .LVU701
 2339              	.LBB173:
 2340              	.LBI173:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2341              		.loc 2 194 34 view .LVU702
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 100


 2342              	.LBB174:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2343              		.loc 2 196 9 view .LVU703
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2344              		.loc 2 198 9 view .LVU704
 2345              		.syntax unified
 2346              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2347 0046 4FF05003 			mov r3, #80												
 2348 004a 83F31188 		msr basepri, r3											
 2349 004e BFF36F8F 		isb														
 2350 0052 BFF34F8F 		dsb														
 2351              	
 2352              	@ 0 "" 2
 2353              	.LVL201:
 2354              		.thumb
 2355              		.syntax unified
 2356              	.L171:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2357              		.loc 2 198 9 is_stmt 0 view .LVU705
 2358              	.LBE174:
 2359              	.LBE173:
1391:FreeRTOS/Source/queue.c **** 
 2360              		.loc 1 1391 5 is_stmt 1 discriminator 2 view .LVU706
1391:FreeRTOS/Source/queue.c **** 
 2361              		.loc 1 1391 5 discriminator 2 view .LVU707
 2362 0056 FEE7     		b	.L171
 2363              	.LVL202:
 2364              	.L185:
1391:FreeRTOS/Source/queue.c **** 
 2365              		.loc 1 1391 5 is_stmt 0 discriminator 2 view .LVU708
 2366 0058 0026     		movs	r6, #0
 2367 005a 3EE0     		b	.L174
 2368              	.LVL203:
 2369              	.L191:
 2370              	.LBB175:
1414:FreeRTOS/Source/queue.c ****                 traceQUEUE_RECEIVE( pxQueue );
 2371              		.loc 1 1414 17 is_stmt 1 view .LVU709
 2372 005c 3946     		mov	r1, r7
 2373 005e 2046     		mov	r0, r4
 2374 0060 FFF7FEFF 		bl	prvCopyDataFromQueue
 2375              	.LVL204:
1415:FreeRTOS/Source/queue.c ****                 pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2376              		.loc 1 1415 46 view .LVU710
1416:FreeRTOS/Source/queue.c **** 
 2377              		.loc 1 1416 17 view .LVU711
1416:FreeRTOS/Source/queue.c **** 
 2378              		.loc 1 1416 64 is_stmt 0 view .LVU712
 2379 0064 013D     		subs	r5, r5, #1
 2380              	.LVL205:
1416:FreeRTOS/Source/queue.c **** 
 2381              		.loc 1 1416 44 view .LVU713
 2382 0066 A563     		str	r5, [r4, #56]
1421:FreeRTOS/Source/queue.c ****                 {
 2383              		.loc 1 1421 17 is_stmt 1 view .LVU714
1421:FreeRTOS/Source/queue.c ****                 {
 2384              		.loc 1 1421 21 is_stmt 0 view .LVU715
 2385 0068 2369     		ldr	r3, [r4, #16]
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 101


1421:FreeRTOS/Source/queue.c ****                 {
 2386              		.loc 1 1421 19 view .LVU716
 2387 006a 23B9     		cbnz	r3, .L189
 2388              	.L176:
1434:FreeRTOS/Source/queue.c ****                 }
 2389              		.loc 1 1434 45 is_stmt 1 view .LVU717
1437:FreeRTOS/Source/queue.c ****                 return pdPASS;
 2390              		.loc 1 1437 17 view .LVU718
 2391 006c FFF7FEFF 		bl	vPortExitCritical
 2392              	.LVL206:
1438:FreeRTOS/Source/queue.c ****             }
 2393              		.loc 1 1438 17 view .LVU719
1438:FreeRTOS/Source/queue.c ****             }
 2394              		.loc 1 1438 24 is_stmt 0 view .LVU720
 2395 0070 0120     		movs	r0, #1
 2396              	.LVL207:
 2397              	.L167:
1438:FreeRTOS/Source/queue.c ****             }
 2398              		.loc 1 1438 24 view .LVU721
 2399              	.LBE175:
1518:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2400              		.loc 1 1518 1 view .LVU722
 2401 0072 05B0     		add	sp, sp, #20
 2402              	.LCFI24:
 2403              		.cfi_remember_state
 2404              		.cfi_def_cfa_offset 20
 2405              		@ sp needed
 2406 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 2407              	.LVL208:
 2408              	.L189:
 2409              	.LCFI25:
 2410              		.cfi_restore_state
 2411              	.LBB176:
1423:FreeRTOS/Source/queue.c ****                     {
 2412              		.loc 1 1423 21 is_stmt 1 view .LVU723
1423:FreeRTOS/Source/queue.c ****                     {
 2413              		.loc 1 1423 25 is_stmt 0 view .LVU724
 2414 0076 04F11000 		add	r0, r4, #16
 2415 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 2416              	.LVL209:
1423:FreeRTOS/Source/queue.c ****                     {
 2417              		.loc 1 1423 23 view .LVU725
 2418 007e 0028     		cmp	r0, #0
 2419 0080 F4D0     		beq	.L176
1425:FreeRTOS/Source/queue.c ****                     }
 2420              		.loc 1 1425 25 is_stmt 1 view .LVU726
 2421 0082 4FF0E023 		mov	r3, #-536813568
 2422 0086 4FF08052 		mov	r2, #268435456
 2423 008a C3F8042D 		str	r2, [r3, #3332]
1425:FreeRTOS/Source/queue.c ****                     }
 2424              		.loc 1 1425 25 view .LVU727
 2425              		.syntax unified
 2426              	@ 1425 "FreeRTOS/Source/queue.c" 1
 2427 008e BFF34F8F 		dsb
 2428              	@ 0 "" 2
1425:FreeRTOS/Source/queue.c ****                     }
 2429              		.loc 1 1425 25 view .LVU728
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 102


 2430              	@ 1425 "FreeRTOS/Source/queue.c" 1
 2431 0092 BFF36F8F 		isb
 2432              	@ 0 "" 2
1425:FreeRTOS/Source/queue.c ****                     }
 2433              		.loc 1 1425 57 view .LVU729
 2434              		.thumb
 2435              		.syntax unified
 2436 0096 E9E7     		b	.L176
 2437              	.LVL210:
 2438              	.L192:
1446:FreeRTOS/Source/queue.c ****                     traceQUEUE_RECEIVE_FAILED( pxQueue );
 2439              		.loc 1 1446 21 view .LVU730
 2440 0098 FFF7FEFF 		bl	vPortExitCritical
 2441              	.LVL211:
1447:FreeRTOS/Source/queue.c ****                     return errQUEUE_EMPTY;
 2442              		.loc 1 1447 57 view .LVU731
1448:FreeRTOS/Source/queue.c ****                 }
 2443              		.loc 1 1448 21 view .LVU732
1448:FreeRTOS/Source/queue.c ****                 }
 2444              		.loc 1 1448 28 is_stmt 0 view .LVU733
 2445 009c 0020     		movs	r0, #0
 2446 009e E8E7     		b	.L167
 2447              	.L193:
1454:FreeRTOS/Source/queue.c ****                     xEntryTimeSet = pdTRUE;
 2448              		.loc 1 1454 21 is_stmt 1 view .LVU734
 2449 00a0 02A8     		add	r0, sp, #8
 2450 00a2 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2451              	.LVL212:
1455:FreeRTOS/Source/queue.c ****                 }
 2452              		.loc 1 1455 21 view .LVU735
1455:FreeRTOS/Source/queue.c ****                 }
 2453              		.loc 1 1455 35 is_stmt 0 view .LVU736
 2454 00a6 0126     		movs	r6, #1
 2455 00a8 21E0     		b	.L179
 2456              	.LVL213:
 2457              	.L194:
1455:FreeRTOS/Source/queue.c ****                 }
 2458              		.loc 1 1455 35 view .LVU737
 2459              	.LBE176:
1470:FreeRTOS/Source/queue.c **** 
 2460              		.loc 1 1470 9 is_stmt 1 discriminator 1 view .LVU738
 2461 00aa 0023     		movs	r3, #0
 2462 00ac 84F84430 		strb	r3, [r4, #68]
 2463 00b0 29E0     		b	.L180
 2464              	.L195:
1470:FreeRTOS/Source/queue.c **** 
 2465              		.loc 1 1470 9 discriminator 4 view .LVU739
 2466 00b2 0023     		movs	r3, #0
 2467 00b4 84F84530 		strb	r3, [r4, #69]
 2468 00b8 2BE0     		b	.L181
 2469              	.L183:
1496:FreeRTOS/Source/queue.c ****                 ( void ) xTaskResumeAll();
 2470              		.loc 1 1496 17 view .LVU740
 2471 00ba 2046     		mov	r0, r4
 2472 00bc FFF7FEFF 		bl	prvUnlockQueue
 2473              	.LVL214:
1497:FreeRTOS/Source/queue.c ****             }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 103


 2474              		.loc 1 1497 17 view .LVU741
1497:FreeRTOS/Source/queue.c ****             }
 2475              		.loc 1 1497 26 is_stmt 0 view .LVU742
 2476 00c0 FFF7FEFF 		bl	xTaskResumeAll
 2477              	.LVL215:
 2478 00c4 09E0     		b	.L174
 2479              	.L182:
1504:FreeRTOS/Source/queue.c ****             ( void ) xTaskResumeAll();
 2480              		.loc 1 1504 13 is_stmt 1 view .LVU743
 2481 00c6 2046     		mov	r0, r4
 2482 00c8 FFF7FEFF 		bl	prvUnlockQueue
 2483              	.LVL216:
1505:FreeRTOS/Source/queue.c **** 
 2484              		.loc 1 1505 13 view .LVU744
1505:FreeRTOS/Source/queue.c **** 
 2485              		.loc 1 1505 22 is_stmt 0 view .LVU745
 2486 00cc FFF7FEFF 		bl	xTaskResumeAll
 2487              	.LVL217:
1507:FreeRTOS/Source/queue.c ****             {
 2488              		.loc 1 1507 13 is_stmt 1 view .LVU746
1507:FreeRTOS/Source/queue.c ****             {
 2489              		.loc 1 1507 17 is_stmt 0 view .LVU747
 2490 00d0 2046     		mov	r0, r4
 2491 00d2 FFF7FEFF 		bl	prvIsQueueEmpty
 2492              	.LVL218:
1507:FreeRTOS/Source/queue.c ****             {
 2493              		.loc 1 1507 15 view .LVU748
 2494 00d6 0028     		cmp	r0, #0
 2495 00d8 3FD1     		bne	.L190
 2496              	.LVL219:
 2497              	.L174:
1396:FreeRTOS/Source/queue.c ****     }
 2498              		.loc 1 1396 110 is_stmt 1 discriminator 8 view .LVU749
1403:FreeRTOS/Source/queue.c ****     {
 2499              		.loc 1 1403 5 discriminator 8 view .LVU750
1405:FreeRTOS/Source/queue.c ****         {
 2500              		.loc 1 1405 9 discriminator 8 view .LVU751
 2501 00da FFF7FEFF 		bl	vPortEnterCritical
 2502              	.LVL220:
 2503              	.LBB177:
1407:FreeRTOS/Source/queue.c **** 
 2504              		.loc 1 1407 13 discriminator 8 view .LVU752
1407:FreeRTOS/Source/queue.c **** 
 2505              		.loc 1 1407 31 is_stmt 0 discriminator 8 view .LVU753
 2506 00de A56B     		ldr	r5, [r4, #56]
 2507              	.LVL221:
1411:FreeRTOS/Source/queue.c ****             {
 2508              		.loc 1 1411 13 is_stmt 1 discriminator 8 view .LVU754
1411:FreeRTOS/Source/queue.c ****             {
 2509              		.loc 1 1411 15 is_stmt 0 discriminator 8 view .LVU755
 2510 00e0 002D     		cmp	r5, #0
 2511 00e2 BBD1     		bne	.L191
1442:FreeRTOS/Source/queue.c ****                 {
 2512              		.loc 1 1442 17 is_stmt 1 view .LVU756
1442:FreeRTOS/Source/queue.c ****                 {
 2513              		.loc 1 1442 34 is_stmt 0 view .LVU757
 2514 00e4 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 104


1442:FreeRTOS/Source/queue.c ****                 {
 2515              		.loc 1 1442 19 view .LVU758
 2516 00e6 002B     		cmp	r3, #0
 2517 00e8 D6D0     		beq	.L192
1450:FreeRTOS/Source/queue.c ****                 {
 2518              		.loc 1 1450 22 is_stmt 1 view .LVU759
1450:FreeRTOS/Source/queue.c ****                 {
 2519              		.loc 1 1450 24 is_stmt 0 view .LVU760
 2520 00ea 002E     		cmp	r6, #0
 2521 00ec D8D0     		beq	.L193
 2522              	.LVL222:
 2523              	.L179:
1460:FreeRTOS/Source/queue.c ****                 }
 2524              		.loc 1 1460 45 is_stmt 1 view .LVU761
 2525              	.LBE177:
1464:FreeRTOS/Source/queue.c **** 
 2526              		.loc 1 1464 9 view .LVU762
 2527 00ee FFF7FEFF 		bl	vPortExitCritical
 2528              	.LVL223:
1469:FreeRTOS/Source/queue.c ****         prvLockQueue( pxQueue );
 2529              		.loc 1 1469 9 view .LVU763
 2530 00f2 FFF7FEFF 		bl	vTaskSuspendAll
 2531              	.LVL224:
1470:FreeRTOS/Source/queue.c **** 
 2532              		.loc 1 1470 9 view .LVU764
 2533 00f6 FFF7FEFF 		bl	vPortEnterCritical
 2534              	.LVL225:
1470:FreeRTOS/Source/queue.c **** 
 2535              		.loc 1 1470 9 view .LVU765
 2536 00fa 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2537 00fe 5BB2     		sxtb	r3, r3
 2538 0100 B3F1FF3F 		cmp	r3, #-1
 2539 0104 D1D0     		beq	.L194
 2540              	.L180:
1470:FreeRTOS/Source/queue.c **** 
 2541              		.loc 1 1470 9 discriminator 3 view .LVU766
 2542 0106 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2543 010a 5BB2     		sxtb	r3, r3
 2544 010c B3F1FF3F 		cmp	r3, #-1
 2545 0110 CFD0     		beq	.L195
 2546              	.L181:
1470:FreeRTOS/Source/queue.c **** 
 2547              		.loc 1 1470 9 discriminator 6 view .LVU767
 2548 0112 FFF7FEFF 		bl	vPortExitCritical
 2549              	.LVL226:
1473:FreeRTOS/Source/queue.c ****         {
 2550              		.loc 1 1473 9 discriminator 6 view .LVU768
1473:FreeRTOS/Source/queue.c ****         {
 2551              		.loc 1 1473 13 is_stmt 0 discriminator 6 view .LVU769
 2552 0116 01A9     		add	r1, sp, #4
 2553 0118 02A8     		add	r0, sp, #8
 2554 011a FFF7FEFF 		bl	xTaskCheckForTimeOut
 2555              	.LVL227:
1473:FreeRTOS/Source/queue.c ****         {
 2556              		.loc 1 1473 11 discriminator 6 view .LVU770
 2557 011e 0028     		cmp	r0, #0
 2558 0120 D1D1     		bne	.L182
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 105


1477:FreeRTOS/Source/queue.c ****             {
 2559              		.loc 1 1477 13 is_stmt 1 view .LVU771
1477:FreeRTOS/Source/queue.c ****             {
 2560              		.loc 1 1477 17 is_stmt 0 view .LVU772
 2561 0122 2046     		mov	r0, r4
 2562 0124 FFF7FEFF 		bl	prvIsQueueEmpty
 2563              	.LVL228:
1477:FreeRTOS/Source/queue.c ****             {
 2564              		.loc 1 1477 15 view .LVU773
 2565 0128 0028     		cmp	r0, #0
 2566 012a C6D0     		beq	.L183
1479:FreeRTOS/Source/queue.c ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 2567              		.loc 1 1479 58 is_stmt 1 view .LVU774
1480:FreeRTOS/Source/queue.c ****                 prvUnlockQueue( pxQueue );
 2568              		.loc 1 1480 17 view .LVU775
 2569 012c 0199     		ldr	r1, [sp, #4]
 2570 012e 04F12400 		add	r0, r4, #36
 2571 0132 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2572              	.LVL229:
1481:FreeRTOS/Source/queue.c **** 
 2573              		.loc 1 1481 17 view .LVU776
 2574 0136 2046     		mov	r0, r4
 2575 0138 FFF7FEFF 		bl	prvUnlockQueue
 2576              	.LVL230:
1483:FreeRTOS/Source/queue.c ****                 {
 2577              		.loc 1 1483 17 view .LVU777
1483:FreeRTOS/Source/queue.c ****                 {
 2578              		.loc 1 1483 21 is_stmt 0 view .LVU778
 2579 013c FFF7FEFF 		bl	xTaskResumeAll
 2580              	.LVL231:
1483:FreeRTOS/Source/queue.c ****                 {
 2581              		.loc 1 1483 19 view .LVU779
 2582 0140 0028     		cmp	r0, #0
 2583 0142 CAD1     		bne	.L174
1485:FreeRTOS/Source/queue.c ****                 }
 2584              		.loc 1 1485 21 is_stmt 1 view .LVU780
 2585 0144 4FF0E023 		mov	r3, #-536813568
 2586 0148 4FF08052 		mov	r2, #268435456
 2587 014c C3F8042D 		str	r2, [r3, #3332]
1485:FreeRTOS/Source/queue.c ****                 }
 2588              		.loc 1 1485 21 view .LVU781
 2589              		.syntax unified
 2590              	@ 1485 "FreeRTOS/Source/queue.c" 1
 2591 0150 BFF34F8F 		dsb
 2592              	@ 0 "" 2
1485:FreeRTOS/Source/queue.c ****                 }
 2593              		.loc 1 1485 21 view .LVU782
 2594              	@ 1485 "FreeRTOS/Source/queue.c" 1
 2595 0154 BFF36F8F 		isb
 2596              	@ 0 "" 2
1485:FreeRTOS/Source/queue.c ****                 }
 2597              		.loc 1 1485 43 view .LVU783
 2598              		.thumb
 2599              		.syntax unified
 2600 0158 BFE7     		b	.L174
 2601              	.L190:
1510:FreeRTOS/Source/queue.c ****             }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 106


 2602              		.loc 1 1510 24 is_stmt 0 view .LVU784
 2603 015a 0020     		movs	r0, #0
 2604 015c 89E7     		b	.L167
 2605              		.cfi_endproc
 2606              	.LFE16:
 2608              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 2609              		.align	1
 2610              		.global	xQueueSemaphoreTake
 2611              		.syntax unified
 2612              		.thumb
 2613              		.thumb_func
 2615              	xQueueSemaphoreTake:
 2616              	.LVL232:
 2617              	.LFB17:
1523:FreeRTOS/Source/queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
 2618              		.loc 1 1523 1 is_stmt 1 view -0
 2619              		.cfi_startproc
 2620              		@ args = 0, pretend = 0, frame = 16
 2621              		@ frame_needed = 0, uses_anonymous_args = 0
1523:FreeRTOS/Source/queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
 2622              		.loc 1 1523 1 is_stmt 0 view .LVU786
 2623 0000 70B5     		push	{r4, r5, r6, lr}
 2624              	.LCFI26:
 2625              		.cfi_def_cfa_offset 16
 2626              		.cfi_offset 4, -16
 2627              		.cfi_offset 5, -12
 2628              		.cfi_offset 6, -8
 2629              		.cfi_offset 14, -4
 2630 0002 84B0     		sub	sp, sp, #16
 2631              	.LCFI27:
 2632              		.cfi_def_cfa_offset 32
 2633 0004 0191     		str	r1, [sp, #4]
1524:FreeRTOS/Source/queue.c ****     TimeOut_t xTimeOut;
 2634              		.loc 1 1524 5 is_stmt 1 view .LVU787
 2635              	.LVL233:
1525:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 2636              		.loc 1 1525 5 view .LVU788
1526:FreeRTOS/Source/queue.c **** 
 2637              		.loc 1 1526 5 view .LVU789
1529:FreeRTOS/Source/queue.c ****     #endif
 2638              		.loc 1 1529 9 view .LVU790
1533:FreeRTOS/Source/queue.c **** 
 2639              		.loc 1 1533 5 view .LVU791
 2640 0006 58B1     		cbz	r0, .L220
 2641 0008 0446     		mov	r4, r0
1533:FreeRTOS/Source/queue.c **** 
 2642              		.loc 1 1533 32 discriminator 2 view .LVU792
1537:FreeRTOS/Source/queue.c **** 
 2643              		.loc 1 1537 5 discriminator 2 view .LVU793
 2644 000a 036C     		ldr	r3, [r0, #64]
 2645 000c 8BB1     		cbz	r3, .L199
1537:FreeRTOS/Source/queue.c **** 
 2646              		.loc 1 1537 5 view .LVU794
 2647              	.LBB178:
 2648              	.LBI178:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2649              		.loc 2 194 34 view .LVU795
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 107


 2650              	.LBB179:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2651              		.loc 2 196 9 view .LVU796
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2652              		.loc 2 198 9 view .LVU797
 2653              		.syntax unified
 2654              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2655 000e 4FF05003 			mov r3, #80												
 2656 0012 83F31188 		msr basepri, r3											
 2657 0016 BFF36F8F 		isb														
 2658 001a BFF34F8F 		dsb														
 2659              	
 2660              	@ 0 "" 2
 2661              	.LVL234:
 2662              		.thumb
 2663              		.syntax unified
 2664              	.L200:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2665              		.loc 2 198 9 is_stmt 0 view .LVU798
 2666              	.LBE179:
 2667              	.LBE178:
1537:FreeRTOS/Source/queue.c **** 
 2668              		.loc 1 1537 5 is_stmt 1 discriminator 2 view .LVU799
1537:FreeRTOS/Source/queue.c **** 
 2669              		.loc 1 1537 5 discriminator 2 view .LVU800
 2670 001e FEE7     		b	.L200
 2671              	.L220:
1533:FreeRTOS/Source/queue.c **** 
 2672              		.loc 1 1533 5 view .LVU801
 2673              	.LBB180:
 2674              	.LBI180:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2675              		.loc 2 194 34 view .LVU802
 2676              	.LBB181:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2677              		.loc 2 196 9 view .LVU803
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2678              		.loc 2 198 9 view .LVU804
 2679              		.syntax unified
 2680              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2681 0020 4FF05003 			mov r3, #80												
 2682 0024 83F31188 		msr basepri, r3											
 2683 0028 BFF36F8F 		isb														
 2684 002c BFF34F8F 		dsb														
 2685              	
 2686              	@ 0 "" 2
 2687              	.LVL235:
 2688              		.thumb
 2689              		.syntax unified
 2690              	.L198:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2691              		.loc 2 198 9 is_stmt 0 view .LVU805
 2692              	.LBE181:
 2693              	.LBE180:
1533:FreeRTOS/Source/queue.c **** 
 2694              		.loc 1 1533 5 is_stmt 1 discriminator 1 view .LVU806
1533:FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 108


 2695              		.loc 1 1533 5 discriminator 1 view .LVU807
 2696 0030 FEE7     		b	.L198
 2697              	.L199:
1537:FreeRTOS/Source/queue.c **** 
 2698              		.loc 1 1537 45 discriminator 2 view .LVU808
1542:FreeRTOS/Source/queue.c ****     }
 2699              		.loc 1 1542 9 discriminator 2 view .LVU809
 2700 0032 FFF7FEFF 		bl	xTaskGetSchedulerState
 2701              	.LVL236:
1542:FreeRTOS/Source/queue.c ****     }
 2702              		.loc 1 1542 9 is_stmt 0 discriminator 2 view .LVU810
 2703 0036 0546     		mov	r5, r0
 2704 0038 50B9     		cbnz	r0, .L217
 2705 003a 019B     		ldr	r3, [sp, #4]
 2706 003c 5BB1     		cbz	r3, .L218
1542:FreeRTOS/Source/queue.c ****     }
 2707              		.loc 1 1542 9 is_stmt 1 view .LVU811
 2708              	.LBB182:
 2709              	.LBI182:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2710              		.loc 2 194 34 view .LVU812
 2711              	.LBB183:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2712              		.loc 2 196 9 view .LVU813
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2713              		.loc 2 198 9 view .LVU814
 2714              		.syntax unified
 2715              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2716 003e 4FF05003 			mov r3, #80												
 2717 0042 83F31188 		msr basepri, r3											
 2718 0046 BFF36F8F 		isb														
 2719 004a BFF34F8F 		dsb														
 2720              	
 2721              	@ 0 "" 2
 2722              	.LVL237:
 2723              		.thumb
 2724              		.syntax unified
 2725              	.L202:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2726              		.loc 2 198 9 is_stmt 0 view .LVU815
 2727              	.LBE183:
 2728              	.LBE182:
1542:FreeRTOS/Source/queue.c ****     }
 2729              		.loc 1 1542 9 is_stmt 1 discriminator 3 view .LVU816
1542:FreeRTOS/Source/queue.c ****     }
 2730              		.loc 1 1542 9 discriminator 3 view .LVU817
 2731 004e FEE7     		b	.L202
 2732              	.L217:
 2733 0050 0026     		movs	r6, #0
 2734 0052 3546     		mov	r5, r6
 2735 0054 4BE0     		b	.L203
 2736              	.L218:
 2737 0056 0646     		mov	r6, r0
 2738 0058 49E0     		b	.L203
 2739              	.LVL238:
 2740              	.L224:
 2741              	.LBB184:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 109


1561:FreeRTOS/Source/queue.c **** 
 2742              		.loc 1 1561 46 view .LVU818
1565:FreeRTOS/Source/queue.c **** 
 2743              		.loc 1 1565 17 view .LVU819
1565:FreeRTOS/Source/queue.c **** 
 2744              		.loc 1 1565 63 is_stmt 0 view .LVU820
 2745 005a 013B     		subs	r3, r3, #1
 2746              	.LVL239:
1565:FreeRTOS/Source/queue.c **** 
 2747              		.loc 1 1565 44 view .LVU821
 2748 005c A363     		str	r3, [r4, #56]
1569:FreeRTOS/Source/queue.c ****                     {
 2749              		.loc 1 1569 21 is_stmt 1 view .LVU822
1569:FreeRTOS/Source/queue.c ****                     {
 2750              		.loc 1 1569 32 is_stmt 0 view .LVU823
 2751 005e 2368     		ldr	r3, [r4]
 2752              	.LVL240:
1569:FreeRTOS/Source/queue.c ****                     {
 2753              		.loc 1 1569 23 view .LVU824
 2754 0060 33B1     		cbz	r3, .L221
 2755              	.LVL241:
 2756              	.L205:
1577:FreeRTOS/Source/queue.c ****                     }
 2757              		.loc 1 1577 49 is_stmt 1 view .LVU825
1584:FreeRTOS/Source/queue.c ****                 {
 2758              		.loc 1 1584 17 view .LVU826
1584:FreeRTOS/Source/queue.c ****                 {
 2759              		.loc 1 1584 21 is_stmt 0 view .LVU827
 2760 0062 2369     		ldr	r3, [r4, #16]
1584:FreeRTOS/Source/queue.c ****                 {
 2761              		.loc 1 1584 19 view .LVU828
 2762 0064 43B9     		cbnz	r3, .L222
 2763              	.L206:
1597:FreeRTOS/Source/queue.c ****                 }
 2764              		.loc 1 1597 45 is_stmt 1 view .LVU829
1600:FreeRTOS/Source/queue.c ****                 return pdPASS;
 2765              		.loc 1 1600 17 view .LVU830
 2766 0066 FFF7FEFF 		bl	vPortExitCritical
 2767              	.LVL242:
1601:FreeRTOS/Source/queue.c ****             }
 2768              		.loc 1 1601 17 view .LVU831
1601:FreeRTOS/Source/queue.c ****             }
 2769              		.loc 1 1601 24 is_stmt 0 view .LVU832
 2770 006a 0120     		movs	r0, #1
 2771              	.L196:
1601:FreeRTOS/Source/queue.c ****             }
 2772              		.loc 1 1601 24 view .LVU833
 2773              	.LBE184:
1728:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2774              		.loc 1 1728 1 view .LVU834
 2775 006c 04B0     		add	sp, sp, #16
 2776              	.LCFI28:
 2777              		.cfi_remember_state
 2778              		.cfi_def_cfa_offset 16
 2779              		@ sp needed
 2780 006e 70BD     		pop	{r4, r5, r6, pc}
 2781              	.LVL243:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 110


 2782              	.L221:
 2783              	.LCFI29:
 2784              		.cfi_restore_state
 2785              	.LBB185:
1573:FreeRTOS/Source/queue.c ****                     }
 2786              		.loc 1 1573 25 is_stmt 1 view .LVU835
1573:FreeRTOS/Source/queue.c ****                     }
 2787              		.loc 1 1573 62 is_stmt 0 view .LVU836
 2788 0070 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2789              	.LVL244:
1573:FreeRTOS/Source/queue.c ****                     }
 2790              		.loc 1 1573 60 view .LVU837
 2791 0074 A060     		str	r0, [r4, #8]
 2792 0076 F4E7     		b	.L205
 2793              	.L222:
1586:FreeRTOS/Source/queue.c ****                     {
 2794              		.loc 1 1586 21 is_stmt 1 view .LVU838
1586:FreeRTOS/Source/queue.c ****                     {
 2795              		.loc 1 1586 25 is_stmt 0 view .LVU839
 2796 0078 04F11000 		add	r0, r4, #16
 2797 007c FFF7FEFF 		bl	xTaskRemoveFromEventList
 2798              	.LVL245:
1586:FreeRTOS/Source/queue.c ****                     {
 2799              		.loc 1 1586 23 view .LVU840
 2800 0080 0028     		cmp	r0, #0
 2801 0082 F0D0     		beq	.L206
1588:FreeRTOS/Source/queue.c ****                     }
 2802              		.loc 1 1588 25 is_stmt 1 view .LVU841
 2803 0084 4FF0E023 		mov	r3, #-536813568
 2804 0088 4FF08052 		mov	r2, #268435456
 2805 008c C3F8042D 		str	r2, [r3, #3332]
1588:FreeRTOS/Source/queue.c ****                     }
 2806              		.loc 1 1588 25 view .LVU842
 2807              		.syntax unified
 2808              	@ 1588 "FreeRTOS/Source/queue.c" 1
 2809 0090 BFF34F8F 		dsb
 2810              	@ 0 "" 2
1588:FreeRTOS/Source/queue.c ****                     }
 2811              		.loc 1 1588 25 view .LVU843
 2812              	@ 1588 "FreeRTOS/Source/queue.c" 1
 2813 0094 BFF36F8F 		isb
 2814              	@ 0 "" 2
1588:FreeRTOS/Source/queue.c ****                     }
 2815              		.loc 1 1588 57 view .LVU844
 2816              		.thumb
 2817              		.syntax unified
 2818 0098 E5E7     		b	.L206
 2819              	.L225:
1609:FreeRTOS/Source/queue.c ****                     traceQUEUE_RECEIVE_FAILED( pxQueue );
 2820              		.loc 1 1609 21 view .LVU845
 2821 009a FFF7FEFF 		bl	vPortExitCritical
 2822              	.LVL246:
1610:FreeRTOS/Source/queue.c ****                     return errQUEUE_EMPTY;
 2823              		.loc 1 1610 57 view .LVU846
1611:FreeRTOS/Source/queue.c ****                 }
 2824              		.loc 1 1611 21 view .LVU847
1611:FreeRTOS/Source/queue.c ****                 }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 111


 2825              		.loc 1 1611 28 is_stmt 0 view .LVU848
 2826 009e 0020     		movs	r0, #0
 2827 00a0 E4E7     		b	.L196
 2828              	.L226:
1617:FreeRTOS/Source/queue.c ****                     xEntryTimeSet = pdTRUE;
 2829              		.loc 1 1617 21 is_stmt 1 view .LVU849
 2830 00a2 02A8     		add	r0, sp, #8
 2831 00a4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2832              	.LVL247:
1618:FreeRTOS/Source/queue.c ****                 }
 2833              		.loc 1 1618 21 view .LVU850
1618:FreeRTOS/Source/queue.c ****                 }
 2834              		.loc 1 1618 35 is_stmt 0 view .LVU851
 2835 00a8 0125     		movs	r5, #1
 2836 00aa 2AE0     		b	.L209
 2837              	.LVL248:
 2838              	.L227:
1618:FreeRTOS/Source/queue.c ****                 }
 2839              		.loc 1 1618 35 view .LVU852
 2840              	.LBE185:
1633:FreeRTOS/Source/queue.c **** 
 2841              		.loc 1 1633 9 is_stmt 1 discriminator 1 view .LVU853
 2842 00ac 0023     		movs	r3, #0
 2843 00ae 84F84430 		strb	r3, [r4, #68]
 2844 00b2 32E0     		b	.L210
 2845              	.L228:
1633:FreeRTOS/Source/queue.c **** 
 2846              		.loc 1 1633 9 discriminator 4 view .LVU854
 2847 00b4 0023     		movs	r3, #0
 2848 00b6 84F84530 		strb	r3, [r4, #69]
 2849 00ba 34E0     		b	.L211
 2850              	.L229:
1650:FreeRTOS/Source/queue.c ****                         {
 2851              		.loc 1 1650 25 view .LVU855
 2852 00bc FFF7FEFF 		bl	vPortEnterCritical
 2853              	.LVL249:
1652:FreeRTOS/Source/queue.c ****                         }
 2854              		.loc 1 1652 29 view .LVU856
1652:FreeRTOS/Source/queue.c ****                         }
 2855              		.loc 1 1652 52 is_stmt 0 view .LVU857
 2856 00c0 A068     		ldr	r0, [r4, #8]
 2857 00c2 FFF7FEFF 		bl	xTaskPriorityInherit
 2858              	.LVL250:
 2859 00c6 0646     		mov	r6, r0
 2860              	.LVL251:
1654:FreeRTOS/Source/queue.c ****                     }
 2861              		.loc 1 1654 25 is_stmt 1 view .LVU858
 2862 00c8 FFF7FEFF 		bl	vPortExitCritical
 2863              	.LVL252:
1654:FreeRTOS/Source/queue.c ****                     }
 2864              		.loc 1 1654 25 is_stmt 0 view .LVU859
 2865 00cc 3BE0     		b	.L214
 2866              	.L213:
1679:FreeRTOS/Source/queue.c ****                 ( void ) xTaskResumeAll();
 2867              		.loc 1 1679 17 is_stmt 1 view .LVU860
 2868 00ce 2046     		mov	r0, r4
 2869 00d0 FFF7FEFF 		bl	prvUnlockQueue
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 112


 2870              	.LVL253:
1680:FreeRTOS/Source/queue.c ****             }
 2871              		.loc 1 1680 17 view .LVU861
1680:FreeRTOS/Source/queue.c ****             }
 2872              		.loc 1 1680 26 is_stmt 0 view .LVU862
 2873 00d4 FFF7FEFF 		bl	xTaskResumeAll
 2874              	.LVL254:
 2875 00d8 09E0     		b	.L203
 2876              	.L212:
1686:FreeRTOS/Source/queue.c ****             ( void ) xTaskResumeAll();
 2877              		.loc 1 1686 13 is_stmt 1 view .LVU863
 2878 00da 2046     		mov	r0, r4
 2879 00dc FFF7FEFF 		bl	prvUnlockQueue
 2880              	.LVL255:
1687:FreeRTOS/Source/queue.c **** 
 2881              		.loc 1 1687 13 view .LVU864
1687:FreeRTOS/Source/queue.c **** 
 2882              		.loc 1 1687 22 is_stmt 0 view .LVU865
 2883 00e0 FFF7FEFF 		bl	xTaskResumeAll
 2884              	.LVL256:
1693:FreeRTOS/Source/queue.c ****             {
 2885              		.loc 1 1693 13 is_stmt 1 view .LVU866
1693:FreeRTOS/Source/queue.c ****             {
 2886              		.loc 1 1693 17 is_stmt 0 view .LVU867
 2887 00e4 2046     		mov	r0, r4
 2888 00e6 FFF7FEFF 		bl	prvIsQueueEmpty
 2889              	.LVL257:
1693:FreeRTOS/Source/queue.c ****             {
 2890              		.loc 1 1693 15 view .LVU868
 2891 00ea 0028     		cmp	r0, #0
 2892 00ec 42D1     		bne	.L223
 2893              	.LVL258:
 2894              	.L203:
1542:FreeRTOS/Source/queue.c ****     }
 2895              		.loc 1 1542 110 is_stmt 1 discriminator 8 view .LVU869
1549:FreeRTOS/Source/queue.c ****     {
 2896              		.loc 1 1549 5 discriminator 8 view .LVU870
1551:FreeRTOS/Source/queue.c ****         {
 2897              		.loc 1 1551 9 discriminator 8 view .LVU871
 2898 00ee FFF7FEFF 		bl	vPortEnterCritical
 2899              	.LVL259:
 2900              	.LBB186:
1555:FreeRTOS/Source/queue.c **** 
 2901              		.loc 1 1555 13 discriminator 8 view .LVU872
1555:FreeRTOS/Source/queue.c **** 
 2902              		.loc 1 1555 31 is_stmt 0 discriminator 8 view .LVU873
 2903 00f2 A36B     		ldr	r3, [r4, #56]
 2904              	.LVL260:
1559:FreeRTOS/Source/queue.c ****             {
 2905              		.loc 1 1559 13 is_stmt 1 discriminator 8 view .LVU874
1559:FreeRTOS/Source/queue.c ****             {
 2906              		.loc 1 1559 15 is_stmt 0 discriminator 8 view .LVU875
 2907 00f4 002B     		cmp	r3, #0
 2908 00f6 B0D1     		bne	.L224
1605:FreeRTOS/Source/queue.c ****                 {
 2909              		.loc 1 1605 17 is_stmt 1 view .LVU876
1605:FreeRTOS/Source/queue.c ****                 {
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 113


 2910              		.loc 1 1605 34 is_stmt 0 view .LVU877
 2911 00f8 019B     		ldr	r3, [sp, #4]
 2912              	.LVL261:
1605:FreeRTOS/Source/queue.c ****                 {
 2913              		.loc 1 1605 19 view .LVU878
 2914 00fa 002B     		cmp	r3, #0
 2915 00fc CDD0     		beq	.L225
1613:FreeRTOS/Source/queue.c ****                 {
 2916              		.loc 1 1613 22 is_stmt 1 view .LVU879
1613:FreeRTOS/Source/queue.c ****                 {
 2917              		.loc 1 1613 24 is_stmt 0 view .LVU880
 2918 00fe 002D     		cmp	r5, #0
 2919 0100 CFD0     		beq	.L226
 2920              	.LVL262:
 2921              	.L209:
1623:FreeRTOS/Source/queue.c ****                 }
 2922              		.loc 1 1623 45 is_stmt 1 view .LVU881
 2923              	.LBE186:
1627:FreeRTOS/Source/queue.c **** 
 2924              		.loc 1 1627 9 view .LVU882
 2925 0102 FFF7FEFF 		bl	vPortExitCritical
 2926              	.LVL263:
1632:FreeRTOS/Source/queue.c ****         prvLockQueue( pxQueue );
 2927              		.loc 1 1632 9 view .LVU883
 2928 0106 FFF7FEFF 		bl	vTaskSuspendAll
 2929              	.LVL264:
1633:FreeRTOS/Source/queue.c **** 
 2930              		.loc 1 1633 9 view .LVU884
 2931 010a FFF7FEFF 		bl	vPortEnterCritical
 2932              	.LVL265:
1633:FreeRTOS/Source/queue.c **** 
 2933              		.loc 1 1633 9 view .LVU885
 2934 010e 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2935 0112 5BB2     		sxtb	r3, r3
 2936 0114 B3F1FF3F 		cmp	r3, #-1
 2937 0118 C8D0     		beq	.L227
 2938              	.L210:
1633:FreeRTOS/Source/queue.c **** 
 2939              		.loc 1 1633 9 discriminator 3 view .LVU886
 2940 011a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2941 011e 5BB2     		sxtb	r3, r3
 2942 0120 B3F1FF3F 		cmp	r3, #-1
 2943 0124 C6D0     		beq	.L228
 2944              	.L211:
1633:FreeRTOS/Source/queue.c **** 
 2945              		.loc 1 1633 9 discriminator 6 view .LVU887
 2946 0126 FFF7FEFF 		bl	vPortExitCritical
 2947              	.LVL266:
1636:FreeRTOS/Source/queue.c ****         {
 2948              		.loc 1 1636 9 discriminator 6 view .LVU888
1636:FreeRTOS/Source/queue.c ****         {
 2949              		.loc 1 1636 13 is_stmt 0 discriminator 6 view .LVU889
 2950 012a 01A9     		add	r1, sp, #4
 2951 012c 02A8     		add	r0, sp, #8
 2952 012e FFF7FEFF 		bl	xTaskCheckForTimeOut
 2953              	.LVL267:
1636:FreeRTOS/Source/queue.c ****         {
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 114


 2954              		.loc 1 1636 11 discriminator 6 view .LVU890
 2955 0132 0028     		cmp	r0, #0
 2956 0134 D1D1     		bne	.L212
1642:FreeRTOS/Source/queue.c ****             {
 2957              		.loc 1 1642 13 is_stmt 1 view .LVU891
1642:FreeRTOS/Source/queue.c ****             {
 2958              		.loc 1 1642 17 is_stmt 0 view .LVU892
 2959 0136 2046     		mov	r0, r4
 2960 0138 FFF7FEFF 		bl	prvIsQueueEmpty
 2961              	.LVL268:
1642:FreeRTOS/Source/queue.c ****             {
 2962              		.loc 1 1642 15 view .LVU893
 2963 013c 0028     		cmp	r0, #0
 2964 013e C6D0     		beq	.L213
1644:FreeRTOS/Source/queue.c **** 
 2965              		.loc 1 1644 58 is_stmt 1 view .LVU894
1648:FreeRTOS/Source/queue.c ****                     {
 2966              		.loc 1 1648 21 view .LVU895
1648:FreeRTOS/Source/queue.c ****                     {
 2967              		.loc 1 1648 32 is_stmt 0 view .LVU896
 2968 0140 2368     		ldr	r3, [r4]
1648:FreeRTOS/Source/queue.c ****                     {
 2969              		.loc 1 1648 23 view .LVU897
 2970 0142 002B     		cmp	r3, #0
 2971 0144 BAD0     		beq	.L229
 2972              	.L214:
1658:FreeRTOS/Source/queue.c ****                     }
 2973              		.loc 1 1658 49 is_stmt 1 view .LVU898
1663:FreeRTOS/Source/queue.c ****                 prvUnlockQueue( pxQueue );
 2974              		.loc 1 1663 17 view .LVU899
 2975 0146 0199     		ldr	r1, [sp, #4]
 2976 0148 04F12400 		add	r0, r4, #36
 2977 014c FFF7FEFF 		bl	vTaskPlaceOnEventList
 2978              	.LVL269:
1664:FreeRTOS/Source/queue.c **** 
 2979              		.loc 1 1664 17 view .LVU900
 2980 0150 2046     		mov	r0, r4
 2981 0152 FFF7FEFF 		bl	prvUnlockQueue
 2982              	.LVL270:
1666:FreeRTOS/Source/queue.c ****                 {
 2983              		.loc 1 1666 17 view .LVU901
1666:FreeRTOS/Source/queue.c ****                 {
 2984              		.loc 1 1666 21 is_stmt 0 view .LVU902
 2985 0156 FFF7FEFF 		bl	xTaskResumeAll
 2986              	.LVL271:
1666:FreeRTOS/Source/queue.c ****                 {
 2987              		.loc 1 1666 19 view .LVU903
 2988 015a 0028     		cmp	r0, #0
 2989 015c C7D1     		bne	.L203
1668:FreeRTOS/Source/queue.c ****                 }
 2990              		.loc 1 1668 21 is_stmt 1 view .LVU904
 2991 015e 4FF0E023 		mov	r3, #-536813568
 2992 0162 4FF08052 		mov	r2, #268435456
 2993 0166 C3F8042D 		str	r2, [r3, #3332]
1668:FreeRTOS/Source/queue.c ****                 }
 2994              		.loc 1 1668 21 view .LVU905
 2995              		.syntax unified
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 115


 2996              	@ 1668 "FreeRTOS/Source/queue.c" 1
 2997 016a BFF34F8F 		dsb
 2998              	@ 0 "" 2
1668:FreeRTOS/Source/queue.c ****                 }
 2999              		.loc 1 1668 21 view .LVU906
 3000              	@ 1668 "FreeRTOS/Source/queue.c" 1
 3001 016e BFF36F8F 		isb
 3002              	@ 0 "" 2
1668:FreeRTOS/Source/queue.c ****                 }
 3003              		.loc 1 1668 43 view .LVU907
 3004              		.thumb
 3005              		.syntax unified
 3006 0172 BCE7     		b	.L203
 3007              	.L223:
1700:FreeRTOS/Source/queue.c ****                     {
 3008              		.loc 1 1700 21 view .LVU908
1700:FreeRTOS/Source/queue.c ****                     {
 3009              		.loc 1 1700 23 is_stmt 0 view .LVU909
 3010 0174 0EB9     		cbnz	r6, .L230
 3011              	.L216:
1719:FreeRTOS/Source/queue.c ****                 return errQUEUE_EMPTY;
 3012              		.loc 1 1719 53 is_stmt 1 view .LVU910
1720:FreeRTOS/Source/queue.c ****             }
 3013              		.loc 1 1720 17 view .LVU911
1720:FreeRTOS/Source/queue.c ****             }
 3014              		.loc 1 1720 24 is_stmt 0 view .LVU912
 3015 0176 0020     		movs	r0, #0
 3016 0178 78E7     		b	.L196
 3017              	.L230:
1702:FreeRTOS/Source/queue.c ****                         {
 3018              		.loc 1 1702 25 is_stmt 1 view .LVU913
 3019 017a FFF7FEFF 		bl	vPortEnterCritical
 3020              	.LVL272:
 3021              	.LBB187:
1704:FreeRTOS/Source/queue.c **** 
 3022              		.loc 1 1704 29 view .LVU914
1711:FreeRTOS/Source/queue.c ****                             vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder
 3023              		.loc 1 1711 29 view .LVU915
1711:FreeRTOS/Source/queue.c ****                             vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder
 3024              		.loc 1 1711 56 is_stmt 0 view .LVU916
 3025 017e 2046     		mov	r0, r4
 3026 0180 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 3027              	.LVL273:
 3028 0184 0146     		mov	r1, r0
 3029              	.LVL274:
1712:FreeRTOS/Source/queue.c ****                         }
 3030              		.loc 1 1712 29 is_stmt 1 view .LVU917
 3031 0186 A068     		ldr	r0, [r4, #8]
 3032              	.LVL275:
1712:FreeRTOS/Source/queue.c ****                         }
 3033              		.loc 1 1712 29 is_stmt 0 view .LVU918
 3034 0188 FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 3035              	.LVL276:
1712:FreeRTOS/Source/queue.c ****                         }
 3036              		.loc 1 1712 29 view .LVU919
 3037              	.LBE187:
1714:FreeRTOS/Source/queue.c ****                     }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 116


 3038              		.loc 1 1714 25 is_stmt 1 view .LVU920
 3039 018c FFF7FEFF 		bl	vPortExitCritical
 3040              	.LVL277:
 3041 0190 F1E7     		b	.L216
 3042              		.cfi_endproc
 3043              	.LFE17:
 3045              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 3046              		.align	1
 3047              		.global	xQueueTakeMutexRecursive
 3048              		.syntax unified
 3049              		.thumb
 3050              		.thumb_func
 3052              	xQueueTakeMutexRecursive:
 3053              	.LVL278:
 3054              	.LFB11:
 725:FreeRTOS/Source/queue.c ****         BaseType_t xReturn;
 3055              		.loc 1 725 5 view -0
 3056              		.cfi_startproc
 3057              		@ args = 0, pretend = 0, frame = 0
 3058              		@ frame_needed = 0, uses_anonymous_args = 0
 726:FreeRTOS/Source/queue.c ****         Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 3059              		.loc 1 726 9 view .LVU922
 727:FreeRTOS/Source/queue.c **** 
 3060              		.loc 1 727 9 view .LVU923
 729:FreeRTOS/Source/queue.c **** 
 3061              		.loc 1 729 9 view .LVU924
 3062 0000 80B1     		cbz	r0, .L238
 725:FreeRTOS/Source/queue.c ****         BaseType_t xReturn;
 3063              		.loc 1 725 5 is_stmt 0 discriminator 2 view .LVU925
 3064 0002 70B5     		push	{r4, r5, r6, lr}
 3065              	.LCFI30:
 3066              		.cfi_def_cfa_offset 16
 3067              		.cfi_offset 4, -16
 3068              		.cfi_offset 5, -12
 3069              		.cfi_offset 6, -8
 3070              		.cfi_offset 14, -4
 3071 0004 0C46     		mov	r4, r1
 3072 0006 0546     		mov	r5, r0
 729:FreeRTOS/Source/queue.c **** 
 3073              		.loc 1 729 32 is_stmt 1 discriminator 2 view .LVU926
 734:FreeRTOS/Source/queue.c **** 
 3074              		.loc 1 734 45 discriminator 2 view .LVU927
 736:FreeRTOS/Source/queue.c ****         {
 3075              		.loc 1 736 9 discriminator 2 view .LVU928
 736:FreeRTOS/Source/queue.c ****         {
 3076              		.loc 1 736 34 is_stmt 0 discriminator 2 view .LVU929
 3077 0008 8668     		ldr	r6, [r0, #8]
 736:FreeRTOS/Source/queue.c ****         {
 3078              		.loc 1 736 51 discriminator 2 view .LVU930
 3079 000a FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 3080              	.LVL279:
 736:FreeRTOS/Source/queue.c ****         {
 3081              		.loc 1 736 11 discriminator 2 view .LVU931
 3082 000e 8642     		cmp	r6, r0
 3083 0010 11D0     		beq	.L239
 743:FreeRTOS/Source/queue.c **** 
 3084              		.loc 1 743 13 is_stmt 1 view .LVU932
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 117


 743:FreeRTOS/Source/queue.c **** 
 3085              		.loc 1 743 23 is_stmt 0 view .LVU933
 3086 0012 2146     		mov	r1, r4
 3087 0014 2846     		mov	r0, r5
 3088 0016 FFF7FEFF 		bl	xQueueSemaphoreTake
 3089              	.LVL280:
 748:FreeRTOS/Source/queue.c ****             {
 3090              		.loc 1 748 13 is_stmt 1 view .LVU934
 748:FreeRTOS/Source/queue.c ****             {
 3091              		.loc 1 748 15 is_stmt 0 view .LVU935
 3092 001a 80B1     		cbz	r0, .L231
 750:FreeRTOS/Source/queue.c ****             }
 3093              		.loc 1 750 17 is_stmt 1 view .LVU936
 750:FreeRTOS/Source/queue.c ****             }
 3094              		.loc 1 750 40 is_stmt 0 view .LVU937
 3095 001c EB68     		ldr	r3, [r5, #12]
 750:FreeRTOS/Source/queue.c ****             }
 3096              		.loc 1 750 63 view .LVU938
 3097 001e 0133     		adds	r3, r3, #1
 3098 0020 EB60     		str	r3, [r5, #12]
 754:FreeRTOS/Source/queue.c ****             }
 3099              		.loc 1 754 60 is_stmt 1 view .LVU939
 758:FreeRTOS/Source/queue.c ****     }
 3100              		.loc 1 758 9 view .LVU940
 758:FreeRTOS/Source/queue.c ****     }
 3101              		.loc 1 758 16 is_stmt 0 view .LVU941
 3102 0022 0CE0     		b	.L231
 3103              	.LVL281:
 3104              	.L238:
 3105              	.LCFI31:
 3106              		.cfi_def_cfa_offset 0
 3107              		.cfi_restore 4
 3108              		.cfi_restore 5
 3109              		.cfi_restore 6
 3110              		.cfi_restore 14
 729:FreeRTOS/Source/queue.c **** 
 3111              		.loc 1 729 9 is_stmt 1 view .LVU942
 3112              	.LBB188:
 3113              	.LBI188:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3114              		.loc 2 194 34 view .LVU943
 3115              	.LBB189:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3116              		.loc 2 196 9 view .LVU944
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3117              		.loc 2 198 9 view .LVU945
 3118              		.syntax unified
 3119              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3120 0024 4FF05003 			mov r3, #80												
 3121 0028 83F31188 		msr basepri, r3											
 3122 002c BFF36F8F 		isb														
 3123 0030 BFF34F8F 		dsb														
 3124              	
 3125              	@ 0 "" 2
 3126              	.LVL282:
 3127              		.thumb
 3128              		.syntax unified
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 118


 3129              	.L233:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3130              		.loc 2 198 9 is_stmt 0 view .LVU946
 3131              	.LBE189:
 3132              	.LBE188:
 729:FreeRTOS/Source/queue.c **** 
 3133              		.loc 1 729 9 is_stmt 1 discriminator 1 view .LVU947
 729:FreeRTOS/Source/queue.c **** 
 3134              		.loc 1 729 9 discriminator 1 view .LVU948
 3135 0034 FEE7     		b	.L233
 3136              	.LVL283:
 3137              	.L239:
 3138              	.LCFI32:
 3139              		.cfi_def_cfa_offset 16
 3140              		.cfi_offset 4, -16
 3141              		.cfi_offset 5, -12
 3142              		.cfi_offset 6, -8
 3143              		.cfi_offset 14, -4
 738:FreeRTOS/Source/queue.c ****             xReturn = pdPASS;
 3144              		.loc 1 738 13 view .LVU949
 738:FreeRTOS/Source/queue.c ****             xReturn = pdPASS;
 3145              		.loc 1 738 36 is_stmt 0 view .LVU950
 3146 0036 EB68     		ldr	r3, [r5, #12]
 738:FreeRTOS/Source/queue.c ****             xReturn = pdPASS;
 3147              		.loc 1 738 59 view .LVU951
 3148 0038 0133     		adds	r3, r3, #1
 3149 003a EB60     		str	r3, [r5, #12]
 739:FreeRTOS/Source/queue.c ****         }
 3150              		.loc 1 739 13 is_stmt 1 view .LVU952
 3151              	.LVL284:
 739:FreeRTOS/Source/queue.c ****         }
 3152              		.loc 1 739 21 is_stmt 0 view .LVU953
 3153 003c 0120     		movs	r0, #1
 3154              	.LVL285:
 3155              	.L231:
 759:FreeRTOS/Source/queue.c **** 
 3156              		.loc 1 759 5 view .LVU954
 3157 003e 70BD     		pop	{r4, r5, r6, pc}
 759:FreeRTOS/Source/queue.c **** 
 3158              		.loc 1 759 5 view .LVU955
 3159              		.cfi_endproc
 3160              	.LFE11:
 3162              		.section	.text.xQueuePeek,"ax",%progbits
 3163              		.align	1
 3164              		.global	xQueuePeek
 3165              		.syntax unified
 3166              		.thumb
 3167              		.thumb_func
 3169              	xQueuePeek:
 3170              	.LVL286:
 3171              	.LFB18:
1734:FreeRTOS/Source/queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
 3172              		.loc 1 1734 1 is_stmt 1 view -0
 3173              		.cfi_startproc
 3174              		@ args = 0, pretend = 0, frame = 16
 3175              		@ frame_needed = 0, uses_anonymous_args = 0
1734:FreeRTOS/Source/queue.c ****     BaseType_t xEntryTimeSet = pdFALSE;
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 119


 3176              		.loc 1 1734 1 is_stmt 0 view .LVU957
 3177 0000 70B5     		push	{r4, r5, r6, lr}
 3178              	.LCFI33:
 3179              		.cfi_def_cfa_offset 16
 3180              		.cfi_offset 4, -16
 3181              		.cfi_offset 5, -12
 3182              		.cfi_offset 6, -8
 3183              		.cfi_offset 14, -4
 3184 0002 84B0     		sub	sp, sp, #16
 3185              	.LCFI34:
 3186              		.cfi_def_cfa_offset 32
 3187 0004 0192     		str	r2, [sp, #4]
1735:FreeRTOS/Source/queue.c ****     TimeOut_t xTimeOut;
 3188              		.loc 1 1735 5 is_stmt 1 view .LVU958
 3189              	.LVL287:
1736:FreeRTOS/Source/queue.c ****     int8_t * pcOriginalReadPosition;
 3190              		.loc 1 1736 5 view .LVU959
1737:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 3191              		.loc 1 1737 5 view .LVU960
1738:FreeRTOS/Source/queue.c **** 
 3192              		.loc 1 1738 5 view .LVU961
1741:FreeRTOS/Source/queue.c **** 
 3193              		.loc 1 1741 5 view .LVU962
 3194 0006 90B1     		cbz	r0, .L260
 3195 0008 0E46     		mov	r6, r1
 3196 000a 0446     		mov	r4, r0
1741:FreeRTOS/Source/queue.c **** 
 3197              		.loc 1 1741 32 discriminator 2 view .LVU963
1745:FreeRTOS/Source/queue.c **** 
 3198              		.loc 1 1745 5 discriminator 2 view .LVU964
 3199 000c C1B1     		cbz	r1, .L261
 3200              	.L243:
1745:FreeRTOS/Source/queue.c **** 
 3201              		.loc 1 1745 103 discriminator 8 view .LVU965
1750:FreeRTOS/Source/queue.c ****     }
 3202              		.loc 1 1750 9 discriminator 8 view .LVU966
 3203 000e FFF7FEFF 		bl	xTaskGetSchedulerState
 3204              	.LVL288:
1750:FreeRTOS/Source/queue.c ****     }
 3205              		.loc 1 1750 9 is_stmt 0 discriminator 8 view .LVU967
 3206 0012 0546     		mov	r5, r0
 3207 0014 00BB     		cbnz	r0, .L258
1750:FreeRTOS/Source/queue.c ****     }
 3208              		.loc 1 1750 9 discriminator 2 view .LVU968
 3209 0016 019B     		ldr	r3, [sp, #4]
 3210 0018 002B     		cmp	r3, #0
 3211 001a 5ED0     		beq	.L247
1750:FreeRTOS/Source/queue.c ****     }
 3212              		.loc 1 1750 9 is_stmt 1 view .LVU969
 3213              	.LBB190:
 3214              	.LBI190:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3215              		.loc 2 194 34 view .LVU970
 3216              	.LBB191:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3217              		.loc 2 196 9 view .LVU971
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 120


 3218              		.loc 2 198 9 view .LVU972
 3219              		.syntax unified
 3220              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3221 001c 4FF05003 			mov r3, #80												
 3222 0020 83F31188 		msr basepri, r3											
 3223 0024 BFF36F8F 		isb														
 3224 0028 BFF34F8F 		dsb														
 3225              	
 3226              	@ 0 "" 2
 3227              	.LVL289:
 3228              		.thumb
 3229              		.syntax unified
 3230              	.L246:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3231              		.loc 2 198 9 is_stmt 0 view .LVU973
 3232              	.LBE191:
 3233              	.LBE190:
1750:FreeRTOS/Source/queue.c ****     }
 3234              		.loc 1 1750 9 is_stmt 1 discriminator 3 view .LVU974
1750:FreeRTOS/Source/queue.c ****     }
 3235              		.loc 1 1750 9 discriminator 3 view .LVU975
 3236 002c FEE7     		b	.L246
 3237              	.LVL290:
 3238              	.L260:
1741:FreeRTOS/Source/queue.c **** 
 3239              		.loc 1 1741 5 view .LVU976
 3240              	.LBB192:
 3241              	.LBI192:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3242              		.loc 2 194 34 view .LVU977
 3243              	.LBB193:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3244              		.loc 2 196 9 view .LVU978
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3245              		.loc 2 198 9 view .LVU979
 3246              		.syntax unified
 3247              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3248 002e 4FF05003 			mov r3, #80												
 3249 0032 83F31188 		msr basepri, r3											
 3250 0036 BFF36F8F 		isb														
 3251 003a BFF34F8F 		dsb														
 3252              	
 3253              	@ 0 "" 2
 3254              	.LVL291:
 3255              		.thumb
 3256              		.syntax unified
 3257              	.L242:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3258              		.loc 2 198 9 is_stmt 0 view .LVU980
 3259              	.LBE193:
 3260              	.LBE192:
1741:FreeRTOS/Source/queue.c **** 
 3261              		.loc 1 1741 5 is_stmt 1 discriminator 1 view .LVU981
1741:FreeRTOS/Source/queue.c **** 
 3262              		.loc 1 1741 5 discriminator 1 view .LVU982
 3263 003e FEE7     		b	.L242
 3264              	.L261:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 121


1745:FreeRTOS/Source/queue.c **** 
 3265              		.loc 1 1745 5 is_stmt 0 discriminator 2 view .LVU983
 3266 0040 036C     		ldr	r3, [r0, #64]
 3267 0042 002B     		cmp	r3, #0
 3268 0044 E3D0     		beq	.L243
1745:FreeRTOS/Source/queue.c **** 
 3269              		.loc 1 1745 5 is_stmt 1 view .LVU984
 3270              	.LBB194:
 3271              	.LBI194:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3272              		.loc 2 194 34 view .LVU985
 3273              	.LBB195:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3274              		.loc 2 196 9 view .LVU986
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3275              		.loc 2 198 9 view .LVU987
 3276              		.syntax unified
 3277              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3278 0046 4FF05003 			mov r3, #80												
 3279 004a 83F31188 		msr basepri, r3											
 3280 004e BFF36F8F 		isb														
 3281 0052 BFF34F8F 		dsb														
 3282              	
 3283              	@ 0 "" 2
 3284              	.LVL292:
 3285              		.thumb
 3286              		.syntax unified
 3287              	.L244:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3288              		.loc 2 198 9 is_stmt 0 view .LVU988
 3289              	.LBE195:
 3290              	.LBE194:
1745:FreeRTOS/Source/queue.c **** 
 3291              		.loc 1 1745 5 is_stmt 1 discriminator 2 view .LVU989
1745:FreeRTOS/Source/queue.c **** 
 3292              		.loc 1 1745 5 discriminator 2 view .LVU990
 3293 0056 FEE7     		b	.L244
 3294              	.LVL293:
 3295              	.L258:
1745:FreeRTOS/Source/queue.c **** 
 3296              		.loc 1 1745 5 is_stmt 0 discriminator 2 view .LVU991
 3297 0058 0025     		movs	r5, #0
 3298 005a 3EE0     		b	.L247
 3299              	.LVL294:
 3300              	.L264:
 3301              	.LBB196:
1770:FreeRTOS/Source/queue.c **** 
 3302              		.loc 1 1770 17 is_stmt 1 view .LVU992
1770:FreeRTOS/Source/queue.c **** 
 3303              		.loc 1 1770 40 is_stmt 0 view .LVU993
 3304 005c E568     		ldr	r5, [r4, #12]
 3305              	.LVL295:
1772:FreeRTOS/Source/queue.c ****                 traceQUEUE_PEEK( pxQueue );
 3306              		.loc 1 1772 17 is_stmt 1 view .LVU994
 3307 005e 3146     		mov	r1, r6
 3308 0060 2046     		mov	r0, r4
 3309 0062 FFF7FEFF 		bl	prvCopyDataFromQueue
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 122


 3310              	.LVL296:
1773:FreeRTOS/Source/queue.c **** 
 3311              		.loc 1 1773 43 view .LVU995
1776:FreeRTOS/Source/queue.c **** 
 3312              		.loc 1 1776 17 view .LVU996
1776:FreeRTOS/Source/queue.c **** 
 3313              		.loc 1 1776 46 is_stmt 0 view .LVU997
 3314 0066 E560     		str	r5, [r4, #12]
1780:FreeRTOS/Source/queue.c ****                 {
 3315              		.loc 1 1780 17 is_stmt 1 view .LVU998
1780:FreeRTOS/Source/queue.c ****                 {
 3316              		.loc 1 1780 21 is_stmt 0 view .LVU999
 3317 0068 636A     		ldr	r3, [r4, #36]
1780:FreeRTOS/Source/queue.c ****                 {
 3318              		.loc 1 1780 19 view .LVU1000
 3319 006a 23B9     		cbnz	r3, .L262
 3320              	.L249:
1794:FreeRTOS/Source/queue.c ****                 }
 3321              		.loc 1 1794 45 is_stmt 1 view .LVU1001
1797:FreeRTOS/Source/queue.c ****                 return pdPASS;
 3322              		.loc 1 1797 17 view .LVU1002
 3323 006c FFF7FEFF 		bl	vPortExitCritical
 3324              	.LVL297:
1798:FreeRTOS/Source/queue.c ****             }
 3325              		.loc 1 1798 17 view .LVU1003
1798:FreeRTOS/Source/queue.c ****             }
 3326              		.loc 1 1798 24 is_stmt 0 view .LVU1004
 3327 0070 0120     		movs	r0, #1
 3328              	.LVL298:
 3329              	.L240:
1798:FreeRTOS/Source/queue.c ****             }
 3330              		.loc 1 1798 24 view .LVU1005
 3331              	.LBE196:
1879:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3332              		.loc 1 1879 1 view .LVU1006
 3333 0072 04B0     		add	sp, sp, #16
 3334              	.LCFI35:
 3335              		.cfi_remember_state
 3336              		.cfi_def_cfa_offset 16
 3337              		@ sp needed
 3338 0074 70BD     		pop	{r4, r5, r6, pc}
 3339              	.LVL299:
 3340              	.L262:
 3341              	.LCFI36:
 3342              		.cfi_restore_state
 3343              	.LBB197:
1782:FreeRTOS/Source/queue.c ****                     {
 3344              		.loc 1 1782 21 is_stmt 1 view .LVU1007
1782:FreeRTOS/Source/queue.c ****                     {
 3345              		.loc 1 1782 25 is_stmt 0 view .LVU1008
 3346 0076 04F12400 		add	r0, r4, #36
 3347 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 3348              	.LVL300:
1782:FreeRTOS/Source/queue.c ****                     {
 3349              		.loc 1 1782 23 view .LVU1009
 3350 007e 0028     		cmp	r0, #0
 3351 0080 F4D0     		beq	.L249
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 123


1785:FreeRTOS/Source/queue.c ****                     }
 3352              		.loc 1 1785 25 is_stmt 1 view .LVU1010
 3353 0082 4FF0E023 		mov	r3, #-536813568
 3354 0086 4FF08052 		mov	r2, #268435456
 3355 008a C3F8042D 		str	r2, [r3, #3332]
1785:FreeRTOS/Source/queue.c ****                     }
 3356              		.loc 1 1785 25 view .LVU1011
 3357              		.syntax unified
 3358              	@ 1785 "FreeRTOS/Source/queue.c" 1
 3359 008e BFF34F8F 		dsb
 3360              	@ 0 "" 2
1785:FreeRTOS/Source/queue.c ****                     }
 3361              		.loc 1 1785 25 view .LVU1012
 3362              	@ 1785 "FreeRTOS/Source/queue.c" 1
 3363 0092 BFF36F8F 		isb
 3364              	@ 0 "" 2
1785:FreeRTOS/Source/queue.c ****                     }
 3365              		.loc 1 1785 57 view .LVU1013
 3366              		.thumb
 3367              		.syntax unified
 3368 0096 E9E7     		b	.L249
 3369              	.LVL301:
 3370              	.L265:
1806:FreeRTOS/Source/queue.c ****                     traceQUEUE_PEEK_FAILED( pxQueue );
 3371              		.loc 1 1806 21 view .LVU1014
 3372 0098 FFF7FEFF 		bl	vPortExitCritical
 3373              	.LVL302:
1807:FreeRTOS/Source/queue.c ****                     return errQUEUE_EMPTY;
 3374              		.loc 1 1807 54 view .LVU1015
1808:FreeRTOS/Source/queue.c ****                 }
 3375              		.loc 1 1808 21 view .LVU1016
1808:FreeRTOS/Source/queue.c ****                 }
 3376              		.loc 1 1808 28 is_stmt 0 view .LVU1017
 3377 009c 0020     		movs	r0, #0
 3378 009e E8E7     		b	.L240
 3379              	.L266:
1815:FreeRTOS/Source/queue.c ****                     xEntryTimeSet = pdTRUE;
 3380              		.loc 1 1815 21 is_stmt 1 view .LVU1018
 3381 00a0 02A8     		add	r0, sp, #8
 3382 00a2 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3383              	.LVL303:
1816:FreeRTOS/Source/queue.c ****                 }
 3384              		.loc 1 1816 21 view .LVU1019
1816:FreeRTOS/Source/queue.c ****                 }
 3385              		.loc 1 1816 35 is_stmt 0 view .LVU1020
 3386 00a6 0125     		movs	r5, #1
 3387 00a8 21E0     		b	.L252
 3388              	.LVL304:
 3389              	.L267:
1816:FreeRTOS/Source/queue.c ****                 }
 3390              		.loc 1 1816 35 view .LVU1021
 3391              	.LBE197:
1831:FreeRTOS/Source/queue.c **** 
 3392              		.loc 1 1831 9 is_stmt 1 discriminator 1 view .LVU1022
 3393 00aa 0023     		movs	r3, #0
 3394 00ac 84F84430 		strb	r3, [r4, #68]
 3395 00b0 29E0     		b	.L253
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 124


 3396              	.L268:
1831:FreeRTOS/Source/queue.c **** 
 3397              		.loc 1 1831 9 discriminator 4 view .LVU1023
 3398 00b2 0023     		movs	r3, #0
 3399 00b4 84F84530 		strb	r3, [r4, #69]
 3400 00b8 2BE0     		b	.L254
 3401              	.L256:
1857:FreeRTOS/Source/queue.c ****                 ( void ) xTaskResumeAll();
 3402              		.loc 1 1857 17 view .LVU1024
 3403 00ba 2046     		mov	r0, r4
 3404 00bc FFF7FEFF 		bl	prvUnlockQueue
 3405              	.LVL305:
1858:FreeRTOS/Source/queue.c ****             }
 3406              		.loc 1 1858 17 view .LVU1025
1858:FreeRTOS/Source/queue.c ****             }
 3407              		.loc 1 1858 26 is_stmt 0 view .LVU1026
 3408 00c0 FFF7FEFF 		bl	xTaskResumeAll
 3409              	.LVL306:
 3410 00c4 09E0     		b	.L247
 3411              	.L255:
1865:FreeRTOS/Source/queue.c ****             ( void ) xTaskResumeAll();
 3412              		.loc 1 1865 13 is_stmt 1 view .LVU1027
 3413 00c6 2046     		mov	r0, r4
 3414 00c8 FFF7FEFF 		bl	prvUnlockQueue
 3415              	.LVL307:
1866:FreeRTOS/Source/queue.c **** 
 3416              		.loc 1 1866 13 view .LVU1028
1866:FreeRTOS/Source/queue.c **** 
 3417              		.loc 1 1866 22 is_stmt 0 view .LVU1029
 3418 00cc FFF7FEFF 		bl	xTaskResumeAll
 3419              	.LVL308:
1868:FreeRTOS/Source/queue.c ****             {
 3420              		.loc 1 1868 13 is_stmt 1 view .LVU1030
1868:FreeRTOS/Source/queue.c ****             {
 3421              		.loc 1 1868 17 is_stmt 0 view .LVU1031
 3422 00d0 2046     		mov	r0, r4
 3423 00d2 FFF7FEFF 		bl	prvIsQueueEmpty
 3424              	.LVL309:
1868:FreeRTOS/Source/queue.c ****             {
 3425              		.loc 1 1868 15 view .LVU1032
 3426 00d6 0028     		cmp	r0, #0
 3427 00d8 3FD1     		bne	.L263
 3428              	.LVL310:
 3429              	.L247:
1750:FreeRTOS/Source/queue.c ****     }
 3430              		.loc 1 1750 110 is_stmt 1 discriminator 8 view .LVU1033
1757:FreeRTOS/Source/queue.c ****     {
 3431              		.loc 1 1757 5 discriminator 8 view .LVU1034
1759:FreeRTOS/Source/queue.c ****         {
 3432              		.loc 1 1759 9 discriminator 8 view .LVU1035
 3433 00da FFF7FEFF 		bl	vPortEnterCritical
 3434              	.LVL311:
 3435              	.LBB198:
1761:FreeRTOS/Source/queue.c **** 
 3436              		.loc 1 1761 13 discriminator 8 view .LVU1036
1761:FreeRTOS/Source/queue.c **** 
 3437              		.loc 1 1761 31 is_stmt 0 discriminator 8 view .LVU1037
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 125


 3438 00de A36B     		ldr	r3, [r4, #56]
 3439              	.LVL312:
1765:FreeRTOS/Source/queue.c ****             {
 3440              		.loc 1 1765 13 is_stmt 1 discriminator 8 view .LVU1038
1765:FreeRTOS/Source/queue.c ****             {
 3441              		.loc 1 1765 15 is_stmt 0 discriminator 8 view .LVU1039
 3442 00e0 002B     		cmp	r3, #0
 3443 00e2 BBD1     		bne	.L264
1802:FreeRTOS/Source/queue.c ****                 {
 3444              		.loc 1 1802 17 is_stmt 1 view .LVU1040
1802:FreeRTOS/Source/queue.c ****                 {
 3445              		.loc 1 1802 34 is_stmt 0 view .LVU1041
 3446 00e4 019B     		ldr	r3, [sp, #4]
 3447              	.LVL313:
1802:FreeRTOS/Source/queue.c ****                 {
 3448              		.loc 1 1802 19 view .LVU1042
 3449 00e6 002B     		cmp	r3, #0
 3450 00e8 D6D0     		beq	.L265
1810:FreeRTOS/Source/queue.c ****                 {
 3451              		.loc 1 1810 22 is_stmt 1 view .LVU1043
1810:FreeRTOS/Source/queue.c ****                 {
 3452              		.loc 1 1810 24 is_stmt 0 view .LVU1044
 3453 00ea 002D     		cmp	r5, #0
 3454 00ec D8D0     		beq	.L266
 3455              	.LVL314:
 3456              	.L252:
1821:FreeRTOS/Source/queue.c ****                 }
 3457              		.loc 1 1821 45 is_stmt 1 view .LVU1045
 3458              	.LBE198:
1825:FreeRTOS/Source/queue.c **** 
 3459              		.loc 1 1825 9 view .LVU1046
 3460 00ee FFF7FEFF 		bl	vPortExitCritical
 3461              	.LVL315:
1830:FreeRTOS/Source/queue.c ****         prvLockQueue( pxQueue );
 3462              		.loc 1 1830 9 view .LVU1047
 3463 00f2 FFF7FEFF 		bl	vTaskSuspendAll
 3464              	.LVL316:
1831:FreeRTOS/Source/queue.c **** 
 3465              		.loc 1 1831 9 view .LVU1048
 3466 00f6 FFF7FEFF 		bl	vPortEnterCritical
 3467              	.LVL317:
1831:FreeRTOS/Source/queue.c **** 
 3468              		.loc 1 1831 9 view .LVU1049
 3469 00fa 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3470 00fe 5BB2     		sxtb	r3, r3
 3471 0100 B3F1FF3F 		cmp	r3, #-1
 3472 0104 D1D0     		beq	.L267
 3473              	.L253:
1831:FreeRTOS/Source/queue.c **** 
 3474              		.loc 1 1831 9 discriminator 3 view .LVU1050
 3475 0106 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3476 010a 5BB2     		sxtb	r3, r3
 3477 010c B3F1FF3F 		cmp	r3, #-1
 3478 0110 CFD0     		beq	.L268
 3479              	.L254:
1831:FreeRTOS/Source/queue.c **** 
 3480              		.loc 1 1831 9 discriminator 6 view .LVU1051
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 126


 3481 0112 FFF7FEFF 		bl	vPortExitCritical
 3482              	.LVL318:
1834:FreeRTOS/Source/queue.c ****         {
 3483              		.loc 1 1834 9 discriminator 6 view .LVU1052
1834:FreeRTOS/Source/queue.c ****         {
 3484              		.loc 1 1834 13 is_stmt 0 discriminator 6 view .LVU1053
 3485 0116 01A9     		add	r1, sp, #4
 3486 0118 02A8     		add	r0, sp, #8
 3487 011a FFF7FEFF 		bl	xTaskCheckForTimeOut
 3488              	.LVL319:
1834:FreeRTOS/Source/queue.c ****         {
 3489              		.loc 1 1834 11 discriminator 6 view .LVU1054
 3490 011e 0028     		cmp	r0, #0
 3491 0120 D1D1     		bne	.L255
1838:FreeRTOS/Source/queue.c ****             {
 3492              		.loc 1 1838 13 is_stmt 1 view .LVU1055
1838:FreeRTOS/Source/queue.c ****             {
 3493              		.loc 1 1838 17 is_stmt 0 view .LVU1056
 3494 0122 2046     		mov	r0, r4
 3495 0124 FFF7FEFF 		bl	prvIsQueueEmpty
 3496              	.LVL320:
1838:FreeRTOS/Source/queue.c ****             {
 3497              		.loc 1 1838 15 view .LVU1057
 3498 0128 0028     		cmp	r0, #0
 3499 012a C6D0     		beq	.L256
1840:FreeRTOS/Source/queue.c ****                 vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 3500              		.loc 1 1840 55 is_stmt 1 view .LVU1058
1841:FreeRTOS/Source/queue.c ****                 prvUnlockQueue( pxQueue );
 3501              		.loc 1 1841 17 view .LVU1059
 3502 012c 0199     		ldr	r1, [sp, #4]
 3503 012e 04F12400 		add	r0, r4, #36
 3504 0132 FFF7FEFF 		bl	vTaskPlaceOnEventList
 3505              	.LVL321:
1842:FreeRTOS/Source/queue.c **** 
 3506              		.loc 1 1842 17 view .LVU1060
 3507 0136 2046     		mov	r0, r4
 3508 0138 FFF7FEFF 		bl	prvUnlockQueue
 3509              	.LVL322:
1844:FreeRTOS/Source/queue.c ****                 {
 3510              		.loc 1 1844 17 view .LVU1061
1844:FreeRTOS/Source/queue.c ****                 {
 3511              		.loc 1 1844 21 is_stmt 0 view .LVU1062
 3512 013c FFF7FEFF 		bl	xTaskResumeAll
 3513              	.LVL323:
1844:FreeRTOS/Source/queue.c ****                 {
 3514              		.loc 1 1844 19 view .LVU1063
 3515 0140 0028     		cmp	r0, #0
 3516 0142 CAD1     		bne	.L247
1846:FreeRTOS/Source/queue.c ****                 }
 3517              		.loc 1 1846 21 is_stmt 1 view .LVU1064
 3518 0144 4FF0E023 		mov	r3, #-536813568
 3519 0148 4FF08052 		mov	r2, #268435456
 3520 014c C3F8042D 		str	r2, [r3, #3332]
1846:FreeRTOS/Source/queue.c ****                 }
 3521              		.loc 1 1846 21 view .LVU1065
 3522              		.syntax unified
 3523              	@ 1846 "FreeRTOS/Source/queue.c" 1
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 127


 3524 0150 BFF34F8F 		dsb
 3525              	@ 0 "" 2
1846:FreeRTOS/Source/queue.c ****                 }
 3526              		.loc 1 1846 21 view .LVU1066
 3527              	@ 1846 "FreeRTOS/Source/queue.c" 1
 3528 0154 BFF36F8F 		isb
 3529              	@ 0 "" 2
1846:FreeRTOS/Source/queue.c ****                 }
 3530              		.loc 1 1846 43 view .LVU1067
 3531              		.thumb
 3532              		.syntax unified
 3533 0158 BFE7     		b	.L247
 3534              	.L263:
1871:FreeRTOS/Source/queue.c ****             }
 3535              		.loc 1 1871 24 is_stmt 0 view .LVU1068
 3536 015a 0020     		movs	r0, #0
 3537 015c 89E7     		b	.L240
 3538              		.cfi_endproc
 3539              	.LFE18:
 3541              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 3542              		.align	1
 3543              		.global	xQueueReceiveFromISR
 3544              		.syntax unified
 3545              		.thumb
 3546              		.thumb_func
 3548              	xQueueReceiveFromISR:
 3549              	.LVL324:
 3550              	.LFB19:
1885:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
 3551              		.loc 1 1885 1 is_stmt 1 view -0
 3552              		.cfi_startproc
 3553              		@ args = 0, pretend = 0, frame = 0
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
1885:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
 3555              		.loc 1 1885 1 is_stmt 0 view .LVU1070
 3556 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3557              	.LCFI37:
 3558              		.cfi_def_cfa_offset 32
 3559              		.cfi_offset 3, -32
 3560              		.cfi_offset 4, -28
 3561              		.cfi_offset 5, -24
 3562              		.cfi_offset 6, -20
 3563              		.cfi_offset 7, -16
 3564              		.cfi_offset 8, -12
 3565              		.cfi_offset 9, -8
 3566              		.cfi_offset 14, -4
1886:FreeRTOS/Source/queue.c ****     UBaseType_t uxSavedInterruptStatus;
 3567              		.loc 1 1886 5 is_stmt 1 view .LVU1071
1887:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 3568              		.loc 1 1887 5 view .LVU1072
1888:FreeRTOS/Source/queue.c **** 
 3569              		.loc 1 1888 5 view .LVU1073
 3570              	.LVL325:
1890:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3571              		.loc 1 1890 5 view .LVU1074
 3572 0004 B0B1     		cbz	r0, .L284
 3573 0006 0E46     		mov	r6, r1
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 128


 3574 0008 9046     		mov	r8, r2
 3575 000a 0446     		mov	r4, r0
1890:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3576              		.loc 1 1890 28 discriminator 2 view .LVU1075
1891:FreeRTOS/Source/queue.c **** 
 3577              		.loc 1 1891 5 discriminator 2 view .LVU1076
 3578 000c D9B1     		cbz	r1, .L285
 3579              	.L272:
1891:FreeRTOS/Source/queue.c **** 
 3580              		.loc 1 1891 95 discriminator 8 view .LVU1077
1907:FreeRTOS/Source/queue.c **** 
 3581              		.loc 1 1907 5 discriminator 8 view .LVU1078
 3582 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 3583              	.LVL326:
1909:FreeRTOS/Source/queue.c ****     {
 3584              		.loc 1 1909 5 discriminator 8 view .LVU1079
 3585              	.LBB199:
 3586              	.LBI199:
 210:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3587              		.loc 2 210 38 discriminator 8 view .LVU1080
 3588              	.LBB200:
 212:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3589              		.loc 2 212 9 discriminator 8 view .LVU1081
 214:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3590              		.loc 2 214 9 discriminator 8 view .LVU1082
 3591              		.syntax unified
 3592              	@ 214 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3593 0012 EFF31185 			mrs r5, basepri											
 3594 0016 4FF05003 		mov r3, #80												
 3595 001a 83F31188 		msr basepri, r3											
 3596 001e BFF36F8F 		isb														
 3597 0022 BFF34F8F 		dsb														
 3598              	
 3599              	@ 0 "" 2
 3600              	.LVL327:
 226:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 3601              		.loc 2 226 9 discriminator 8 view .LVU1083
 226:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 3602              		.loc 2 226 9 is_stmt 0 discriminator 8 view .LVU1084
 3603              		.thumb
 3604              		.syntax unified
 3605              	.LBE200:
 3606              	.LBE199:
 3607              	.LBB201:
1911:FreeRTOS/Source/queue.c **** 
 3608              		.loc 1 1911 9 is_stmt 1 discriminator 8 view .LVU1085
1911:FreeRTOS/Source/queue.c **** 
 3609              		.loc 1 1911 27 is_stmt 0 discriminator 8 view .LVU1086
 3610 0026 A76B     		ldr	r7, [r4, #56]
 3611              	.LVL328:
1914:FreeRTOS/Source/queue.c ****         {
 3612              		.loc 1 1914 9 is_stmt 1 discriminator 8 view .LVU1087
1914:FreeRTOS/Source/queue.c ****         {
 3613              		.loc 1 1914 11 is_stmt 0 discriminator 8 view .LVU1088
 3614 0028 CFB9     		cbnz	r7, .L286
1965:FreeRTOS/Source/queue.c ****             traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 3615              		.loc 1 1965 21 view .LVU1089
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 129


 3616 002a 0020     		movs	r0, #0
 3617              	.L274:
 3618              	.LVL329:
1966:FreeRTOS/Source/queue.c ****         }
 3619              		.loc 1 1966 58 is_stmt 1 view .LVU1090
 3620              	.LBE201:
1969:FreeRTOS/Source/queue.c **** 
 3621              		.loc 1 1969 5 view .LVU1091
 3622              	.LBB207:
 3623              	.LBI207:
 230:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3624              		.loc 2 230 34 view .LVU1092
 3625              	.LBB208:
 3626              		.loc 2 232 9 view .LVU1093
 3627              		.syntax unified
 3628              	@ 232 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3629 002c 85F31188 			msr basepri, r5	
 3630              	@ 0 "" 2
 3631              		.thumb
 3632              		.syntax unified
 3633              	.LBE208:
 3634              	.LBE207:
1971:FreeRTOS/Source/queue.c **** }
 3635              		.loc 1 1971 5 view .LVU1094
1972:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3636              		.loc 1 1972 1 is_stmt 0 view .LVU1095
 3637 0030 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3638              	.LVL330:
 3639              	.L284:
1890:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3640              		.loc 1 1890 5 is_stmt 1 view .LVU1096
 3641              	.LBB209:
 3642              	.LBI209:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3643              		.loc 2 194 34 view .LVU1097
 3644              	.LBB210:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3645              		.loc 2 196 9 view .LVU1098
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3646              		.loc 2 198 9 view .LVU1099
 3647              		.syntax unified
 3648              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3649 0034 4FF05003 			mov r3, #80												
 3650 0038 83F31188 		msr basepri, r3											
 3651 003c BFF36F8F 		isb														
 3652 0040 BFF34F8F 		dsb														
 3653              	
 3654              	@ 0 "" 2
 3655              	.LVL331:
 3656              		.thumb
 3657              		.syntax unified
 3658              	.L271:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3659              		.loc 2 198 9 is_stmt 0 view .LVU1100
 3660              	.LBE210:
 3661              	.LBE209:
1890:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 130


 3662              		.loc 1 1890 5 is_stmt 1 discriminator 1 view .LVU1101
1890:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3663              		.loc 1 1890 5 discriminator 1 view .LVU1102
 3664 0044 FEE7     		b	.L271
 3665              	.L285:
1891:FreeRTOS/Source/queue.c **** 
 3666              		.loc 1 1891 5 is_stmt 0 discriminator 2 view .LVU1103
 3667 0046 036C     		ldr	r3, [r0, #64]
 3668 0048 002B     		cmp	r3, #0
 3669 004a E0D0     		beq	.L272
1891:FreeRTOS/Source/queue.c **** 
 3670              		.loc 1 1891 5 is_stmt 1 view .LVU1104
 3671              	.LBB211:
 3672              	.LBI211:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3673              		.loc 2 194 34 view .LVU1105
 3674              	.LBB212:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3675              		.loc 2 196 9 view .LVU1106
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3676              		.loc 2 198 9 view .LVU1107
 3677              		.syntax unified
 3678              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3679 004c 4FF05003 			mov r3, #80												
 3680 0050 83F31188 		msr basepri, r3											
 3681 0054 BFF36F8F 		isb														
 3682 0058 BFF34F8F 		dsb														
 3683              	
 3684              	@ 0 "" 2
 3685              	.LVL332:
 3686              		.thumb
 3687              		.syntax unified
 3688              	.L273:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3689              		.loc 2 198 9 is_stmt 0 view .LVU1108
 3690              	.LBE212:
 3691              	.LBE211:
1891:FreeRTOS/Source/queue.c **** 
 3692              		.loc 1 1891 5 is_stmt 1 discriminator 2 view .LVU1109
1891:FreeRTOS/Source/queue.c **** 
 3693              		.loc 1 1891 5 discriminator 2 view .LVU1110
 3694 005c FEE7     		b	.L273
 3695              	.LVL333:
 3696              	.L286:
 3697              	.LBB213:
 3698              	.LBB202:
1916:FreeRTOS/Source/queue.c **** 
 3699              		.loc 1 1916 13 view .LVU1111
1916:FreeRTOS/Source/queue.c **** 
 3700              		.loc 1 1916 26 is_stmt 0 view .LVU1112
 3701 005e 94F84490 		ldrb	r9, [r4, #68]	@ zero_extendqisi2
 3702 0062 4FFA89F9 		sxtb	r9, r9
 3703              	.LVL334:
1918:FreeRTOS/Source/queue.c **** 
 3704              		.loc 1 1918 51 is_stmt 1 view .LVU1113
1920:FreeRTOS/Source/queue.c ****             pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 3705              		.loc 1 1920 13 view .LVU1114
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 131


 3706 0066 3146     		mov	r1, r6
 3707 0068 2046     		mov	r0, r4
 3708 006a FFF7FEFF 		bl	prvCopyDataFromQueue
 3709              	.LVL335:
1921:FreeRTOS/Source/queue.c **** 
 3710              		.loc 1 1921 13 view .LVU1115
1921:FreeRTOS/Source/queue.c **** 
 3711              		.loc 1 1921 60 is_stmt 0 view .LVU1116
 3712 006e 7B1E     		subs	r3, r7, #1
1921:FreeRTOS/Source/queue.c **** 
 3713              		.loc 1 1921 40 view .LVU1117
 3714 0070 A363     		str	r3, [r4, #56]
1927:FreeRTOS/Source/queue.c ****             {
 3715              		.loc 1 1927 13 is_stmt 1 view .LVU1118
1927:FreeRTOS/Source/queue.c ****             {
 3716              		.loc 1 1927 15 is_stmt 0 view .LVU1119
 3717 0072 B9F1FF3F 		cmp	r9, #-1
 3718 0076 0FD1     		bne	.L275
1929:FreeRTOS/Source/queue.c ****                 {
 3719              		.loc 1 1929 17 is_stmt 1 view .LVU1120
1929:FreeRTOS/Source/queue.c ****                 {
 3720              		.loc 1 1929 21 is_stmt 0 view .LVU1121
 3721 0078 2369     		ldr	r3, [r4, #16]
1929:FreeRTOS/Source/queue.c ****                 {
 3722              		.loc 1 1929 19 view .LVU1122
 3723 007a 0BB9     		cbnz	r3, .L287
1961:FreeRTOS/Source/queue.c ****         }
 3724              		.loc 1 1961 21 view .LVU1123
 3725 007c 0120     		movs	r0, #1
 3726 007e D5E7     		b	.L274
 3727              	.L287:
1931:FreeRTOS/Source/queue.c ****                     {
 3728              		.loc 1 1931 21 is_stmt 1 view .LVU1124
1931:FreeRTOS/Source/queue.c ****                     {
 3729              		.loc 1 1931 25 is_stmt 0 view .LVU1125
 3730 0080 04F11000 		add	r0, r4, #16
 3731 0084 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3732              	.LVL336:
1931:FreeRTOS/Source/queue.c ****                     {
 3733              		.loc 1 1931 23 view .LVU1126
 3734 0088 E8B1     		cbz	r0, .L280
1935:FreeRTOS/Source/queue.c ****                         {
 3735              		.loc 1 1935 25 is_stmt 1 view .LVU1127
1935:FreeRTOS/Source/queue.c ****                         {
 3736              		.loc 1 1935 27 is_stmt 0 view .LVU1128
 3737 008a B8F1000F 		cmp	r8, #0
 3738 008e 1CD0     		beq	.L281
1937:FreeRTOS/Source/queue.c ****                         }
 3739              		.loc 1 1937 29 is_stmt 1 view .LVU1129
1937:FreeRTOS/Source/queue.c ****                         }
 3740              		.loc 1 1937 56 is_stmt 0 view .LVU1130
 3741 0090 0120     		movs	r0, #1
 3742 0092 C8F80000 		str	r0, [r8]
 3743 0096 C9E7     		b	.L274
 3744              	.L275:
 3745              	.LBB203:
1958:FreeRTOS/Source/queue.c ****             }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 132


 3746              		.loc 1 1958 17 is_stmt 1 view .LVU1131
 3747 0098 FFF7FEFF 		bl	uxTaskGetNumberOfTasks
 3748              	.LVL337:
1958:FreeRTOS/Source/queue.c ****             }
 3749              		.loc 1 1958 17 view .LVU1132
 3750 009c 8145     		cmp	r9, r0
 3751 009e 16D2     		bcs	.L282
1958:FreeRTOS/Source/queue.c ****             }
 3752              		.loc 1 1958 17 discriminator 1 view .LVU1133
 3753 00a0 B9F17F0F 		cmp	r9, #127
 3754 00a4 06D0     		beq	.L288
1958:FreeRTOS/Source/queue.c ****             }
 3755              		.loc 1 1958 17 discriminator 4 view .LVU1134
1958:FreeRTOS/Source/queue.c ****             }
 3756              		.loc 1 1958 17 discriminator 4 view .LVU1135
 3757 00a6 09F10103 		add	r3, r9, #1
 3758 00aa 5BB2     		sxtb	r3, r3
 3759 00ac 84F84430 		strb	r3, [r4, #68]
 3760              	.LBE203:
1961:FreeRTOS/Source/queue.c ****         }
 3761              		.loc 1 1961 21 is_stmt 0 discriminator 4 view .LVU1136
 3762 00b0 0120     		movs	r0, #1
 3763              	.LVL338:
1961:FreeRTOS/Source/queue.c ****         }
 3764              		.loc 1 1961 21 discriminator 4 view .LVU1137
 3765 00b2 BBE7     		b	.L274
 3766              	.LVL339:
 3767              	.L288:
 3768              	.LBB206:
1958:FreeRTOS/Source/queue.c ****             }
 3769              		.loc 1 1958 17 is_stmt 1 view .LVU1138
 3770              	.LBB204:
 3771              	.LBI204:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3772              		.loc 2 194 34 view .LVU1139
 3773              	.LBB205:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3774              		.loc 2 196 9 view .LVU1140
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3775              		.loc 2 198 9 view .LVU1141
 3776              		.syntax unified
 3777              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3778 00b4 4FF05003 			mov r3, #80												
 3779 00b8 83F31188 		msr basepri, r3											
 3780 00bc BFF36F8F 		isb														
 3781 00c0 BFF34F8F 		dsb														
 3782              	
 3783              	@ 0 "" 2
 3784              	.LVL340:
 3785              		.thumb
 3786              		.syntax unified
 3787              	.L277:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3788              		.loc 2 198 9 is_stmt 0 view .LVU1142
 3789              	.LBE205:
 3790              	.LBE204:
1958:FreeRTOS/Source/queue.c ****             }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 133


 3791              		.loc 1 1958 17 is_stmt 1 discriminator 5 view .LVU1143
1958:FreeRTOS/Source/queue.c ****             }
 3792              		.loc 1 1958 17 discriminator 5 view .LVU1144
 3793 00c4 FEE7     		b	.L277
 3794              	.LVL341:
 3795              	.L280:
1958:FreeRTOS/Source/queue.c ****             }
 3796              		.loc 1 1958 17 is_stmt 0 discriminator 5 view .LVU1145
 3797              	.LBE206:
1961:FreeRTOS/Source/queue.c ****         }
 3798              		.loc 1 1961 21 view .LVU1146
 3799 00c6 0120     		movs	r0, #1
 3800 00c8 B0E7     		b	.L274
 3801              	.L281:
 3802 00ca 0120     		movs	r0, #1
 3803 00cc AEE7     		b	.L274
 3804              	.LVL342:
 3805              	.L282:
1961:FreeRTOS/Source/queue.c ****         }
 3806              		.loc 1 1961 21 view .LVU1147
 3807 00ce 0120     		movs	r0, #1
 3808              	.LVL343:
1961:FreeRTOS/Source/queue.c ****         }
 3809              		.loc 1 1961 21 view .LVU1148
 3810 00d0 ACE7     		b	.L274
 3811              	.LBE202:
 3812              	.LBE213:
 3813              		.cfi_endproc
 3814              	.LFE19:
 3816              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 3817              		.align	1
 3818              		.global	xQueuePeekFromISR
 3819              		.syntax unified
 3820              		.thumb
 3821              		.thumb_func
 3823              	xQueuePeekFromISR:
 3824              	.LVL344:
 3825              	.LFB20:
1977:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
 3826              		.loc 1 1977 1 is_stmt 1 view -0
 3827              		.cfi_startproc
 3828              		@ args = 0, pretend = 0, frame = 0
 3829              		@ frame_needed = 0, uses_anonymous_args = 0
1977:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
 3830              		.loc 1 1977 1 is_stmt 0 view .LVU1150
 3831 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3832              	.LCFI38:
 3833              		.cfi_def_cfa_offset 24
 3834              		.cfi_offset 3, -24
 3835              		.cfi_offset 4, -20
 3836              		.cfi_offset 5, -16
 3837              		.cfi_offset 6, -12
 3838              		.cfi_offset 7, -8
 3839              		.cfi_offset 14, -4
1978:FreeRTOS/Source/queue.c ****     UBaseType_t uxSavedInterruptStatus;
 3840              		.loc 1 1978 5 is_stmt 1 view .LVU1151
1979:FreeRTOS/Source/queue.c ****     int8_t * pcOriginalReadPosition;
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 134


 3841              		.loc 1 1979 5 view .LVU1152
1980:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 3842              		.loc 1 1980 5 view .LVU1153
1981:FreeRTOS/Source/queue.c **** 
 3843              		.loc 1 1981 5 view .LVU1154
 3844              	.LVL345:
1983:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3845              		.loc 1 1983 5 view .LVU1155
 3846 0002 68B1     		cbz	r0, .L299
 3847 0004 0D46     		mov	r5, r1
 3848 0006 0446     		mov	r4, r0
1983:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3849              		.loc 1 1983 28 discriminator 2 view .LVU1156
1984:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3850              		.loc 1 1984 5 discriminator 2 view .LVU1157
 3851 0008 99B1     		cbz	r1, .L300
 3852              	.L292:
1984:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3853              		.loc 1 1984 95 discriminator 8 view .LVU1158
1985:FreeRTOS/Source/queue.c **** 
 3854              		.loc 1 1985 5 discriminator 8 view .LVU1159
 3855 000a 236C     		ldr	r3, [r4, #64]
 3856 000c EBB9     		cbnz	r3, .L294
1985:FreeRTOS/Source/queue.c **** 
 3857              		.loc 1 1985 5 view .LVU1160
 3858              	.LBB214:
 3859              	.LBI214:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3860              		.loc 2 194 34 view .LVU1161
 3861              	.LBB215:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3862              		.loc 2 196 9 view .LVU1162
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3863              		.loc 2 198 9 view .LVU1163
 3864              		.syntax unified
 3865              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3866 000e 4FF05003 			mov r3, #80												
 3867 0012 83F31188 		msr basepri, r3											
 3868 0016 BFF36F8F 		isb														
 3869 001a BFF34F8F 		dsb														
 3870              	
 3871              	@ 0 "" 2
 3872              	.LVL346:
 3873              		.thumb
 3874              		.syntax unified
 3875              	.L295:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3876              		.loc 2 198 9 is_stmt 0 view .LVU1164
 3877              	.LBE215:
 3878              	.LBE214:
1985:FreeRTOS/Source/queue.c **** 
 3879              		.loc 1 1985 5 is_stmt 1 discriminator 3 view .LVU1165
1985:FreeRTOS/Source/queue.c **** 
 3880              		.loc 1 1985 5 discriminator 3 view .LVU1166
 3881 001e FEE7     		b	.L295
 3882              	.L299:
1983:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 135


 3883              		.loc 1 1983 5 view .LVU1167
 3884              	.LBB216:
 3885              	.LBI216:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3886              		.loc 2 194 34 view .LVU1168
 3887              	.LBB217:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3888              		.loc 2 196 9 view .LVU1169
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3889              		.loc 2 198 9 view .LVU1170
 3890              		.syntax unified
 3891              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3892 0020 4FF05003 			mov r3, #80												
 3893 0024 83F31188 		msr basepri, r3											
 3894 0028 BFF36F8F 		isb														
 3895 002c BFF34F8F 		dsb														
 3896              	
 3897              	@ 0 "" 2
 3898              	.LVL347:
 3899              		.thumb
 3900              		.syntax unified
 3901              	.L291:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3902              		.loc 2 198 9 is_stmt 0 view .LVU1171
 3903              	.LBE217:
 3904              	.LBE216:
1983:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3905              		.loc 1 1983 5 is_stmt 1 discriminator 1 view .LVU1172
1983:FreeRTOS/Source/queue.c ****     configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3906              		.loc 1 1983 5 discriminator 1 view .LVU1173
 3907 0030 FEE7     		b	.L291
 3908              	.L300:
1984:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3909              		.loc 1 1984 5 is_stmt 0 discriminator 2 view .LVU1174
 3910 0032 036C     		ldr	r3, [r0, #64]
 3911 0034 002B     		cmp	r3, #0
 3912 0036 E8D0     		beq	.L292
1984:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3913              		.loc 1 1984 5 is_stmt 1 view .LVU1175
 3914              	.LBB218:
 3915              	.LBI218:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3916              		.loc 2 194 34 view .LVU1176
 3917              	.LBB219:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3918              		.loc 2 196 9 view .LVU1177
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3919              		.loc 2 198 9 view .LVU1178
 3920              		.syntax unified
 3921              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3922 0038 4FF05003 			mov r3, #80												
 3923 003c 83F31188 		msr basepri, r3											
 3924 0040 BFF36F8F 		isb														
 3925 0044 BFF34F8F 		dsb														
 3926              	
 3927              	@ 0 "" 2
 3928              	.LVL348:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 136


 3929              		.thumb
 3930              		.syntax unified
 3931              	.L293:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3932              		.loc 2 198 9 is_stmt 0 view .LVU1179
 3933              	.LBE219:
 3934              	.LBE218:
1984:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3935              		.loc 1 1984 5 is_stmt 1 discriminator 2 view .LVU1180
1984:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3936              		.loc 1 1984 5 discriminator 2 view .LVU1181
 3937 0048 FEE7     		b	.L293
 3938              	.L294:
1985:FreeRTOS/Source/queue.c **** 
 3939              		.loc 1 1985 45 discriminator 2 view .LVU1182
2001:FreeRTOS/Source/queue.c **** 
 3940              		.loc 1 2001 5 discriminator 2 view .LVU1183
 3941 004a FFF7FEFF 		bl	vPortValidateInterruptPriority
 3942              	.LVL349:
2003:FreeRTOS/Source/queue.c ****     {
 3943              		.loc 1 2003 5 discriminator 2 view .LVU1184
 3944              	.LBB220:
 3945              	.LBI220:
 210:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3946              		.loc 2 210 38 discriminator 2 view .LVU1185
 3947              	.LBB221:
 212:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3948              		.loc 2 212 9 discriminator 2 view .LVU1186
 214:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3949              		.loc 2 214 9 discriminator 2 view .LVU1187
 3950              		.syntax unified
 3951              	@ 214 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3952 004e EFF31186 			mrs r6, basepri											
 3953 0052 4FF05003 		mov r3, #80												
 3954 0056 83F31188 		msr basepri, r3											
 3955 005a BFF36F8F 		isb														
 3956 005e BFF34F8F 		dsb														
 3957              	
 3958              	@ 0 "" 2
 3959              	.LVL350:
 226:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 3960              		.loc 2 226 9 discriminator 2 view .LVU1188
 226:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 3961              		.loc 2 226 9 is_stmt 0 discriminator 2 view .LVU1189
 3962              		.thumb
 3963              		.syntax unified
 3964              	.LBE221:
 3965              	.LBE220:
2006:FreeRTOS/Source/queue.c ****         {
 3966              		.loc 1 2006 9 is_stmt 1 discriminator 2 view .LVU1190
2006:FreeRTOS/Source/queue.c ****         {
 3967              		.loc 1 2006 20 is_stmt 0 discriminator 2 view .LVU1191
 3968 0062 A36B     		ldr	r3, [r4, #56]
2006:FreeRTOS/Source/queue.c ****         {
 3969              		.loc 1 2006 11 discriminator 2 view .LVU1192
 3970 0064 1BB9     		cbnz	r3, .L301
2020:FreeRTOS/Source/queue.c ****             traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 137


 3971              		.loc 1 2020 21 view .LVU1193
 3972 0066 0020     		movs	r0, #0
 3973              	.L296:
 3974              	.LVL351:
2021:FreeRTOS/Source/queue.c ****         }
 3975              		.loc 1 2021 55 is_stmt 1 view .LVU1194
2024:FreeRTOS/Source/queue.c **** 
 3976              		.loc 1 2024 5 view .LVU1195
 3977              	.LBB222:
 3978              	.LBI222:
 230:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3979              		.loc 2 230 34 view .LVU1196
 3980              	.LBB223:
 3981              		.loc 2 232 9 view .LVU1197
 3982              		.syntax unified
 3983              	@ 232 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3984 0068 86F31188 			msr basepri, r6	
 3985              	@ 0 "" 2
 3986              		.thumb
 3987              		.syntax unified
 3988              	.LBE223:
 3989              	.LBE222:
2026:FreeRTOS/Source/queue.c **** }
 3990              		.loc 1 2026 5 view .LVU1198
2027:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3991              		.loc 1 2027 1 is_stmt 0 view .LVU1199
 3992 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3993              	.LVL352:
 3994              	.L301:
2008:FreeRTOS/Source/queue.c **** 
 3995              		.loc 1 2008 48 is_stmt 1 view .LVU1200
2012:FreeRTOS/Source/queue.c ****             prvCopyDataFromQueue( pxQueue, pvBuffer );
 3996              		.loc 1 2012 13 view .LVU1201
2012:FreeRTOS/Source/queue.c ****             prvCopyDataFromQueue( pxQueue, pvBuffer );
 3997              		.loc 1 2012 36 is_stmt 0 view .LVU1202
 3998 006e E768     		ldr	r7, [r4, #12]
 3999              	.LVL353:
2013:FreeRTOS/Source/queue.c ****             pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 4000              		.loc 1 2013 13 is_stmt 1 view .LVU1203
 4001 0070 2946     		mov	r1, r5
 4002 0072 2046     		mov	r0, r4
 4003 0074 FFF7FEFF 		bl	prvCopyDataFromQueue
 4004              	.LVL354:
2014:FreeRTOS/Source/queue.c **** 
 4005              		.loc 1 2014 13 view .LVU1204
2014:FreeRTOS/Source/queue.c **** 
 4006              		.loc 1 2014 42 is_stmt 0 view .LVU1205
 4007 0078 E760     		str	r7, [r4, #12]
2016:FreeRTOS/Source/queue.c ****         }
 4008              		.loc 1 2016 13 is_stmt 1 view .LVU1206
 4009              	.LVL355:
2016:FreeRTOS/Source/queue.c ****         }
 4010              		.loc 1 2016 21 is_stmt 0 view .LVU1207
 4011 007a 0120     		movs	r0, #1
 4012 007c F4E7     		b	.L296
 4013              		.cfi_endproc
 4014              	.LFE20:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 138


 4016              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 4017              		.align	1
 4018              		.global	uxQueueMessagesWaiting
 4019              		.syntax unified
 4020              		.thumb
 4021              		.thumb_func
 4023              	uxQueueMessagesWaiting:
 4024              	.LVL356:
 4025              	.LFB21:
2031:FreeRTOS/Source/queue.c ****     UBaseType_t uxReturn;
 4026              		.loc 1 2031 1 is_stmt 1 view -0
 4027              		.cfi_startproc
 4028              		@ args = 0, pretend = 0, frame = 0
 4029              		@ frame_needed = 0, uses_anonymous_args = 0
2032:FreeRTOS/Source/queue.c **** 
 4030              		.loc 1 2032 5 view .LVU1209
2034:FreeRTOS/Source/queue.c **** 
 4031              		.loc 1 2034 5 view .LVU1210
 4032 0000 40B1     		cbz	r0, .L307
2031:FreeRTOS/Source/queue.c ****     UBaseType_t uxReturn;
 4033              		.loc 1 2031 1 is_stmt 0 discriminator 2 view .LVU1211
 4034 0002 10B5     		push	{r4, lr}
 4035              	.LCFI39:
 4036              		.cfi_def_cfa_offset 8
 4037              		.cfi_offset 4, -8
 4038              		.cfi_offset 14, -4
 4039 0004 0446     		mov	r4, r0
2034:FreeRTOS/Source/queue.c **** 
 4040              		.loc 1 2034 27 is_stmt 1 discriminator 2 view .LVU1212
2036:FreeRTOS/Source/queue.c ****     {
 4041              		.loc 1 2036 5 discriminator 2 view .LVU1213
 4042 0006 FFF7FEFF 		bl	vPortEnterCritical
 4043              	.LVL357:
2038:FreeRTOS/Source/queue.c ****     }
 4044              		.loc 1 2038 9 discriminator 2 view .LVU1214
2038:FreeRTOS/Source/queue.c ****     }
 4045              		.loc 1 2038 18 is_stmt 0 discriminator 2 view .LVU1215
 4046 000a A46B     		ldr	r4, [r4, #56]
 4047              	.LVL358:
2040:FreeRTOS/Source/queue.c **** 
 4048              		.loc 1 2040 5 is_stmt 1 discriminator 2 view .LVU1216
 4049 000c FFF7FEFF 		bl	vPortExitCritical
 4050              	.LVL359:
2042:FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 4051              		.loc 1 2042 5 discriminator 2 view .LVU1217
2043:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4052              		.loc 1 2043 1 is_stmt 0 discriminator 2 view .LVU1218
 4053 0010 2046     		mov	r0, r4
 4054 0012 10BD     		pop	{r4, pc}
 4055              	.LVL360:
 4056              	.L307:
 4057              	.LCFI40:
 4058              		.cfi_def_cfa_offset 0
 4059              		.cfi_restore 4
 4060              		.cfi_restore 14
2034:FreeRTOS/Source/queue.c **** 
 4061              		.loc 1 2034 5 is_stmt 1 view .LVU1219
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 139


 4062              	.LBB224:
 4063              	.LBI224:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4064              		.loc 2 194 34 view .LVU1220
 4065              	.LBB225:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4066              		.loc 2 196 9 view .LVU1221
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4067              		.loc 2 198 9 view .LVU1222
 4068              		.syntax unified
 4069              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4070 0014 4FF05003 			mov r3, #80												
 4071 0018 83F31188 		msr basepri, r3											
 4072 001c BFF36F8F 		isb														
 4073 0020 BFF34F8F 		dsb														
 4074              	
 4075              	@ 0 "" 2
 4076              	.LVL361:
 4077              		.thumb
 4078              		.syntax unified
 4079              	.L304:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4080              		.loc 2 198 9 is_stmt 0 view .LVU1223
 4081              	.LBE225:
 4082              	.LBE224:
2034:FreeRTOS/Source/queue.c **** 
 4083              		.loc 1 2034 5 is_stmt 1 discriminator 1 view .LVU1224
2034:FreeRTOS/Source/queue.c **** 
 4084              		.loc 1 2034 5 discriminator 1 view .LVU1225
 4085 0024 FEE7     		b	.L304
 4086              		.cfi_endproc
 4087              	.LFE21:
 4089              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 4090              		.align	1
 4091              		.global	uxQueueSpacesAvailable
 4092              		.syntax unified
 4093              		.thumb
 4094              		.thumb_func
 4096              	uxQueueSpacesAvailable:
 4097              	.LVL362:
 4098              	.LFB22:
2047:FreeRTOS/Source/queue.c ****     UBaseType_t uxReturn;
 4099              		.loc 1 2047 1 view -0
 4100              		.cfi_startproc
 4101              		@ args = 0, pretend = 0, frame = 0
 4102              		@ frame_needed = 0, uses_anonymous_args = 0
2047:FreeRTOS/Source/queue.c ****     UBaseType_t uxReturn;
 4103              		.loc 1 2047 1 is_stmt 0 view .LVU1227
 4104 0000 38B5     		push	{r3, r4, r5, lr}
 4105              	.LCFI41:
 4106              		.cfi_def_cfa_offset 16
 4107              		.cfi_offset 3, -16
 4108              		.cfi_offset 4, -12
 4109              		.cfi_offset 5, -8
 4110              		.cfi_offset 14, -4
2048:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 4111              		.loc 1 2048 5 is_stmt 1 view .LVU1228
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 140


2049:FreeRTOS/Source/queue.c **** 
 4112              		.loc 1 2049 5 view .LVU1229
 4113              	.LVL363:
2051:FreeRTOS/Source/queue.c **** 
 4114              		.loc 1 2051 5 view .LVU1230
 4115 0002 48B1     		cbz	r0, .L312
 4116 0004 0546     		mov	r5, r0
2051:FreeRTOS/Source/queue.c **** 
 4117              		.loc 1 2051 28 discriminator 2 view .LVU1231
2053:FreeRTOS/Source/queue.c ****     {
 4118              		.loc 1 2053 5 discriminator 2 view .LVU1232
 4119 0006 FFF7FEFF 		bl	vPortEnterCritical
 4120              	.LVL364:
2055:FreeRTOS/Source/queue.c ****     }
 4121              		.loc 1 2055 9 discriminator 2 view .LVU1233
2055:FreeRTOS/Source/queue.c ****     }
 4122              		.loc 1 2055 27 is_stmt 0 discriminator 2 view .LVU1234
 4123 000a EC6B     		ldr	r4, [r5, #60]
2055:FreeRTOS/Source/queue.c ****     }
 4124              		.loc 1 2055 47 discriminator 2 view .LVU1235
 4125 000c AB6B     		ldr	r3, [r5, #56]
2055:FreeRTOS/Source/queue.c ****     }
 4126              		.loc 1 2055 18 discriminator 2 view .LVU1236
 4127 000e E41A     		subs	r4, r4, r3
 4128              	.LVL365:
2057:FreeRTOS/Source/queue.c **** 
 4129              		.loc 1 2057 5 is_stmt 1 discriminator 2 view .LVU1237
 4130 0010 FFF7FEFF 		bl	vPortExitCritical
 4131              	.LVL366:
2059:FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 4132              		.loc 1 2059 5 discriminator 2 view .LVU1238
2060:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4133              		.loc 1 2060 1 is_stmt 0 discriminator 2 view .LVU1239
 4134 0014 2046     		mov	r0, r4
 4135 0016 38BD     		pop	{r3, r4, r5, pc}
 4136              	.LVL367:
 4137              	.L312:
2051:FreeRTOS/Source/queue.c **** 
 4138              		.loc 1 2051 5 is_stmt 1 view .LVU1240
 4139              	.LBB226:
 4140              	.LBI226:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4141              		.loc 2 194 34 view .LVU1241
 4142              	.LBB227:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4143              		.loc 2 196 9 view .LVU1242
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4144              		.loc 2 198 9 view .LVU1243
 4145              		.syntax unified
 4146              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4147 0018 4FF05003 			mov r3, #80												
 4148 001c 83F31188 		msr basepri, r3											
 4149 0020 BFF36F8F 		isb														
 4150 0024 BFF34F8F 		dsb														
 4151              	
 4152              	@ 0 "" 2
 4153              	.LVL368:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 141


 4154              		.thumb
 4155              		.syntax unified
 4156              	.L310:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4157              		.loc 2 198 9 is_stmt 0 view .LVU1244
 4158              	.LBE227:
 4159              	.LBE226:
2051:FreeRTOS/Source/queue.c **** 
 4160              		.loc 1 2051 5 is_stmt 1 discriminator 1 view .LVU1245
2051:FreeRTOS/Source/queue.c **** 
 4161              		.loc 1 2051 5 discriminator 1 view .LVU1246
 4162 0028 FEE7     		b	.L310
 4163              		.cfi_endproc
 4164              	.LFE22:
 4166              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 4167              		.align	1
 4168              		.global	uxQueueMessagesWaitingFromISR
 4169              		.syntax unified
 4170              		.thumb
 4171              		.thumb_func
 4173              	uxQueueMessagesWaitingFromISR:
 4174              	.LVL369:
 4175              	.LFB23:
2064:FreeRTOS/Source/queue.c ****     UBaseType_t uxReturn;
 4176              		.loc 1 2064 1 view -0
 4177              		.cfi_startproc
 4178              		@ args = 0, pretend = 0, frame = 0
 4179              		@ frame_needed = 0, uses_anonymous_args = 0
 4180              		@ link register save eliminated.
2065:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 4181              		.loc 1 2065 5 view .LVU1248
2066:FreeRTOS/Source/queue.c **** 
 4182              		.loc 1 2066 5 view .LVU1249
2068:FreeRTOS/Source/queue.c ****     uxReturn = pxQueue->uxMessagesWaiting;
 4183              		.loc 1 2068 5 view .LVU1250
 4184 0000 08B1     		cbz	r0, .L316
2068:FreeRTOS/Source/queue.c ****     uxReturn = pxQueue->uxMessagesWaiting;
 4185              		.loc 1 2068 28 discriminator 2 view .LVU1251
2069:FreeRTOS/Source/queue.c **** 
 4186              		.loc 1 2069 5 discriminator 2 view .LVU1252
2069:FreeRTOS/Source/queue.c **** 
 4187              		.loc 1 2069 14 is_stmt 0 discriminator 2 view .LVU1253
 4188 0002 806B     		ldr	r0, [r0, #56]
 4189              	.LVL370:
2071:FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 4190              		.loc 1 2071 5 is_stmt 1 discriminator 2 view .LVU1254
2072:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4191              		.loc 1 2072 1 is_stmt 0 discriminator 2 view .LVU1255
 4192 0004 7047     		bx	lr
 4193              	.LVL371:
 4194              	.L316:
2068:FreeRTOS/Source/queue.c ****     uxReturn = pxQueue->uxMessagesWaiting;
 4195              		.loc 1 2068 5 is_stmt 1 view .LVU1256
 4196              	.LBB228:
 4197              	.LBI228:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4198              		.loc 2 194 34 view .LVU1257
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 142


 4199              	.LBB229:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4200              		.loc 2 196 9 view .LVU1258
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4201              		.loc 2 198 9 view .LVU1259
 4202              		.syntax unified
 4203              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4204 0006 4FF05003 			mov r3, #80												
 4205 000a 83F31188 		msr basepri, r3											
 4206 000e BFF36F8F 		isb														
 4207 0012 BFF34F8F 		dsb														
 4208              	
 4209              	@ 0 "" 2
 4210              	.LVL372:
 4211              		.thumb
 4212              		.syntax unified
 4213              	.L315:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4214              		.loc 2 198 9 is_stmt 0 view .LVU1260
 4215              	.LBE229:
 4216              	.LBE228:
2068:FreeRTOS/Source/queue.c ****     uxReturn = pxQueue->uxMessagesWaiting;
 4217              		.loc 1 2068 5 is_stmt 1 discriminator 1 view .LVU1261
2068:FreeRTOS/Source/queue.c ****     uxReturn = pxQueue->uxMessagesWaiting;
 4218              		.loc 1 2068 5 discriminator 1 view .LVU1262
 4219 0016 FEE7     		b	.L315
 4220              		.cfi_endproc
 4221              	.LFE23:
 4223              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 4224              		.align	1
 4225              		.global	uxQueueGetQueueNumber
 4226              		.syntax unified
 4227              		.thumb
 4228              		.thumb_func
 4230              	uxQueueGetQueueNumber:
 4231              	.LVL373:
 4232              	.LFB25:
2120:FreeRTOS/Source/queue.c ****         return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 4233              		.loc 1 2120 5 view -0
 4234              		.cfi_startproc
 4235              		@ args = 0, pretend = 0, frame = 0
 4236              		@ frame_needed = 0, uses_anonymous_args = 0
 4237              		@ link register save eliminated.
2121:FreeRTOS/Source/queue.c ****     }
 4238              		.loc 1 2121 9 view .LVU1264
2122:FreeRTOS/Source/queue.c **** 
 4239              		.loc 1 2122 5 is_stmt 0 view .LVU1265
 4240 0000 806C     		ldr	r0, [r0, #72]
 4241              	.LVL374:
2122:FreeRTOS/Source/queue.c **** 
 4242              		.loc 1 2122 5 view .LVU1266
 4243 0002 7047     		bx	lr
 4244              		.cfi_endproc
 4245              	.LFE25:
 4247              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 4248              		.align	1
 4249              		.global	vQueueSetQueueNumber
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 143


 4250              		.syntax unified
 4251              		.thumb
 4252              		.thumb_func
 4254              	vQueueSetQueueNumber:
 4255              	.LVL375:
 4256              	.LFB26:
2131:FreeRTOS/Source/queue.c ****         ( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 4257              		.loc 1 2131 5 is_stmt 1 view -0
 4258              		.cfi_startproc
 4259              		@ args = 0, pretend = 0, frame = 0
 4260              		@ frame_needed = 0, uses_anonymous_args = 0
 4261              		@ link register save eliminated.
2132:FreeRTOS/Source/queue.c ****     }
 4262              		.loc 1 2132 9 view .LVU1268
2132:FreeRTOS/Source/queue.c ****     }
 4263              		.loc 1 2132 49 is_stmt 0 view .LVU1269
 4264 0000 8164     		str	r1, [r0, #72]
2133:FreeRTOS/Source/queue.c **** 
 4265              		.loc 1 2133 5 view .LVU1270
 4266 0002 7047     		bx	lr
 4267              		.cfi_endproc
 4268              	.LFE26:
 4270              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 4271              		.align	1
 4272              		.global	ucQueueGetQueueType
 4273              		.syntax unified
 4274              		.thumb
 4275              		.thumb_func
 4277              	ucQueueGetQueueType:
 4278              	.LVL376:
 4279              	.LFB27:
2141:FreeRTOS/Source/queue.c ****         return ( ( Queue_t * ) xQueue )->ucQueueType;
 4280              		.loc 1 2141 5 is_stmt 1 view -0
 4281              		.cfi_startproc
 4282              		@ args = 0, pretend = 0, frame = 0
 4283              		@ frame_needed = 0, uses_anonymous_args = 0
 4284              		@ link register save eliminated.
2142:FreeRTOS/Source/queue.c ****     }
 4285              		.loc 1 2142 9 view .LVU1272
2143:FreeRTOS/Source/queue.c **** 
 4286              		.loc 1 2143 5 is_stmt 0 view .LVU1273
 4287 0000 90F84C00 		ldrb	r0, [r0, #76]	@ zero_extendqisi2
 4288              	.LVL377:
2143:FreeRTOS/Source/queue.c **** 
 4289              		.loc 1 2143 5 view .LVU1274
 4290 0004 7047     		bx	lr
 4291              		.cfi_endproc
 4292              	.LFE27:
 4294              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 4295              		.align	1
 4296              		.global	xQueueIsQueueEmptyFromISR
 4297              		.syntax unified
 4298              		.thumb
 4299              		.thumb_func
 4301              	xQueueIsQueueEmptyFromISR:
 4302              	.LVL378:
 4303              	.LFB33:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 144


2421:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
 4304              		.loc 1 2421 1 is_stmt 1 view -0
 4305              		.cfi_startproc
 4306              		@ args = 0, pretend = 0, frame = 0
 4307              		@ frame_needed = 0, uses_anonymous_args = 0
 4308              		@ link register save eliminated.
2422:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 4309              		.loc 1 2422 5 view .LVU1276
2423:FreeRTOS/Source/queue.c **** 
 4310              		.loc 1 2423 5 view .LVU1277
2425:FreeRTOS/Source/queue.c **** 
 4311              		.loc 1 2425 5 view .LVU1278
 4312 0000 18B1     		cbz	r0, .L325
2425:FreeRTOS/Source/queue.c **** 
 4313              		.loc 1 2425 28 discriminator 2 view .LVU1279
2427:FreeRTOS/Source/queue.c ****     {
 4314              		.loc 1 2427 5 discriminator 2 view .LVU1280
2427:FreeRTOS/Source/queue.c ****     {
 4315              		.loc 1 2427 16 is_stmt 0 discriminator 2 view .LVU1281
 4316 0002 836B     		ldr	r3, [r0, #56]
2427:FreeRTOS/Source/queue.c ****     {
 4317              		.loc 1 2427 7 discriminator 2 view .LVU1282
 4318 0004 53B9     		cbnz	r3, .L324
2429:FreeRTOS/Source/queue.c ****     }
 4319              		.loc 1 2429 17 view .LVU1283
 4320 0006 0120     		movs	r0, #1
 4321              	.LVL379:
2429:FreeRTOS/Source/queue.c ****     }
 4322              		.loc 1 2429 17 view .LVU1284
 4323 0008 7047     		bx	lr
 4324              	.LVL380:
 4325              	.L325:
2425:FreeRTOS/Source/queue.c **** 
 4326              		.loc 1 2425 5 is_stmt 1 view .LVU1285
 4327              	.LBB230:
 4328              	.LBI230:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4329              		.loc 2 194 34 view .LVU1286
 4330              	.LBB231:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4331              		.loc 2 196 9 view .LVU1287
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4332              		.loc 2 198 9 view .LVU1288
 4333              		.syntax unified
 4334              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4335 000a 4FF05003 			mov r3, #80												
 4336 000e 83F31188 		msr basepri, r3											
 4337 0012 BFF36F8F 		isb														
 4338 0016 BFF34F8F 		dsb														
 4339              	
 4340              	@ 0 "" 2
 4341              	.LVL381:
 4342              		.thumb
 4343              		.syntax unified
 4344              	.L322:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4345              		.loc 2 198 9 is_stmt 0 view .LVU1289
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 145


 4346              	.LBE231:
 4347              	.LBE230:
2425:FreeRTOS/Source/queue.c **** 
 4348              		.loc 1 2425 5 is_stmt 1 discriminator 1 view .LVU1290
2425:FreeRTOS/Source/queue.c **** 
 4349              		.loc 1 2425 5 discriminator 1 view .LVU1291
 4350 001a FEE7     		b	.L322
 4351              	.L324:
2433:FreeRTOS/Source/queue.c ****     }
 4352              		.loc 1 2433 17 is_stmt 0 view .LVU1292
 4353 001c 0020     		movs	r0, #0
 4354              	.LVL382:
2436:FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4355              		.loc 1 2436 5 is_stmt 1 view .LVU1293
2437:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4356              		.loc 1 2437 1 is_stmt 0 view .LVU1294
 4357 001e 7047     		bx	lr
 4358              		.cfi_endproc
 4359              	.LFE33:
 4361              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 4362              		.align	1
 4363              		.global	xQueueIsQueueFullFromISR
 4364              		.syntax unified
 4365              		.thumb
 4366              		.thumb_func
 4368              	xQueueIsQueueFullFromISR:
 4369              	.LVL383:
 4370              	.LFB35:
2459:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2460:FreeRTOS/Source/queue.c **** 
2461:FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2462:FreeRTOS/Source/queue.c **** {
 4371              		.loc 1 2462 1 is_stmt 1 view -0
 4372              		.cfi_startproc
 4373              		@ args = 0, pretend = 0, frame = 0
 4374              		@ frame_needed = 0, uses_anonymous_args = 0
 4375              		@ link register save eliminated.
2463:FreeRTOS/Source/queue.c ****     BaseType_t xReturn;
 4376              		.loc 1 2463 5 view .LVU1296
2464:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 4377              		.loc 1 2464 5 view .LVU1297
2465:FreeRTOS/Source/queue.c **** 
2466:FreeRTOS/Source/queue.c ****     configASSERT( pxQueue );
 4378              		.loc 1 2466 5 view .LVU1298
 4379 0000 28B1     		cbz	r0, .L331
 4380              		.loc 1 2466 28 discriminator 2 view .LVU1299
2467:FreeRTOS/Source/queue.c **** 
2468:FreeRTOS/Source/queue.c ****     if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 4381              		.loc 1 2468 5 discriminator 2 view .LVU1300
 4382              		.loc 1 2468 16 is_stmt 0 discriminator 2 view .LVU1301
 4383 0002 826B     		ldr	r2, [r0, #56]
 4384              		.loc 1 2468 46 discriminator 2 view .LVU1302
 4385 0004 C36B     		ldr	r3, [r0, #60]
 4386              		.loc 1 2468 7 discriminator 2 view .LVU1303
 4387 0006 9A42     		cmp	r2, r3
 4388 0008 0AD0     		beq	.L332
2469:FreeRTOS/Source/queue.c ****     {
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 146


2470:FreeRTOS/Source/queue.c ****         xReturn = pdTRUE;
2471:FreeRTOS/Source/queue.c ****     }
2472:FreeRTOS/Source/queue.c ****     else
2473:FreeRTOS/Source/queue.c ****     {
2474:FreeRTOS/Source/queue.c ****         xReturn = pdFALSE;
 4389              		.loc 1 2474 17 view .LVU1304
 4390 000a 0020     		movs	r0, #0
 4391              	.LVL384:
2475:FreeRTOS/Source/queue.c ****     }
2476:FreeRTOS/Source/queue.c **** 
2477:FreeRTOS/Source/queue.c ****     return xReturn;
 4392              		.loc 1 2477 5 is_stmt 1 view .LVU1305
2478:FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4393              		.loc 1 2478 1 is_stmt 0 view .LVU1306
 4394 000c 7047     		bx	lr
 4395              	.LVL385:
 4396              	.L331:
2466:FreeRTOS/Source/queue.c **** 
 4397              		.loc 1 2466 5 is_stmt 1 view .LVU1307
 4398              	.LBB232:
 4399              	.LBI232:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4400              		.loc 2 194 34 view .LVU1308
 4401              	.LBB233:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4402              		.loc 2 196 9 view .LVU1309
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4403              		.loc 2 198 9 view .LVU1310
 4404              		.syntax unified
 4405              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4406 000e 4FF05003 			mov r3, #80												
 4407 0012 83F31188 		msr basepri, r3											
 4408 0016 BFF36F8F 		isb														
 4409 001a BFF34F8F 		dsb														
 4410              	
 4411              	@ 0 "" 2
 4412              	.LVL386:
 4413              		.thumb
 4414              		.syntax unified
 4415              	.L328:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4416              		.loc 2 198 9 is_stmt 0 view .LVU1311
 4417              	.LBE233:
 4418              	.LBE232:
2466:FreeRTOS/Source/queue.c **** 
 4419              		.loc 1 2466 5 is_stmt 1 discriminator 1 view .LVU1312
2466:FreeRTOS/Source/queue.c **** 
 4420              		.loc 1 2466 5 discriminator 1 view .LVU1313
 4421 001e FEE7     		b	.L328
 4422              	.L332:
2470:FreeRTOS/Source/queue.c ****     }
 4423              		.loc 1 2470 17 is_stmt 0 view .LVU1314
 4424 0020 0120     		movs	r0, #1
 4425              	.LVL387:
2470:FreeRTOS/Source/queue.c ****     }
 4426              		.loc 1 2470 17 view .LVU1315
 4427 0022 7047     		bx	lr
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 147


 4428              		.cfi_endproc
 4429              	.LFE35:
 4431              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 4432              		.align	1
 4433              		.global	vQueueAddToRegistry
 4434              		.syntax unified
 4435              		.thumb
 4436              		.thumb_func
 4438              	vQueueAddToRegistry:
 4439              	.LVL388:
 4440              	.LFB36:
2479:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2480:FreeRTOS/Source/queue.c **** 
2481:FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2482:FreeRTOS/Source/queue.c **** 
2483:FreeRTOS/Source/queue.c ****     BaseType_t xQueueCRSend( QueueHandle_t xQueue,
2484:FreeRTOS/Source/queue.c ****                              const void * pvItemToQueue,
2485:FreeRTOS/Source/queue.c ****                              TickType_t xTicksToWait )
2486:FreeRTOS/Source/queue.c ****     {
2487:FreeRTOS/Source/queue.c ****         BaseType_t xReturn;
2488:FreeRTOS/Source/queue.c ****         Queue_t * const pxQueue = xQueue;
2489:FreeRTOS/Source/queue.c **** 
2490:FreeRTOS/Source/queue.c ****         /* If the queue is already full we may have to block.  A critical section
2491:FreeRTOS/Source/queue.c ****          * is required to prevent an interrupt removing something from the queue
2492:FreeRTOS/Source/queue.c ****          * between the check to see if the queue is full and blocking on the queue. */
2493:FreeRTOS/Source/queue.c ****         portDISABLE_INTERRUPTS();
2494:FreeRTOS/Source/queue.c ****         {
2495:FreeRTOS/Source/queue.c ****             if( prvIsQueueFull( pxQueue ) != pdFALSE )
2496:FreeRTOS/Source/queue.c ****             {
2497:FreeRTOS/Source/queue.c ****                 /* The queue is full - do we want to block or just leave without
2498:FreeRTOS/Source/queue.c ****                  * posting? */
2499:FreeRTOS/Source/queue.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
2500:FreeRTOS/Source/queue.c ****                 {
2501:FreeRTOS/Source/queue.c ****                     /* As this is called from a coroutine we cannot block directly, but
2502:FreeRTOS/Source/queue.c ****                      * return indicating that we need to block. */
2503:FreeRTOS/Source/queue.c ****                     vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2504:FreeRTOS/Source/queue.c ****                     portENABLE_INTERRUPTS();
2505:FreeRTOS/Source/queue.c ****                     return errQUEUE_BLOCKED;
2506:FreeRTOS/Source/queue.c ****                 }
2507:FreeRTOS/Source/queue.c ****                 else
2508:FreeRTOS/Source/queue.c ****                 {
2509:FreeRTOS/Source/queue.c ****                     portENABLE_INTERRUPTS();
2510:FreeRTOS/Source/queue.c ****                     return errQUEUE_FULL;
2511:FreeRTOS/Source/queue.c ****                 }
2512:FreeRTOS/Source/queue.c ****             }
2513:FreeRTOS/Source/queue.c ****         }
2514:FreeRTOS/Source/queue.c ****         portENABLE_INTERRUPTS();
2515:FreeRTOS/Source/queue.c **** 
2516:FreeRTOS/Source/queue.c ****         portDISABLE_INTERRUPTS();
2517:FreeRTOS/Source/queue.c ****         {
2518:FreeRTOS/Source/queue.c ****             if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2519:FreeRTOS/Source/queue.c ****             {
2520:FreeRTOS/Source/queue.c ****                 /* There is room in the queue, copy the data into the queue. */
2521:FreeRTOS/Source/queue.c ****                 prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2522:FreeRTOS/Source/queue.c ****                 xReturn = pdPASS;
2523:FreeRTOS/Source/queue.c **** 
2524:FreeRTOS/Source/queue.c ****                 /* Were any co-routines waiting for data to become available? */
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 148


2525:FreeRTOS/Source/queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2526:FreeRTOS/Source/queue.c ****                 {
2527:FreeRTOS/Source/queue.c ****                     /* In this instance the co-routine could be placed directly
2528:FreeRTOS/Source/queue.c ****                      * into the ready list as we are within a critical section.
2529:FreeRTOS/Source/queue.c ****                      * Instead the same pending ready list mechanism is used as if
2530:FreeRTOS/Source/queue.c ****                      * the event were caused from within an interrupt. */
2531:FreeRTOS/Source/queue.c ****                     if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pd
2532:FreeRTOS/Source/queue.c ****                     {
2533:FreeRTOS/Source/queue.c ****                         /* The co-routine waiting has a higher priority so record
2534:FreeRTOS/Source/queue.c ****                          * that a yield might be appropriate. */
2535:FreeRTOS/Source/queue.c ****                         xReturn = errQUEUE_YIELD;
2536:FreeRTOS/Source/queue.c ****                     }
2537:FreeRTOS/Source/queue.c ****                     else
2538:FreeRTOS/Source/queue.c ****                     {
2539:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
2540:FreeRTOS/Source/queue.c ****                     }
2541:FreeRTOS/Source/queue.c ****                 }
2542:FreeRTOS/Source/queue.c ****                 else
2543:FreeRTOS/Source/queue.c ****                 {
2544:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
2545:FreeRTOS/Source/queue.c ****                 }
2546:FreeRTOS/Source/queue.c ****             }
2547:FreeRTOS/Source/queue.c ****             else
2548:FreeRTOS/Source/queue.c ****             {
2549:FreeRTOS/Source/queue.c ****                 xReturn = errQUEUE_FULL;
2550:FreeRTOS/Source/queue.c ****             }
2551:FreeRTOS/Source/queue.c ****         }
2552:FreeRTOS/Source/queue.c ****         portENABLE_INTERRUPTS();
2553:FreeRTOS/Source/queue.c **** 
2554:FreeRTOS/Source/queue.c ****         return xReturn;
2555:FreeRTOS/Source/queue.c ****     }
2556:FreeRTOS/Source/queue.c **** 
2557:FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2558:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2559:FreeRTOS/Source/queue.c **** 
2560:FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2561:FreeRTOS/Source/queue.c **** 
2562:FreeRTOS/Source/queue.c ****     BaseType_t xQueueCRReceive( QueueHandle_t xQueue,
2563:FreeRTOS/Source/queue.c ****                                 void * pvBuffer,
2564:FreeRTOS/Source/queue.c ****                                 TickType_t xTicksToWait )
2565:FreeRTOS/Source/queue.c ****     {
2566:FreeRTOS/Source/queue.c ****         BaseType_t xReturn;
2567:FreeRTOS/Source/queue.c ****         Queue_t * const pxQueue = xQueue;
2568:FreeRTOS/Source/queue.c **** 
2569:FreeRTOS/Source/queue.c ****         /* If the queue is already empty we may have to block.  A critical section
2570:FreeRTOS/Source/queue.c ****          * is required to prevent an interrupt adding something to the queue
2571:FreeRTOS/Source/queue.c ****          * between the check to see if the queue is empty and blocking on the queue. */
2572:FreeRTOS/Source/queue.c ****         portDISABLE_INTERRUPTS();
2573:FreeRTOS/Source/queue.c ****         {
2574:FreeRTOS/Source/queue.c ****             if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2575:FreeRTOS/Source/queue.c ****             {
2576:FreeRTOS/Source/queue.c ****                 /* There are no messages in the queue, do we want to block or just
2577:FreeRTOS/Source/queue.c ****                  * leave with nothing? */
2578:FreeRTOS/Source/queue.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
2579:FreeRTOS/Source/queue.c ****                 {
2580:FreeRTOS/Source/queue.c ****                     /* As this is a co-routine we cannot block directly, but return
2581:FreeRTOS/Source/queue.c ****                      * indicating that we need to block. */
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 149


2582:FreeRTOS/Source/queue.c ****                     vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) 
2583:FreeRTOS/Source/queue.c ****                     portENABLE_INTERRUPTS();
2584:FreeRTOS/Source/queue.c ****                     return errQUEUE_BLOCKED;
2585:FreeRTOS/Source/queue.c ****                 }
2586:FreeRTOS/Source/queue.c ****                 else
2587:FreeRTOS/Source/queue.c ****                 {
2588:FreeRTOS/Source/queue.c ****                     portENABLE_INTERRUPTS();
2589:FreeRTOS/Source/queue.c ****                     return errQUEUE_FULL;
2590:FreeRTOS/Source/queue.c ****                 }
2591:FreeRTOS/Source/queue.c ****             }
2592:FreeRTOS/Source/queue.c ****             else
2593:FreeRTOS/Source/queue.c ****             {
2594:FreeRTOS/Source/queue.c ****                 mtCOVERAGE_TEST_MARKER();
2595:FreeRTOS/Source/queue.c ****             }
2596:FreeRTOS/Source/queue.c ****         }
2597:FreeRTOS/Source/queue.c ****         portENABLE_INTERRUPTS();
2598:FreeRTOS/Source/queue.c **** 
2599:FreeRTOS/Source/queue.c ****         portDISABLE_INTERRUPTS();
2600:FreeRTOS/Source/queue.c ****         {
2601:FreeRTOS/Source/queue.c ****             if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2602:FreeRTOS/Source/queue.c ****             {
2603:FreeRTOS/Source/queue.c ****                 /* Data is available from the queue. */
2604:FreeRTOS/Source/queue.c ****                 pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2605:FreeRTOS/Source/queue.c **** 
2606:FreeRTOS/Source/queue.c ****                 if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2607:FreeRTOS/Source/queue.c ****                 {
2608:FreeRTOS/Source/queue.c ****                     pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2609:FreeRTOS/Source/queue.c ****                 }
2610:FreeRTOS/Source/queue.c ****                 else
2611:FreeRTOS/Source/queue.c ****                 {
2612:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
2613:FreeRTOS/Source/queue.c ****                 }
2614:FreeRTOS/Source/queue.c **** 
2615:FreeRTOS/Source/queue.c ****                 --( pxQueue->uxMessagesWaiting );
2616:FreeRTOS/Source/queue.c ****                 ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( un
2617:FreeRTOS/Source/queue.c **** 
2618:FreeRTOS/Source/queue.c ****                 xReturn = pdPASS;
2619:FreeRTOS/Source/queue.c **** 
2620:FreeRTOS/Source/queue.c ****                 /* Were any co-routines waiting for space to become available? */
2621:FreeRTOS/Source/queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2622:FreeRTOS/Source/queue.c ****                 {
2623:FreeRTOS/Source/queue.c ****                     /* In this instance the co-routine could be placed directly
2624:FreeRTOS/Source/queue.c ****                      * into the ready list as we are within a critical section.
2625:FreeRTOS/Source/queue.c ****                      * Instead the same pending ready list mechanism is used as if
2626:FreeRTOS/Source/queue.c ****                      * the event were caused from within an interrupt. */
2627:FreeRTOS/Source/queue.c ****                     if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFAL
2628:FreeRTOS/Source/queue.c ****                     {
2629:FreeRTOS/Source/queue.c ****                         xReturn = errQUEUE_YIELD;
2630:FreeRTOS/Source/queue.c ****                     }
2631:FreeRTOS/Source/queue.c ****                     else
2632:FreeRTOS/Source/queue.c ****                     {
2633:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
2634:FreeRTOS/Source/queue.c ****                     }
2635:FreeRTOS/Source/queue.c ****                 }
2636:FreeRTOS/Source/queue.c ****                 else
2637:FreeRTOS/Source/queue.c ****                 {
2638:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 150


2639:FreeRTOS/Source/queue.c ****                 }
2640:FreeRTOS/Source/queue.c ****             }
2641:FreeRTOS/Source/queue.c ****             else
2642:FreeRTOS/Source/queue.c ****             {
2643:FreeRTOS/Source/queue.c ****                 xReturn = pdFAIL;
2644:FreeRTOS/Source/queue.c ****             }
2645:FreeRTOS/Source/queue.c ****         }
2646:FreeRTOS/Source/queue.c ****         portENABLE_INTERRUPTS();
2647:FreeRTOS/Source/queue.c **** 
2648:FreeRTOS/Source/queue.c ****         return xReturn;
2649:FreeRTOS/Source/queue.c ****     }
2650:FreeRTOS/Source/queue.c **** 
2651:FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2652:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2653:FreeRTOS/Source/queue.c **** 
2654:FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2655:FreeRTOS/Source/queue.c **** 
2656:FreeRTOS/Source/queue.c ****     BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue,
2657:FreeRTOS/Source/queue.c ****                                     const void * pvItemToQueue,
2658:FreeRTOS/Source/queue.c ****                                     BaseType_t xCoRoutinePreviouslyWoken )
2659:FreeRTOS/Source/queue.c ****     {
2660:FreeRTOS/Source/queue.c ****         Queue_t * const pxQueue = xQueue;
2661:FreeRTOS/Source/queue.c **** 
2662:FreeRTOS/Source/queue.c ****         /* Cannot block within an ISR so if there is no space on the queue then
2663:FreeRTOS/Source/queue.c ****          * exit without doing anything. */
2664:FreeRTOS/Source/queue.c ****         if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2665:FreeRTOS/Source/queue.c ****         {
2666:FreeRTOS/Source/queue.c ****             prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2667:FreeRTOS/Source/queue.c **** 
2668:FreeRTOS/Source/queue.c ****             /* We only want to wake one co-routine per ISR, so check that a
2669:FreeRTOS/Source/queue.c ****              * co-routine has not already been woken. */
2670:FreeRTOS/Source/queue.c ****             if( xCoRoutinePreviouslyWoken == pdFALSE )
2671:FreeRTOS/Source/queue.c ****             {
2672:FreeRTOS/Source/queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2673:FreeRTOS/Source/queue.c ****                 {
2674:FreeRTOS/Source/queue.c ****                     if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pd
2675:FreeRTOS/Source/queue.c ****                     {
2676:FreeRTOS/Source/queue.c ****                         return pdTRUE;
2677:FreeRTOS/Source/queue.c ****                     }
2678:FreeRTOS/Source/queue.c ****                     else
2679:FreeRTOS/Source/queue.c ****                     {
2680:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
2681:FreeRTOS/Source/queue.c ****                     }
2682:FreeRTOS/Source/queue.c ****                 }
2683:FreeRTOS/Source/queue.c ****                 else
2684:FreeRTOS/Source/queue.c ****                 {
2685:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
2686:FreeRTOS/Source/queue.c ****                 }
2687:FreeRTOS/Source/queue.c ****             }
2688:FreeRTOS/Source/queue.c ****             else
2689:FreeRTOS/Source/queue.c ****             {
2690:FreeRTOS/Source/queue.c ****                 mtCOVERAGE_TEST_MARKER();
2691:FreeRTOS/Source/queue.c ****             }
2692:FreeRTOS/Source/queue.c ****         }
2693:FreeRTOS/Source/queue.c ****         else
2694:FreeRTOS/Source/queue.c ****         {
2695:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 151


2696:FreeRTOS/Source/queue.c ****         }
2697:FreeRTOS/Source/queue.c **** 
2698:FreeRTOS/Source/queue.c ****         return xCoRoutinePreviouslyWoken;
2699:FreeRTOS/Source/queue.c ****     }
2700:FreeRTOS/Source/queue.c **** 
2701:FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2702:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2703:FreeRTOS/Source/queue.c **** 
2704:FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2705:FreeRTOS/Source/queue.c **** 
2706:FreeRTOS/Source/queue.c ****     BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue,
2707:FreeRTOS/Source/queue.c ****                                        void * pvBuffer,
2708:FreeRTOS/Source/queue.c ****                                        BaseType_t * pxCoRoutineWoken )
2709:FreeRTOS/Source/queue.c ****     {
2710:FreeRTOS/Source/queue.c ****         BaseType_t xReturn;
2711:FreeRTOS/Source/queue.c ****         Queue_t * const pxQueue = xQueue;
2712:FreeRTOS/Source/queue.c **** 
2713:FreeRTOS/Source/queue.c ****         /* We cannot block from an ISR, so check there is data available. If
2714:FreeRTOS/Source/queue.c ****          * not then just leave without doing anything. */
2715:FreeRTOS/Source/queue.c ****         if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2716:FreeRTOS/Source/queue.c ****         {
2717:FreeRTOS/Source/queue.c ****             /* Copy the data from the queue. */
2718:FreeRTOS/Source/queue.c ****             pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2719:FreeRTOS/Source/queue.c **** 
2720:FreeRTOS/Source/queue.c ****             if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2721:FreeRTOS/Source/queue.c ****             {
2722:FreeRTOS/Source/queue.c ****                 pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2723:FreeRTOS/Source/queue.c ****             }
2724:FreeRTOS/Source/queue.c ****             else
2725:FreeRTOS/Source/queue.c ****             {
2726:FreeRTOS/Source/queue.c ****                 mtCOVERAGE_TEST_MARKER();
2727:FreeRTOS/Source/queue.c ****             }
2728:FreeRTOS/Source/queue.c **** 
2729:FreeRTOS/Source/queue.c ****             --( pxQueue->uxMessagesWaiting );
2730:FreeRTOS/Source/queue.c ****             ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsign
2731:FreeRTOS/Source/queue.c **** 
2732:FreeRTOS/Source/queue.c ****             if( ( *pxCoRoutineWoken ) == pdFALSE )
2733:FreeRTOS/Source/queue.c ****             {
2734:FreeRTOS/Source/queue.c ****                 if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2735:FreeRTOS/Source/queue.c ****                 {
2736:FreeRTOS/Source/queue.c ****                     if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFAL
2737:FreeRTOS/Source/queue.c ****                     {
2738:FreeRTOS/Source/queue.c ****                         *pxCoRoutineWoken = pdTRUE;
2739:FreeRTOS/Source/queue.c ****                     }
2740:FreeRTOS/Source/queue.c ****                     else
2741:FreeRTOS/Source/queue.c ****                     {
2742:FreeRTOS/Source/queue.c ****                         mtCOVERAGE_TEST_MARKER();
2743:FreeRTOS/Source/queue.c ****                     }
2744:FreeRTOS/Source/queue.c ****                 }
2745:FreeRTOS/Source/queue.c ****                 else
2746:FreeRTOS/Source/queue.c ****                 {
2747:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
2748:FreeRTOS/Source/queue.c ****                 }
2749:FreeRTOS/Source/queue.c ****             }
2750:FreeRTOS/Source/queue.c ****             else
2751:FreeRTOS/Source/queue.c ****             {
2752:FreeRTOS/Source/queue.c ****                 mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 152


2753:FreeRTOS/Source/queue.c ****             }
2754:FreeRTOS/Source/queue.c **** 
2755:FreeRTOS/Source/queue.c ****             xReturn = pdPASS;
2756:FreeRTOS/Source/queue.c ****         }
2757:FreeRTOS/Source/queue.c ****         else
2758:FreeRTOS/Source/queue.c ****         {
2759:FreeRTOS/Source/queue.c ****             xReturn = pdFAIL;
2760:FreeRTOS/Source/queue.c ****         }
2761:FreeRTOS/Source/queue.c **** 
2762:FreeRTOS/Source/queue.c ****         return xReturn;
2763:FreeRTOS/Source/queue.c ****     }
2764:FreeRTOS/Source/queue.c **** 
2765:FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2766:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2767:FreeRTOS/Source/queue.c **** 
2768:FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2769:FreeRTOS/Source/queue.c **** 
2770:FreeRTOS/Source/queue.c ****     void vQueueAddToRegistry( QueueHandle_t xQueue,
2771:FreeRTOS/Source/queue.c ****                               const char * pcQueueName ) /*lint !e971 Unqualified char types are al
2772:FreeRTOS/Source/queue.c ****     {
 4441              		.loc 1 2772 5 is_stmt 1 view -0
 4442              		.cfi_startproc
 4443              		@ args = 0, pretend = 0, frame = 0
 4444              		@ frame_needed = 0, uses_anonymous_args = 0
 4445              		@ link register save eliminated.
2773:FreeRTOS/Source/queue.c ****         UBaseType_t ux;
 4446              		.loc 1 2773 9 view .LVU1317
2774:FreeRTOS/Source/queue.c ****         QueueRegistryItem_t * pxEntryToWrite = NULL;
 4447              		.loc 1 2774 9 view .LVU1318
2775:FreeRTOS/Source/queue.c **** 
2776:FreeRTOS/Source/queue.c ****         configASSERT( xQueue );
 4448              		.loc 1 2776 9 view .LVU1319
 4449 0000 28B1     		cbz	r0, .L345
2772:FreeRTOS/Source/queue.c ****         UBaseType_t ux;
 4450              		.loc 1 2772 5 is_stmt 0 discriminator 2 view .LVU1320
 4451 0002 10B4     		push	{r4}
 4452              	.LCFI42:
 4453              		.cfi_def_cfa_offset 4
 4454              		.cfi_offset 4, -4
 4455 0004 0446     		mov	r4, r0
 4456              		.loc 1 2776 31 is_stmt 1 discriminator 2 view .LVU1321
2777:FreeRTOS/Source/queue.c **** 
2778:FreeRTOS/Source/queue.c ****         if( pcQueueName != NULL )
 4457              		.loc 1 2778 9 discriminator 2 view .LVU1322
 4458              		.loc 1 2778 11 is_stmt 0 discriminator 2 view .LVU1323
 4459 0006 31B3     		cbz	r1, .L333
2774:FreeRTOS/Source/queue.c **** 
 4460              		.loc 1 2774 31 view .LVU1324
 4461 0008 0020     		movs	r0, #0
 4462              	.LVL389:
2779:FreeRTOS/Source/queue.c ****         {
2780:FreeRTOS/Source/queue.c ****             /* See if there is an empty space in the registry.  A NULL name denotes
2781:FreeRTOS/Source/queue.c ****              * a free slot. */
2782:FreeRTOS/Source/queue.c ****             for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4463              		.loc 1 2782 21 view .LVU1325
 4464 000a 0346     		mov	r3, r0
 4465 000c 0DE0     		b	.L336
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 153


 4466              	.LVL390:
 4467              	.L345:
 4468              	.LCFI43:
 4469              		.cfi_def_cfa_offset 0
 4470              		.cfi_restore 4
2776:FreeRTOS/Source/queue.c **** 
 4471              		.loc 1 2776 9 is_stmt 1 view .LVU1326
 4472              	.LBB234:
 4473              	.LBI234:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4474              		.loc 2 194 34 view .LVU1327
 4475              	.LBB235:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4476              		.loc 2 196 9 view .LVU1328
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4477              		.loc 2 198 9 view .LVU1329
 4478              		.syntax unified
 4479              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4480 000e 4FF05003 			mov r3, #80												
 4481 0012 83F31188 		msr basepri, r3											
 4482 0016 BFF36F8F 		isb														
 4483 001a BFF34F8F 		dsb														
 4484              	
 4485              	@ 0 "" 2
 4486              	.LVL391:
 4487              		.thumb
 4488              		.syntax unified
 4489              	.L335:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4490              		.loc 2 198 9 is_stmt 0 view .LVU1330
 4491              	.LBE235:
 4492              	.LBE234:
2776:FreeRTOS/Source/queue.c **** 
 4493              		.loc 1 2776 9 is_stmt 1 discriminator 1 view .LVU1331
2776:FreeRTOS/Source/queue.c **** 
 4494              		.loc 1 2776 9 discriminator 1 view .LVU1332
 4495 001e FEE7     		b	.L335
 4496              	.LVL392:
 4497              	.L347:
 4498              	.LCFI44:
 4499              		.cfi_def_cfa_offset 4
 4500              		.cfi_offset 4, -4
2783:FreeRTOS/Source/queue.c ****             {
2784:FreeRTOS/Source/queue.c ****                 /* Replace an existing entry if the queue is already in the registry. */
2785:FreeRTOS/Source/queue.c ****                 if( xQueue == xQueueRegistry[ ux ].xHandle )
2786:FreeRTOS/Source/queue.c ****                 {
2787:FreeRTOS/Source/queue.c ****                     pxEntryToWrite = &( xQueueRegistry[ ux ] );
 4501              		.loc 1 2787 21 view .LVU1333
 4502              		.loc 1 2787 36 is_stmt 0 view .LVU1334
 4503 0020 0E48     		ldr	r0, .L348
 4504              	.LVL393:
 4505              		.loc 1 2787 36 view .LVU1335
 4506 0022 00EBC300 		add	r0, r0, r3, lsl #3
 4507              	.LVL394:
2788:FreeRTOS/Source/queue.c ****                     break;
 4508              		.loc 1 2788 21 is_stmt 1 view .LVU1336
2789:FreeRTOS/Source/queue.c ****                 }
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 154


2790:FreeRTOS/Source/queue.c ****                 /* Otherwise, store in the next empty location */
2791:FreeRTOS/Source/queue.c ****                 else if( ( pxEntryToWrite == NULL ) && ( xQueueRegistry[ ux ].pcQueueName == NULL )
2792:FreeRTOS/Source/queue.c ****                 {
2793:FreeRTOS/Source/queue.c ****                     pxEntryToWrite = &( xQueueRegistry[ ux ] );
2794:FreeRTOS/Source/queue.c ****                 }
2795:FreeRTOS/Source/queue.c ****                 else
2796:FreeRTOS/Source/queue.c ****                 {
2797:FreeRTOS/Source/queue.c ****                     mtCOVERAGE_TEST_MARKER();
2798:FreeRTOS/Source/queue.c ****                 }
2799:FreeRTOS/Source/queue.c ****             }
2800:FreeRTOS/Source/queue.c ****         }
2801:FreeRTOS/Source/queue.c **** 
2802:FreeRTOS/Source/queue.c ****         if( pxEntryToWrite != NULL )
 4509              		.loc 1 2802 9 view .LVU1337
 4510 0026 14E0     		b	.L339
 4511              	.L340:
2797:FreeRTOS/Source/queue.c ****                 }
 4512              		.loc 1 2797 45 discriminator 2 view .LVU1338
2782:FreeRTOS/Source/queue.c ****             {
 4513              		.loc 1 2782 93 discriminator 2 view .LVU1339
 4514 0028 0133     		adds	r3, r3, #1
 4515              	.LVL395:
 4516              	.L336:
2782:FreeRTOS/Source/queue.c ****             {
 4517              		.loc 1 2782 46 discriminator 1 view .LVU1340
 4518 002a 072B     		cmp	r3, #7
 4519 002c 10D8     		bhi	.L346
2785:FreeRTOS/Source/queue.c ****                 {
 4520              		.loc 1 2785 17 view .LVU1341
2785:FreeRTOS/Source/queue.c ****                 {
 4521              		.loc 1 2785 51 is_stmt 0 view .LVU1342
 4522 002e 0B4A     		ldr	r2, .L348
 4523 0030 02EBC302 		add	r2, r2, r3, lsl #3
 4524 0034 5268     		ldr	r2, [r2, #4]
2785:FreeRTOS/Source/queue.c ****                 {
 4525              		.loc 1 2785 19 view .LVU1343
 4526 0036 A242     		cmp	r2, r4
 4527 0038 F2D0     		beq	.L347
2791:FreeRTOS/Source/queue.c ****                 {
 4528              		.loc 1 2791 22 is_stmt 1 view .LVU1344
2791:FreeRTOS/Source/queue.c ****                 {
 4529              		.loc 1 2791 24 is_stmt 0 view .LVU1345
 4530 003a 0028     		cmp	r0, #0
 4531 003c F4D1     		bne	.L340
2791:FreeRTOS/Source/queue.c ****                 {
 4532              		.loc 1 2791 78 discriminator 1 view .LVU1346
 4533 003e 074A     		ldr	r2, .L348
 4534 0040 52F83320 		ldr	r2, [r2, r3, lsl #3]
2791:FreeRTOS/Source/queue.c ****                 {
 4535              		.loc 1 2791 53 discriminator 1 view .LVU1347
 4536 0044 002A     		cmp	r2, #0
 4537 0046 EFD1     		bne	.L340
2793:FreeRTOS/Source/queue.c ****                 }
 4538              		.loc 1 2793 21 is_stmt 1 view .LVU1348
2793:FreeRTOS/Source/queue.c ****                 }
 4539              		.loc 1 2793 36 is_stmt 0 view .LVU1349
 4540 0048 0448     		ldr	r0, .L348
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 155


 4541              	.LVL396:
2793:FreeRTOS/Source/queue.c ****                 }
 4542              		.loc 1 2793 36 view .LVU1350
 4543 004a 00EBC300 		add	r0, r0, r3, lsl #3
 4544              	.LVL397:
2793:FreeRTOS/Source/queue.c ****                 }
 4545              		.loc 1 2793 36 view .LVU1351
 4546 004e EBE7     		b	.L340
 4547              	.L346:
 4548              		.loc 1 2802 9 is_stmt 1 view .LVU1352
 4549              		.loc 1 2802 11 is_stmt 0 view .LVU1353
 4550 0050 08B1     		cbz	r0, .L333
 4551              	.L339:
2803:FreeRTOS/Source/queue.c ****         {
2804:FreeRTOS/Source/queue.c ****             /* Store the information on this queue. */
2805:FreeRTOS/Source/queue.c ****             pxEntryToWrite->pcQueueName = pcQueueName;
 4552              		.loc 1 2805 13 is_stmt 1 view .LVU1354
 4553              		.loc 1 2805 41 is_stmt 0 view .LVU1355
 4554 0052 0160     		str	r1, [r0]
2806:FreeRTOS/Source/queue.c ****             pxEntryToWrite->xHandle = xQueue;
 4555              		.loc 1 2806 13 is_stmt 1 view .LVU1356
 4556              		.loc 1 2806 37 is_stmt 0 view .LVU1357
 4557 0054 4460     		str	r4, [r0, #4]
 4558              	.LVL398:
2807:FreeRTOS/Source/queue.c **** 
2808:FreeRTOS/Source/queue.c ****             traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
 4559              		.loc 1 2808 59 is_stmt 1 view .LVU1358
 4560              	.L333:
2809:FreeRTOS/Source/queue.c ****         }
2810:FreeRTOS/Source/queue.c ****     }
 4561              		.loc 1 2810 5 is_stmt 0 view .LVU1359
 4562 0056 5DF8044B 		ldr	r4, [sp], #4
 4563              	.LCFI45:
 4564              		.cfi_restore 4
 4565              		.cfi_def_cfa_offset 0
 4566              	.LVL399:
 4567              		.loc 1 2810 5 view .LVU1360
 4568 005a 7047     		bx	lr
 4569              	.L349:
 4570              		.align	2
 4571              	.L348:
 4572 005c 00000000 		.word	xQueueRegistry
 4573              		.cfi_endproc
 4574              	.LFE36:
 4576              		.section	.text.pcQueueGetName,"ax",%progbits
 4577              		.align	1
 4578              		.global	pcQueueGetName
 4579              		.syntax unified
 4580              		.thumb
 4581              		.thumb_func
 4583              	pcQueueGetName:
 4584              	.LVL400:
 4585              	.LFB37:
2811:FreeRTOS/Source/queue.c **** 
2812:FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2813:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2814:FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 156


2815:FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2816:FreeRTOS/Source/queue.c **** 
2817:FreeRTOS/Source/queue.c ****     const char * pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are all
2818:FreeRTOS/Source/queue.c ****     {
 4586              		.loc 1 2818 5 is_stmt 1 view -0
 4587              		.cfi_startproc
 4588              		@ args = 0, pretend = 0, frame = 0
 4589              		@ frame_needed = 0, uses_anonymous_args = 0
 4590              		@ link register save eliminated.
2819:FreeRTOS/Source/queue.c ****         UBaseType_t ux;
 4591              		.loc 1 2819 9 view .LVU1362
2820:FreeRTOS/Source/queue.c ****         const char * pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings a
 4592              		.loc 1 2820 9 view .LVU1363
2821:FreeRTOS/Source/queue.c **** 
2822:FreeRTOS/Source/queue.c ****         configASSERT( xQueue );
 4593              		.loc 1 2822 9 view .LVU1364
 4594 0000 0146     		mov	r1, r0
 4595 0002 50B1     		cbz	r0, .L357
2823:FreeRTOS/Source/queue.c **** 
2824:FreeRTOS/Source/queue.c ****         /* Note there is nothing here to protect against another task adding or
2825:FreeRTOS/Source/queue.c ****          * removing entries from the registry while it is being searched. */
2826:FreeRTOS/Source/queue.c **** 
2827:FreeRTOS/Source/queue.c ****         for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4596              		.loc 1 2827 17 is_stmt 0 view .LVU1365
 4597 0004 0023     		movs	r3, #0
 4598              	.L351:
 4599              	.LVL401:
 4600              		.loc 1 2827 42 is_stmt 1 discriminator 1 view .LVU1366
 4601 0006 072B     		cmp	r3, #7
 4602 0008 14D8     		bhi	.L358
2828:FreeRTOS/Source/queue.c ****         {
2829:FreeRTOS/Source/queue.c ****             if( xQueueRegistry[ ux ].xHandle == xQueue )
 4603              		.loc 1 2829 13 view .LVU1367
 4604              		.loc 1 2829 37 is_stmt 0 view .LVU1368
 4605 000a 0B4A     		ldr	r2, .L360
 4606 000c 02EBC302 		add	r2, r2, r3, lsl #3
 4607 0010 5268     		ldr	r2, [r2, #4]
 4608              		.loc 1 2829 15 view .LVU1369
 4609 0012 8A42     		cmp	r2, r1
 4610 0014 0AD0     		beq	.L359
2830:FreeRTOS/Source/queue.c ****             {
2831:FreeRTOS/Source/queue.c ****                 pcReturn = xQueueRegistry[ ux ].pcQueueName;
2832:FreeRTOS/Source/queue.c ****                 break;
2833:FreeRTOS/Source/queue.c ****             }
2834:FreeRTOS/Source/queue.c ****             else
2835:FreeRTOS/Source/queue.c ****             {
2836:FreeRTOS/Source/queue.c ****                 mtCOVERAGE_TEST_MARKER();
 4611              		.loc 1 2836 41 is_stmt 1 discriminator 2 view .LVU1370
2827:FreeRTOS/Source/queue.c ****         {
 4612              		.loc 1 2827 89 discriminator 2 view .LVU1371
 4613 0016 0133     		adds	r3, r3, #1
 4614              	.LVL402:
2827:FreeRTOS/Source/queue.c ****         {
 4615              		.loc 1 2827 89 is_stmt 0 discriminator 2 view .LVU1372
 4616 0018 F5E7     		b	.L351
 4617              	.LVL403:
 4618              	.L357:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 157


2822:FreeRTOS/Source/queue.c **** 
 4619              		.loc 1 2822 9 is_stmt 1 view .LVU1373
 4620              	.LBB236:
 4621              	.LBI236:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4622              		.loc 2 194 34 view .LVU1374
 4623              	.LBB237:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4624              		.loc 2 196 9 view .LVU1375
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4625              		.loc 2 198 9 view .LVU1376
 4626              		.syntax unified
 4627              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4628 001a 4FF05003 			mov r3, #80												
 4629 001e 83F31188 		msr basepri, r3											
 4630 0022 BFF36F8F 		isb														
 4631 0026 BFF34F8F 		dsb														
 4632              	
 4633              	@ 0 "" 2
 4634              	.LVL404:
 4635              		.thumb
 4636              		.syntax unified
 4637              	.L352:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4638              		.loc 2 198 9 is_stmt 0 view .LVU1377
 4639              	.LBE237:
 4640              	.LBE236:
2822:FreeRTOS/Source/queue.c **** 
 4641              		.loc 1 2822 9 is_stmt 1 discriminator 1 view .LVU1378
2822:FreeRTOS/Source/queue.c **** 
 4642              		.loc 1 2822 9 discriminator 1 view .LVU1379
 4643 002a FEE7     		b	.L352
 4644              	.LVL405:
 4645              	.L359:
2831:FreeRTOS/Source/queue.c ****                 break;
 4646              		.loc 1 2831 17 view .LVU1380
2831:FreeRTOS/Source/queue.c ****                 break;
 4647              		.loc 1 2831 26 is_stmt 0 view .LVU1381
 4648 002c 024A     		ldr	r2, .L360
 4649 002e 52F83300 		ldr	r0, [r2, r3, lsl #3]
 4650              	.LVL406:
2832:FreeRTOS/Source/queue.c ****             }
 4651              		.loc 1 2832 17 is_stmt 1 view .LVU1382
 4652 0032 7047     		bx	lr
 4653              	.LVL407:
 4654              	.L358:
2820:FreeRTOS/Source/queue.c **** 
 4655              		.loc 1 2820 22 is_stmt 0 view .LVU1383
 4656 0034 0020     		movs	r0, #0
 4657              	.LVL408:
2837:FreeRTOS/Source/queue.c ****             }
2838:FreeRTOS/Source/queue.c ****         }
2839:FreeRTOS/Source/queue.c **** 
2840:FreeRTOS/Source/queue.c ****         return pcReturn;
 4658              		.loc 1 2840 9 is_stmt 1 view .LVU1384
2841:FreeRTOS/Source/queue.c ****     } /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 4659              		.loc 1 2841 5 is_stmt 0 view .LVU1385
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 158


 4660 0036 7047     		bx	lr
 4661              	.L361:
 4662              		.align	2
 4663              	.L360:
 4664 0038 00000000 		.word	xQueueRegistry
 4665              		.cfi_endproc
 4666              	.LFE37:
 4668              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 4669              		.align	1
 4670              		.global	vQueueUnregisterQueue
 4671              		.syntax unified
 4672              		.thumb
 4673              		.thumb_func
 4675              	vQueueUnregisterQueue:
 4676              	.LVL409:
 4677              	.LFB38:
2842:FreeRTOS/Source/queue.c **** 
2843:FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2844:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2845:FreeRTOS/Source/queue.c **** 
2846:FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2847:FreeRTOS/Source/queue.c **** 
2848:FreeRTOS/Source/queue.c ****     void vQueueUnregisterQueue( QueueHandle_t xQueue )
2849:FreeRTOS/Source/queue.c ****     {
 4678              		.loc 1 2849 5 is_stmt 1 view -0
 4679              		.cfi_startproc
 4680              		@ args = 0, pretend = 0, frame = 0
 4681              		@ frame_needed = 0, uses_anonymous_args = 0
 4682              		@ link register save eliminated.
2850:FreeRTOS/Source/queue.c ****         UBaseType_t ux;
 4683              		.loc 1 2850 9 view .LVU1387
2851:FreeRTOS/Source/queue.c **** 
2852:FreeRTOS/Source/queue.c ****         configASSERT( xQueue );
 4684              		.loc 1 2852 9 view .LVU1388
 4685 0000 0146     		mov	r1, r0
 4686 0002 50B1     		cbz	r0, .L369
2853:FreeRTOS/Source/queue.c **** 
2854:FreeRTOS/Source/queue.c ****         /* See if the handle of the queue being unregistered in actually in the
2855:FreeRTOS/Source/queue.c ****          * registry. */
2856:FreeRTOS/Source/queue.c ****         for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4687              		.loc 1 2856 17 is_stmt 0 view .LVU1389
 4688 0004 0023     		movs	r3, #0
 4689              	.L363:
 4690              	.LVL410:
 4691              		.loc 1 2856 42 is_stmt 1 discriminator 1 view .LVU1390
 4692 0006 072B     		cmp	r3, #7
 4693 0008 18D8     		bhi	.L370
2857:FreeRTOS/Source/queue.c ****         {
2858:FreeRTOS/Source/queue.c ****             if( xQueueRegistry[ ux ].xHandle == xQueue )
 4694              		.loc 1 2858 13 view .LVU1391
 4695              		.loc 1 2858 37 is_stmt 0 view .LVU1392
 4696 000a 0D4A     		ldr	r2, .L372
 4697 000c 02EBC302 		add	r2, r2, r3, lsl #3
 4698 0010 5268     		ldr	r2, [r2, #4]
 4699              		.loc 1 2858 15 view .LVU1393
 4700 0012 8A42     		cmp	r2, r1
 4701 0014 0AD0     		beq	.L371
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 159


2859:FreeRTOS/Source/queue.c ****             {
2860:FreeRTOS/Source/queue.c ****                 /* Set the name to NULL to show that this slot if free again. */
2861:FreeRTOS/Source/queue.c ****                 xQueueRegistry[ ux ].pcQueueName = NULL;
2862:FreeRTOS/Source/queue.c **** 
2863:FreeRTOS/Source/queue.c ****                 /* Set the handle to NULL to ensure the same queue handle cannot
2864:FreeRTOS/Source/queue.c ****                  * appear in the registry twice if it is added, removed, then
2865:FreeRTOS/Source/queue.c ****                  * added again. */
2866:FreeRTOS/Source/queue.c ****                 xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
2867:FreeRTOS/Source/queue.c ****                 break;
2868:FreeRTOS/Source/queue.c ****             }
2869:FreeRTOS/Source/queue.c ****             else
2870:FreeRTOS/Source/queue.c ****             {
2871:FreeRTOS/Source/queue.c ****                 mtCOVERAGE_TEST_MARKER();
 4702              		.loc 1 2871 41 is_stmt 1 discriminator 2 view .LVU1394
2856:FreeRTOS/Source/queue.c ****         {
 4703              		.loc 1 2856 89 discriminator 2 view .LVU1395
 4704 0016 0133     		adds	r3, r3, #1
 4705              	.LVL411:
2856:FreeRTOS/Source/queue.c ****         {
 4706              		.loc 1 2856 89 is_stmt 0 discriminator 2 view .LVU1396
 4707 0018 F5E7     		b	.L363
 4708              	.LVL412:
 4709              	.L369:
2852:FreeRTOS/Source/queue.c **** 
 4710              		.loc 1 2852 9 is_stmt 1 view .LVU1397
 4711              	.LBB238:
 4712              	.LBI238:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4713              		.loc 2 194 34 view .LVU1398
 4714              	.LBB239:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4715              		.loc 2 196 9 view .LVU1399
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4716              		.loc 2 198 9 view .LVU1400
 4717              		.syntax unified
 4718              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4719 001a 4FF05003 			mov r3, #80												
 4720 001e 83F31188 		msr basepri, r3											
 4721 0022 BFF36F8F 		isb														
 4722 0026 BFF34F8F 		dsb														
 4723              	
 4724              	@ 0 "" 2
 4725              	.LVL413:
 4726              		.thumb
 4727              		.syntax unified
 4728              	.L364:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4729              		.loc 2 198 9 is_stmt 0 view .LVU1401
 4730              	.LBE239:
 4731              	.LBE238:
2852:FreeRTOS/Source/queue.c **** 
 4732              		.loc 1 2852 9 is_stmt 1 discriminator 1 view .LVU1402
2852:FreeRTOS/Source/queue.c **** 
 4733              		.loc 1 2852 9 discriminator 1 view .LVU1403
 4734 002a FEE7     		b	.L364
 4735              	.LVL414:
 4736              	.L371:
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 160


2861:FreeRTOS/Source/queue.c **** 
 4737              		.loc 1 2861 17 view .LVU1404
2861:FreeRTOS/Source/queue.c **** 
 4738              		.loc 1 2861 50 is_stmt 0 view .LVU1405
 4739 002c 044A     		ldr	r2, .L372
 4740 002e 0021     		movs	r1, #0
 4741 0030 42F83310 		str	r1, [r2, r3, lsl #3]
2866:FreeRTOS/Source/queue.c ****                 break;
 4742              		.loc 1 2866 17 is_stmt 1 view .LVU1406
2866:FreeRTOS/Source/queue.c ****                 break;
 4743              		.loc 1 2866 46 is_stmt 0 view .LVU1407
 4744 0034 02EBC302 		add	r2, r2, r3, lsl #3
 4745 0038 5160     		str	r1, [r2, #4]
2867:FreeRTOS/Source/queue.c ****             }
 4746              		.loc 1 2867 17 is_stmt 1 view .LVU1408
 4747 003a 7047     		bx	lr
 4748              	.L370:
2872:FreeRTOS/Source/queue.c ****             }
2873:FreeRTOS/Source/queue.c ****         }
2874:FreeRTOS/Source/queue.c ****     } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4749              		.loc 1 2874 5 is_stmt 0 view .LVU1409
 4750 003c 7047     		bx	lr
 4751              	.L373:
 4752 003e 00BF     		.align	2
 4753              	.L372:
 4754 0040 00000000 		.word	xQueueRegistry
 4755              		.cfi_endproc
 4756              	.LFE38:
 4758              		.section	.text.vQueueDelete,"ax",%progbits
 4759              		.align	1
 4760              		.global	vQueueDelete
 4761              		.syntax unified
 4762              		.thumb
 4763              		.thumb_func
 4765              	vQueueDelete:
 4766              	.LVL415:
 4767              	.LFB24:
2076:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 4768              		.loc 1 2076 1 is_stmt 1 view -0
 4769              		.cfi_startproc
 4770              		@ args = 0, pretend = 0, frame = 0
 4771              		@ frame_needed = 0, uses_anonymous_args = 0
2077:FreeRTOS/Source/queue.c **** 
 4772              		.loc 1 2077 5 view .LVU1411
2079:FreeRTOS/Source/queue.c ****     traceQUEUE_DELETE( pxQueue );
 4773              		.loc 1 2079 5 view .LVU1412
 4774 0000 38B1     		cbz	r0, .L379
2076:FreeRTOS/Source/queue.c ****     Queue_t * const pxQueue = xQueue;
 4775              		.loc 1 2076 1 is_stmt 0 discriminator 2 view .LVU1413
 4776 0002 10B5     		push	{r4, lr}
 4777              	.LCFI46:
 4778              		.cfi_def_cfa_offset 8
 4779              		.cfi_offset 4, -8
 4780              		.cfi_offset 14, -4
 4781 0004 0446     		mov	r4, r0
2079:FreeRTOS/Source/queue.c ****     traceQUEUE_DELETE( pxQueue );
 4782              		.loc 1 2079 28 is_stmt 1 discriminator 2 view .LVU1414
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 161


2080:FreeRTOS/Source/queue.c **** 
 4783              		.loc 1 2080 33 discriminator 2 view .LVU1415
2084:FreeRTOS/Source/queue.c ****     }
 4784              		.loc 1 2084 9 discriminator 2 view .LVU1416
 4785 0006 FFF7FEFF 		bl	vQueueUnregisterQueue
 4786              	.LVL416:
2092:FreeRTOS/Source/queue.c ****     }
 4787              		.loc 1 2092 9 discriminator 2 view .LVU1417
 4788 000a 2046     		mov	r0, r4
 4789 000c FFF7FEFF 		bl	vPortFree
 4790              	.LVL417:
2114:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4791              		.loc 1 2114 1 is_stmt 0 discriminator 2 view .LVU1418
 4792 0010 10BD     		pop	{r4, pc}
 4793              	.LVL418:
 4794              	.L379:
 4795              	.LCFI47:
 4796              		.cfi_def_cfa_offset 0
 4797              		.cfi_restore 4
 4798              		.cfi_restore 14
2079:FreeRTOS/Source/queue.c ****     traceQUEUE_DELETE( pxQueue );
 4799              		.loc 1 2079 5 is_stmt 1 view .LVU1419
 4800              	.LBB240:
 4801              	.LBI240:
 194:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4802              		.loc 2 194 34 view .LVU1420
 4803              	.LBB241:
 196:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4804              		.loc 2 196 9 view .LVU1421
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4805              		.loc 2 198 9 view .LVU1422
 4806              		.syntax unified
 4807              	@ 198 "FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4808 0012 4FF05003 			mov r3, #80												
 4809 0016 83F31188 		msr basepri, r3											
 4810 001a BFF36F8F 		isb														
 4811 001e BFF34F8F 		dsb														
 4812              	
 4813              	@ 0 "" 2
 4814              	.LVL419:
 4815              		.thumb
 4816              		.syntax unified
 4817              	.L376:
 198:FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4818              		.loc 2 198 9 is_stmt 0 view .LVU1423
 4819              	.LBE241:
 4820              	.LBE240:
2079:FreeRTOS/Source/queue.c ****     traceQUEUE_DELETE( pxQueue );
 4821              		.loc 1 2079 5 is_stmt 1 discriminator 1 view .LVU1424
2079:FreeRTOS/Source/queue.c ****     traceQUEUE_DELETE( pxQueue );
 4822              		.loc 1 2079 5 discriminator 1 view .LVU1425
 4823 0022 FEE7     		b	.L376
 4824              		.cfi_endproc
 4825              	.LFE24:
 4827              		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
 4828              		.align	1
 4829              		.global	vQueueWaitForMessageRestricted
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 162


 4830              		.syntax unified
 4831              		.thumb
 4832              		.thumb_func
 4834              	vQueueWaitForMessageRestricted:
 4835              	.LVL420:
 4836              	.LFB39:
2875:FreeRTOS/Source/queue.c **** 
2876:FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2877:FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2878:FreeRTOS/Source/queue.c **** 
2879:FreeRTOS/Source/queue.c **** #if ( configUSE_TIMERS == 1 )
2880:FreeRTOS/Source/queue.c **** 
2881:FreeRTOS/Source/queue.c ****     void vQueueWaitForMessageRestricted( QueueHandle_t xQueue,
2882:FreeRTOS/Source/queue.c ****                                          TickType_t xTicksToWait,
2883:FreeRTOS/Source/queue.c ****                                          const BaseType_t xWaitIndefinitely )
2884:FreeRTOS/Source/queue.c ****     {
 4837              		.loc 1 2884 5 view -0
 4838              		.cfi_startproc
 4839              		@ args = 0, pretend = 0, frame = 0
 4840              		@ frame_needed = 0, uses_anonymous_args = 0
 4841              		.loc 1 2884 5 is_stmt 0 view .LVU1427
 4842 0000 70B5     		push	{r4, r5, r6, lr}
 4843              	.LCFI48:
 4844              		.cfi_def_cfa_offset 16
 4845              		.cfi_offset 4, -16
 4846              		.cfi_offset 5, -12
 4847              		.cfi_offset 6, -8
 4848              		.cfi_offset 14, -4
 4849 0002 0446     		mov	r4, r0
 4850 0004 0D46     		mov	r5, r1
 4851 0006 1646     		mov	r6, r2
2885:FreeRTOS/Source/queue.c ****         Queue_t * const pxQueue = xQueue;
 4852              		.loc 1 2885 9 is_stmt 1 view .LVU1428
 4853              	.LVL421:
2886:FreeRTOS/Source/queue.c **** 
2887:FreeRTOS/Source/queue.c ****         /* This function should not be called by application code hence the
2888:FreeRTOS/Source/queue.c ****          * 'Restricted' in its name.  It is not part of the public API.  It is
2889:FreeRTOS/Source/queue.c ****          * designed for use by kernel code, and has special calling requirements.
2890:FreeRTOS/Source/queue.c ****          * It can result in vListInsert() being called on a list that can only
2891:FreeRTOS/Source/queue.c ****          * possibly ever have one item in it, so the list will be fast, but even
2892:FreeRTOS/Source/queue.c ****          * so it should be called with the scheduler locked and not from a critical
2893:FreeRTOS/Source/queue.c ****          * section. */
2894:FreeRTOS/Source/queue.c **** 
2895:FreeRTOS/Source/queue.c ****         /* Only do anything if there are no messages in the queue.  This function
2896:FreeRTOS/Source/queue.c ****          *  will not actually cause the task to block, just place it on a blocked
2897:FreeRTOS/Source/queue.c ****          *  list.  It will not block until the scheduler is unlocked - at which
2898:FreeRTOS/Source/queue.c ****          *  time a yield will be performed.  If an item is added to the queue while
2899:FreeRTOS/Source/queue.c ****          *  the queue is locked, and the calling task blocks on the queue, then the
2900:FreeRTOS/Source/queue.c ****          *  calling task will be immediately unblocked when the queue is unlocked. */
2901:FreeRTOS/Source/queue.c ****         prvLockQueue( pxQueue );
 4854              		.loc 1 2901 9 view .LVU1429
 4855 0008 FFF7FEFF 		bl	vPortEnterCritical
 4856              	.LVL422:
 4857              		.loc 1 2901 9 view .LVU1430
 4858 000c 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 4859 0010 5BB2     		sxtb	r3, r3
 4860 0012 B3F1FF3F 		cmp	r3, #-1
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 163


 4861 0016 0DD0     		beq	.L385
 4862              	.L381:
 4863              		.loc 1 2901 9 discriminator 3 view .LVU1431
 4864 0018 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 4865 001c 5BB2     		sxtb	r3, r3
 4866 001e B3F1FF3F 		cmp	r3, #-1
 4867 0022 0BD0     		beq	.L386
 4868              	.L382:
 4869              		.loc 1 2901 9 discriminator 6 view .LVU1432
 4870 0024 FFF7FEFF 		bl	vPortExitCritical
 4871              	.LVL423:
2902:FreeRTOS/Source/queue.c **** 
2903:FreeRTOS/Source/queue.c ****         if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4872              		.loc 1 2903 9 discriminator 6 view .LVU1433
 4873              		.loc 1 2903 20 is_stmt 0 discriminator 6 view .LVU1434
 4874 0028 A36B     		ldr	r3, [r4, #56]
 4875              		.loc 1 2903 11 discriminator 6 view .LVU1435
 4876 002a 5BB1     		cbz	r3, .L387
 4877              	.L383:
2904:FreeRTOS/Source/queue.c ****         {
2905:FreeRTOS/Source/queue.c ****             /* There is nothing in the queue, block for the specified period. */
2906:FreeRTOS/Source/queue.c ****             vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xW
2907:FreeRTOS/Source/queue.c ****         }
2908:FreeRTOS/Source/queue.c ****         else
2909:FreeRTOS/Source/queue.c ****         {
2910:FreeRTOS/Source/queue.c ****             mtCOVERAGE_TEST_MARKER();
 4878              		.loc 1 2910 37 is_stmt 1 view .LVU1436
2911:FreeRTOS/Source/queue.c ****         }
2912:FreeRTOS/Source/queue.c **** 
2913:FreeRTOS/Source/queue.c ****         prvUnlockQueue( pxQueue );
 4879              		.loc 1 2913 9 view .LVU1437
 4880 002c 2046     		mov	r0, r4
 4881 002e FFF7FEFF 		bl	prvUnlockQueue
 4882              	.LVL424:
2914:FreeRTOS/Source/queue.c ****     }
 4883              		.loc 1 2914 5 is_stmt 0 view .LVU1438
 4884 0032 70BD     		pop	{r4, r5, r6, pc}
 4885              	.LVL425:
 4886              	.L385:
2901:FreeRTOS/Source/queue.c **** 
 4887              		.loc 1 2901 9 is_stmt 1 discriminator 1 view .LVU1439
 4888 0034 0023     		movs	r3, #0
 4889 0036 84F84430 		strb	r3, [r4, #68]
 4890 003a EDE7     		b	.L381
 4891              	.L386:
2901:FreeRTOS/Source/queue.c **** 
 4892              		.loc 1 2901 9 discriminator 4 view .LVU1440
 4893 003c 0023     		movs	r3, #0
 4894 003e 84F84530 		strb	r3, [r4, #69]
 4895 0042 EFE7     		b	.L382
 4896              	.L387:
2906:FreeRTOS/Source/queue.c ****         }
 4897              		.loc 1 2906 13 view .LVU1441
 4898 0044 3246     		mov	r2, r6
 4899 0046 2946     		mov	r1, r5
 4900 0048 04F12400 		add	r0, r4, #36
 4901 004c FFF7FEFF 		bl	vTaskPlaceOnEventListRestricted
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 164


 4902              	.LVL426:
 4903 0050 ECE7     		b	.L383
 4904              		.cfi_endproc
 4905              	.LFE39:
 4907              		.global	xQueueRegistry
 4908              		.section	.bss.xQueueRegistry,"aw",%nobits
 4909              		.align	2
 4912              	xQueueRegistry:
 4913 0000 00000000 		.space	64
 4913      00000000 
 4913      00000000 
 4913      00000000 
 4913      00000000 
 4914              		.text
 4915              	.Letext0:
 4916              		.file 3 "c:\\dev\\tools\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\12.2.1\\include\\stddef.h"
 4917              		.file 4 "c:\\dev\\tools\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 4918              		.file 5 "c:\\dev\\tools\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 4919              		.file 6 "FreeRTOS/Source/include/list.h"
 4920              		.file 7 "FreeRTOS/Source/include/task.h"
 4921              		.file 8 "FreeRTOS/Source/include/queue.h"
 4922              		.file 9 "FreeRTOS/Source/include/portable.h"
 4923              		.file 10 "c:\\dev\\tools\\arm-gnu-toolchain\\arm-none-eabi\\include\\string.h"
 4924              		.file 11 "<built-in>"
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 165


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:21     .text.prvGetDisinheritPriorityAfterTimeout:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:26     .text.prvGetDisinheritPriorityAfterTimeout:00000000 prvGetDisinheritPriorityAfterTimeout
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:60     .text.prvIsQueueFull:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:65     .text.prvIsQueueFull:00000000 prvIsQueueFull
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:113    .text.prvIsQueueEmpty:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:118    .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:163    .text.prvCopyDataToQueue:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:168    .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:327    .text.prvCopyDataFromQueue:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:332    .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:392    .text.prvUnlockQueue:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:397    .text.prvUnlockQueue:00000000 prvUnlockQueue
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:522    .text.xQueueGenericReset:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:528    .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:722    .text.prvInitialiseNewQueue:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:727    .text.prvInitialiseNewQueue:00000000 prvInitialiseNewQueue
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:787    .text.xQueueGenericCreate:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:793    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:912    .text.xQueueCreateCountingSemaphore:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:918    .text.xQueueCreateCountingSemaphore:00000000 xQueueCreateCountingSemaphore
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:991    .text.xQueueGenericSend:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:997    .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:1407   .text.prvInitialiseMutex:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:1412   .text.prvInitialiseMutex:00000000 prvInitialiseMutex
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:1460   .text.xQueueCreateMutex:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:1466   .text.xQueueCreateMutex:00000000 xQueueCreateMutex
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:1505   .text.xQueueGiveMutexRecursive:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:1511   .text.xQueueGiveMutexRecursive:00000000 xQueueGiveMutexRecursive
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:1609   .text.xQueueGenericSendFromISR:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:1615   .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:1921   .text.xQueueGiveFromISR:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:1927   .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:2232   .text.xQueueReceive:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:2238   .text.xQueueReceive:00000000 xQueueReceive
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:2609   .text.xQueueSemaphoreTake:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:2615   .text.xQueueSemaphoreTake:00000000 xQueueSemaphoreTake
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:3046   .text.xQueueTakeMutexRecursive:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:3052   .text.xQueueTakeMutexRecursive:00000000 xQueueTakeMutexRecursive
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:3163   .text.xQueuePeek:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:3169   .text.xQueuePeek:00000000 xQueuePeek
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:3542   .text.xQueueReceiveFromISR:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:3548   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:3817   .text.xQueuePeekFromISR:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:3823   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4017   .text.uxQueueMessagesWaiting:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4023   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4090   .text.uxQueueSpacesAvailable:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4096   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4167   .text.uxQueueMessagesWaitingFromISR:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4173   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4224   .text.uxQueueGetQueueNumber:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4230   .text.uxQueueGetQueueNumber:00000000 uxQueueGetQueueNumber
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4248   .text.vQueueSetQueueNumber:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4254   .text.vQueueSetQueueNumber:00000000 vQueueSetQueueNumber
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4271   .text.ucQueueGetQueueType:00000000 $t
ARM GAS  C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s 			page 166


C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4277   .text.ucQueueGetQueueType:00000000 ucQueueGetQueueType
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4295   .text.xQueueIsQueueEmptyFromISR:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4301   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4362   .text.xQueueIsQueueFullFromISR:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4368   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4432   .text.vQueueAddToRegistry:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4438   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4572   .text.vQueueAddToRegistry:0000005c $d
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4912   .bss.xQueueRegistry:00000000 xQueueRegistry
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4577   .text.pcQueueGetName:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4583   .text.pcQueueGetName:00000000 pcQueueGetName
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4664   .text.pcQueueGetName:00000038 $d
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4669   .text.vQueueUnregisterQueue:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4675   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4754   .text.vQueueUnregisterQueue:00000040 $d
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4759   .text.vQueueDelete:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4765   .text.vQueueDelete:00000000 vQueueDelete
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4828   .text.vQueueWaitForMessageRestricted:00000000 $t
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4834   .text.vQueueWaitForMessageRestricted:00000000 vQueueWaitForMessageRestricted
C:\Users\arge12\AppData\Local\Temp\ccsVL1nv.s:4909   .bss.xQueueRegistry:00000000 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
xTaskResumeAll
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskGetCurrentTaskHandle
vPortValidateInterruptPriority
uxTaskGetNumberOfTasks
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
vTaskPlaceOnEventListRestricted
